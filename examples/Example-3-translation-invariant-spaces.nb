(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    534758,      10842]
NotebookOptionsPosition[    529493,      10669]
NotebookOutlinePosition[    530401,      10701]
CellTagsIndexPosition[    530269,      10695]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Example 3", "Subsubtitle",
 CellChangeTimes->{{3.561784903322611*^9, 3.561784914734438*^9}, {
  3.5855442449811163`*^9, 3.585544245709262*^9}, {3.585544364225713*^9, 
  3.585544364400597*^9}}],

Cell[CellGroupData[{

Cell["Working with translation invariant spaces", "Title",
 CellChangeTimes->{{3.561784933316359*^9, 3.561784950590352*^9}, {
  3.5617882095607243`*^9, 3.561788217874277*^9}, {3.585537636231443*^9, 
  3.585537653026313*^9}, {3.585542528085225*^9, 3.58554253224314*^9}, {
  3.585544162354004*^9, 3.5855441725463533`*^9}}],

Cell["\<\
This example demonstrates the functions the MPAW Library provides for shift \
invariant spaces and introduces the Box spline based de la Vall\[EAcute]e \
poussin means.\
\>", "Subsubtitle",
 CellChangeTimes->{{3.561788081362376*^9, 3.56178816956818*^9}, {
  3.5855441822319193`*^9, 3.5855442385494347`*^9}}],

Cell["\<\
Author: \t\tRonny Bergmann
Created: \t\t2013-08-15
Last Changed: \t2014-12-13\
\>", "Program",
 CellChangeTimes->{{3.585540461223832*^9, 3.585540470991144*^9}, 
   3.5855435520430107`*^9}],

Cell[CellGroupData[{

Cell["License", "Subsubsection",
 CellChangeTimes->{{3.585537355831193*^9, 3.585537363963532*^9}}],

Cell["\<\
    This file is part of MPAWL.
  
      MPAWL is free software : you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
  
      MPAWL is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
  
      You should have received a copy of the GNU General Public License
    along with the MPAWL. If not, see <http://www.gnu.org/licenses/>.\
\>", "Program",
 CellChangeTimes->{{3.585537405416844*^9, 3.585537461767535*^9}, {
  3.585537502312166*^9, 3.585537513376918*^9}, {3.585537694042321*^9, 
  3.5855377067755623`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Loading the Library", "Subsection",
 CellChangeTimes->{{3.561785031749501*^9, 3.561785066774623*^9}, {
  3.585537743617692*^9, 3.585537746062161*^9}}],

Cell[TextData[{
 "The MPAWL is located in the parent directory (see ",
 StyleBox["MPAWL.m", "Program"],
 ") in order to load the library, we add its path to ",
 StyleBox["$Path", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.585537766270393*^9, 3.585537868296885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"{", 
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "to", " ", "actual", " ", "directory"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<MPAWL`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.561784454440884*^9, 3.561784464446355*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["defining a function", "Subsection",
 CellChangeTimes->{{3.585542592071444*^9, 3.585542604374295*^9}, {
  3.585549561215548*^9, 3.585549563972036*^9}}],

Cell["\<\
We use the approach of the Dirichlet kernel, cf. [1], but compute them in the \
direct approach by setting\
\>", "Text",
 CellChangeTimes->{{3.5855496681710863`*^9, 3.585549683224247*^9}, {
  3.585553381748921*^9, 3.5855534311473627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mM", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"32", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"MatrixForm", "[", "mM", "]"}]}]], "Input",
 CellChangeTimes->{{3.585553587517105*^9, 3.585553595593182*^9}, 
   3.585553664572351*^9, {3.5855710078579617`*^9, 3.585571015371367*^9}, {
   3.585573225172524*^9, 3.585573230751326*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"32", "4"},
     {
      RowBox[{"-", "1"}], "8"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.619280120163295*^9, 3.6197912034213552`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"Det", "[", "mM", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5855710213713284`*^9, 3.585571024558943*^9}}],

Cell[BoxData["260"], "Output",
 CellChangeTimes->{3.6192801223315287`*^9, 3.619791203710903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"max", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "2"}], 
            RowBox[{
             RowBox[{"Transpose", "[", "mM", "]"}], ".", "#"}]}], ")"}], "[", 
          
          RowBox[{"[", "j", "]"}], "]"}], " ", "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}], "]"}], "+", "1"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58555346834524*^9, 3.585553512566486*^9}, {
  3.5855535684619923`*^9, 3.585553585386277*^9}, {3.585553668046631*^9, 
  3.585553676567111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"18", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.61928142255937*^9, 3.6197912037464943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Ceiling"}]], "Input",
 CellChangeTimes->{{3.619281572959341*^9, 3.619281575026232*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Ceiling\\\", \\\"[\\\", StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"]\\\"}]\) gives the smallest integer greater than or equal \
to \!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Ceiling\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) gives the smallest multiple of \
\!\(\*StyleBox[\\\"a\\\", \\\"TI\\\"]\) greater than or equal to \
\!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Ceiling"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6197912040278177`*^9},
 CellTags->"Info3619798403-5813794"]
}, Open  ]],

Cell["where in the following table the origin k = 0 is at ", "Text",
 CellChangeTimes->{{3.585553787679866*^9, 3.585553816110931*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"origin", " ", "=", " ", 
  RowBox[{"max", "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.585553801986682*^9, 3.585553817824971*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.619281780758877*^9, 3.619791204117198*^9}]
}, Open  ]],

Cell["\<\
This table consists of the (not yet normalized or anything) coefficients \
which the Dirichlet kernel is based on.\
\>", "Text",
 CellChangeTimes->{{3.585553838527874*^9, 3.58555389766506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ckDM", " ", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Inverse", "[", "mM", "]"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["k", "1"], ",", 
             SubscriptBox["k", "2"]}], "}"}]}], "]"}], "]"}], "\[LessEqual]", 
        " ", 
        RowBox[{"1", "/", "2"}]}], ",", "1", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "2"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ckDM", "]"}]}], "Input",
 CellChangeTimes->{{3.585553678407189*^9, 3.5855537658829727`*^9}, {
  3.585553820961238*^9, 3.5855538234833593`*^9}, {3.5855539034054823`*^9, 
  3.5855539185037823`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6192819381318417`*^9, 3.619791204180808*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.619282011680572*^9, 3.6192820142141314`*^9}}],

Cell["The function is given by", "Text",
 CellChangeTimes->{{3.585554011793201*^9, 3.585554015870928*^9}, 
   3.585554217987638*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dM", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ckDM", "[", 
       RowBox[{"[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["k", "1"], ",", 
             SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], "]"}],
        "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["k", "1"], ",", 
           SubscriptBox["k", "2"]}], "}"}], ".", "x"}]}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "2"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.585554019113751*^9, 3.5855541244858313`*^9}}],

Cell["which we simplify for plotting by", "Text",
 CellChangeTimes->{{3.585554163939171*^9, 3.585554169892911*^9}, 
   3.585554217988338*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dMTerm", " ", "=", " ", 
   RowBox[{"dM", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.585554172897964*^9, 3.5855541933285646`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"dMTerm", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.585554067271675*^9, {3.5855541312422943`*^9, 3.585554149437004*^9}, {
   3.5855541864575768`*^9, 3.585554203522628*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
qf+yurZEvRhyCHr0LbM+Z4l6NOgxDurXrM9Zog7O6tcSdXPID+jRX836oiXq
8qDHOKjjs7q2RP82cNCjH4DVryX6wFl/tURfAauPS/QhsPq1RJ8568eW6HNg
9XGJvghW15boY6f1sNCj78LYX+eoef/5w/fnuTOca4C8y9S/q39POEj9//i7
ky1/c/bsGcP6ih200Gp1V/fYkEsa60QO2qXL0a/srfT+CfwefTKYB37vtKLb
4FqB5IfQPKdavouEc0nUF6E9SChfUP8eM+a1o96aGWlfKH9L82kTWS+mdqb7
gUE/es/qvSWPPCV9jueOtna/lU+/J4qea50ww6ZXx7yEY5w1bh8nFC3jTDje
90b4TN/htUKoLoLxZ6wYs9RVP4dI/r61a6kfB/elC6Mf7qA5+bUZlJ5DP1+A
cVan9vAYl+m+C4yTPGTE9xEBwaye5aC5l29XqEGm7xaBvmHIH5sX7XNmeWCz
nOQLOvEb3c8cSeu5a1HU1v4ueh4TOPqOWJ+SdsOlocNdayfSDzT+l8FhXpnu
H+7k1SIqf4OsmiaW+s8bE0TnRzDPJgsae449S98fIX1868zGUQ2K5WF5Y0ft
nRqXlJPObwZSnu/cqZ5ntr/Vv/eJ8QMWjZ2T0bgk2UHw7a81ASX187NRNP6B
TxmZ7nOmPhTtzcKMPJ3X/yOY/tHQ3wV9BbzL0QsNQkL/o9+0M3WGdao5Ub/P
HLhvYNnjbdtTvYTm8ybFu5gr3SMUR+Pfa77t1rm2+v0gGCep9rwxXkPfK2Nc
46DFhI8t2aNnAp3jpvMvc0q5egbRvU+Eb1ndMPzORl1PYpzeuZdWq9FXj5ew
XujrM/bHOmrj3W+1bWqWN5zrwfzrFjyzYnI2/R4BPDeu1vgjLbK/J30LvZUn
6OaBk43080vUr3UiMmFnCNW16bneLb6tW2h+Ls51Uh9R14Y7a9fF96ztaZxD
nQMWFa+u+zF43xaPm131r3ySxgH92egDQZs8PpP9w3P9Ng9+U0D/7h7RH25R
59D3bbTepF/RP8n6D7Uh7q+eXBn5lfhO/Rj9C33rHYz6pS3hPQJPmYrnp3uD
SV8GjQ4o2SyTf4u/8+rtb/X4apoy5q9stfJBzy6UnoG4xkTjnDh1L35Jpr4m
0IdFHBjV7xzq13Hk10xo+XRL0BH9O9AYZ8yyEo729bPTuVk6H7TDp+IJs/9p
rIfaan3WiL/WtHqijPkoW83vxvQpNpm+e4JxYh27x3jHoL8/kOZTf15PV/8J
xUhv0DmjTkHODnReKZDyggEt3+0v6F6TzomD/tn134p5ZvJLMR8X+TZsZnf9
u0gYp0//FxOWmOMayC3GGTly7pF9Q+k7i9QXZPv6wRGvkp9Ij8P+NGzQ/vni
rt+VMS9qpR2eVHq5W/ZEVu9IU0tcnw6aPIbuP6Txh9rO6Xz/ezLhWP9de082
n9bSmeSY+o6eV0xbp8+fxsm+cOPSYqE/yN4Br/p1+K1Fve2pnkXneidW8E9p
nJ/O81K/RPB5q6BbX8neUT/M2Xonb7k8JPuIcYadOOk97qk9q7NbaalTRv7/
d0aMdbQ0lWdgekSt8+if1/PBH03Fr2TEBZPcUv7gapnieZ+9ILkF/f1jH64l
nCmrGfO3Vtqicn9umjGxlGbM01ppx7o5PdLvG4yi+RQKWPxqa7z+HT2M38Sj
+FX7I/r5U8zn0N1Nrwb0yEZyCzz/srMHNi6pTudOMU5y6X3n14+3JT8Zzx28
YXlytrbFyY5gnGgnp3j3Avq9ZHQ+btDSuADlIlkeSaGfH3qS+mS2T/s6smJe
Vscx8/979Mw4qX+3AH5Qh03n886hPnkHwmt/cZ1jFa1/Vxrjz8tb3em++bnG
ezaS1NS/j/8Y1S2XNPqZKepKz4PX4//znY4k5aFa3rPxCKH1AJ7yo4VzpYsm
5jemqL+t/Rf/vF/IWN9PUS12P33cKtN37jCOyanam69nnrE6forKNfWR9Tg6
922i50Y49HBv4XOd6LGfqrf6vdLGQy/IrwP94YaF0q6Woe99kLxvvzlk2YWa
6croj6Uov0I1Z3fteYX8OowfVXJxlaw9i5G8YZzapx/d2XNQvx8Yz/X2O2J3
eZeVNPpjKWrbE7srQ+g7dOGE5y12vF1jujdbv1fg6ufgN08yfY+P8sp3Vi7b
PSEn3VOA5x6Z9k/beNevzC9KUQPvxP34ud8htyRX7Wt9TstN3+kg3Gf8Bqcn
dfXvN+G5lTtN8Ay9d475LSlqYoeUwHr/+U6KOf4uN/jOtwfP2Hdk4tXvj3xC
yySRX0I4zvuweoEa3cqnevev2el+DeBTCiy7uL6Bfp8+0V+7uzRX5GuyK1h/
P6cbd0tY7SE/DPKVx3b0rSnJ+vc+MU751d8vpVbVv7sA/dR2Qfnfl1Bfhx6X
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
8g16nKvCOmI+OH9nrBckiYXN7izqPdeZ6T0z/y3nB/F/0OO8GNYXOM6jsXuV
BeIgFpcJu6o7HY8K/XvrtF6W83HQh8ARZxntWprAeU92T75EvM/unxeIE7F/
6V6aM/Obj6BzuGnEZ5wHZPfbS8Snxn4za9kzqcar7k76d0kxDs4nYv8Cx/lK
rCPdK2U5B4p9RfO3nDO1+vRH2UG3UoVT3bHXnx74ISo7F6/+sdQxkj/Qb+/t
WzLQS/8eOXCctwWfgSO/wb4nKOvvaBvjtUP/HiTwvwOqLjkwVP/OBN3bY8nP
GPWtvUS9A/uX/Pr1WYNWqK+UFwDOzh1TPwLOxWOfgv7z/YODl//3OxSyTcCq
oAYVqe5M46TUPHAibUcO2nc0f8O57DDKF+IcN9YLOM6Jg//AcQ6d5a/ksC9+
o1rSvUkUF8oOfhv7bhuq14ORX0Q+HHYfOM7vg8/4O+Qtka8Ajjwk+I9xcP8A
u7dEIi+KdQE9uyeB5Aj5WOhb0ON+BqwX1eMseWN2H4hEnhn6E+Owey2IHnls
rCPojfds0H0dEnly2E3Qez0sNar6pIrkTwB369uw9dpKecnPwTjI20MeQM/u
LSF61AWwr0GP+1LYfRoSdQf2XVRZIuROXL8eV0negF8L/1Dw5zlllleXqHdA
T4Ee98yw+ysk6iaQT9Dj/hx274REXQb/B73TzMUP32X6rg1+b6wTJVIdb3Xt
wfcKBjxWbF9r81S9yV70HZY4kl/Hcmf8ip4MJ72NutaxORfafHWn+9JJvgJT
6ru1/Et/T9Bf6j30zqCX72iedM7Rv8eFN7GUf6H+gi7b9p/+cVxfX8jjyf03
7HrQ/bTw0yNVuWxW4/JZxbK+03DV/3pWz4l1nPj33wXo2X3sokH/93Pae+vf
jwc95sPyPGLUj8N1m9H5DvjVcQL8YffVi1frX3c64fdZMf6IkGmb1q7LxB/Q
f+gwPPe2KbbER7w31sWY/7GVWF9WJ5IZw+ce/P2E/h0F2JNlPUfl2F5WP+8N
HPTAwad3zUoUSK+Xnfx44EVrb3npXiqD/Gn4BfE5psyulisXvQ9wrenoR2I0
+SF07pjxgezJulwF5x+PjWT9YPFqW+7GNrF+Qey+kXgFPrN7d1X16gu2xl5M
Z3ojSu3KUrqSt7feNw8c62vs6wtXWsuHp57XD2f7Oko1v5dvikejnFT/gJ6D
HLLzpwL0xvpRuMD4xj72cAH5N9ZDowTmz74PK/C+7LsGAvuUfR9BgJ9snwrw
H/zFe2MdmZzIfvmXL93z3+87S8gJngcccgV/lM5JWPQSuxdIQm6N36lx0Dp7
TYpe3Jf6ashvCjpebd67dgGU16bzEBY9b7zn1kHzDatUK/5dEPUT4jnrFroc
r2O276yPSxu/bX/qa8eivP9KG1n+7bjZ1/MRTt+rikgLijnxit+npxntoP6d
k7hCg313DoR/FknjdFiy0C2pQALl40APOwv9BfrnP8qfCRytxxuYf0gLl1op
8/S4F/Tw66Cn6HtevXN+bjO6EMt/OmqP9t4fbE39eCm0j68MfLa1YSB910y/
f2jI0o/vAiN536C2rW2fFN+B+n2LoD9wpszLUwuTSd+B/tCau3P9+9K9H1QX
bqM579owST+vB7mAfwh+UZ/L4eM588zUv/cGXA6YXnlHhQe8v1qD3w4cdqb+
2N+qnMpK/XxE32d64IWf90+y+Eir/GhRnb/M/jCeBzygUJrLIrPfu+3Btb47
faPo99qtQaae+U6SHOK55cW8dcNtXUmfYpw2Uw5P3jVU1zsYJ6jFqvvxPa/w
/ahh/7L9qMH/B45xvrUyvXNpk8jsna12rXa5O2l0X00KjZNWcuGGseb3xT4n
/ljiRON5QGsNcR/khO7xvdrKb143vX8e47C4ifqDRgQ06l+pKMVNhL/eX/xm
PlviO+Vl2w67NsKu5HuSK4w/a+35/aVj9P5CzEe+vvlnSfc4YYkflSV+VIgf
jfbISnMvfsbX6y+qq1I9BPE76PB3vqfbhO7Y8Yh9r9xKWx18dWFIbBzpK8oH
h77bon9/LVK//2dA5e/Nq4cIlvdQZ+yH3gg9Rf1IhL//J6a88+8elD8FbsyT
XKI45sLl7JW8jyOfHEj0E9fY5/sxthG/N1gh/wMc73W00fyGbj6fyK8C/fDd
ybE+HV1oHDx368CRXc51wjnAFKLvtjP09KA1+rkd8CG4wcgaT/T7fygPsTfO
vVQx77fUtwy87qGOv72hcwFWlA9++XrfstI9v/H7hJXdsAq504+/IDkBHtZ6
auKnWx/5+Q615NbEYq2Pv2ffD0pR287t2dSyyWfSP9j38A+hZ4CvHtMtzyi7
CH6+SfXJ71zj57lmyD35S7safWrWJoHkCXjCjeWDH1T9RPECfiKvxfJ+Kqjb
P00XrC7IvrudonxnrYoMdUZ8Quf11IY7D/6+ot+fQ36E1YwXU0/r+VKKY4z5
Uv3+Wj+vFm0XfcpPdhPj5Hrb9+yIIiVIPkGPfKCxvytFBRW+9vmGc1ae91P2
88dVOZ5H/14F6PMuHzbkZ7807CzlNetUuJbrgp4PJT4cOdrwilnfsvNKquTh
+jN+9nOy80qquDY323KzP8zuaVfIhxvPkyaqhP43rPwz3U8I+jepTTbspLhC
70OPPr6/7u6miRQ/g/689fWarzPlA0E/ZcycWi8rpZBdg3831C7v9+4t6Hwr
2Z91Z9x2/U33OMWRP5t1z9IKf1O9lc7tqhvLbml7N6ZTHIE4rMq8nQP3lSxO
fgjoK/cv3E/2Qj01hfC4sfNDvb31eyAxz7i2t5+lXLdjej5OLZo03nEMnVOz
Inr/3d9yXT2i911j/NOiSNvtme7rAI74kdX71OSovIGfd1C/KOEPbDbPcnut
36dE9Vab4R1qafp6wE9EHYfVldS+LnW3NG5bjH03KlKtm+h7/OWaIrT/QR+T
6pm1E8URKeQ/rh754Uu9+86sTyZSPW3lUGTBlUI0P/x0cHr+MWtiEX6fgMrm
3HBsQtHmFG/juYHlfp/19YLuzwNHvYydv1b3WjTved5Nv2ceeKfExITs+rlj
Ggf1OFbnUhea2iwfu8KBznkCP7NoaI3eOh+ojrx0YdX8je7TvYWkVw4MvDbw
ubP+fWuse64lqtxls9wCx/jHlk78Xj3wPOWPgKPOCP1Pdf9aA/JZL3Pi964o
1KONeKAKKFJ+5JxUF+rTRX5Oa2STsvpRIvnZGGf406eDqr3U7+3Fc283rTv2
53ej2PeqFOqwkBPgOyvcyP4/vkul0qZcSBlpr/fJAA8YvNftspneWBe+pFAv
xryBz5LLcx/zGcW/Y6VcXmU5MH5GfarHQX8DN+qNSwr1biMeqBKyBuf4J9O5
QozD5k845g/9g/FDKpmexMcU14z160D1tNDMQxcCCrH7VQLVudfZy+5f/J38
EIwPfrL7UsTRZS+v9xYuJCfA//c6Rgomn+TvQz5Z/4ZgfRR0ngbzNMpDoMB7
Gf3VMFHY6nTozY7Z6Fwexu8TdG6Wa8IH8ufA78D2kwpW3JIumP4Rxn1H+kpg
nxrrgIHCuI50z5Ww+uI79lAXvb8H88w7+9gQPX8eSfTQS8Y6b7Bg+o1w6DfW
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
0k98fwEfU6i8iqzbinHw/4NF3iXm09aVjUuceJ3P7T/k374wbVCVIy0i+Bw+
o+ddTfUPgW8nP38Y8eus+achenniSYp6j6phoUZLT3+HE69StSFc8CdV+anm
eqx5ByFqrH7hl2/zC/+8Ctxk8huFP1/FrDef18rnD1ER5De25imE6NmyX/lY
MaAA86MwftDzbqX6OH8RdYBD9HW0HrGfan5nk/9plbchukNI0e2PG9txB/rv
KdWLtvrDQ9XQzFV2DXb8JPJ3QtUV4luK86PO75vfx3VQqpCToepr4L8rxxUv
JvLCQtV78pPj/AAPnRI4bkilnjKfXXmvM+tmW+vWhqqNdG6tef3h6j2dcxHH
Ua5bTR6viPuo2GPm92XNPwpV7bucbFzgrIvQe1+q4BzN+7+tl1az8uhi1WD6
rkUcVk0hPrOI26re+U05Y83ream2XV/p921+7A/wctc6dO7wXf1P4NHLF6aJ
/2488la6kz/Tum9RKp7khpBvymG+KYdFPVi1iO4FwSdXvelesNY3iFMRi0y5
Z9XT4tWEjuY9Je5rtZPuNSt/L15db23eg1Z9Pkm1GWbem6LuhBpAeWfW/MR4
lXZ/n30Ryx1ZTgIv4mD6ma15iPFquTH81PVBXob1fCaqSPL7iToS6grda8Ax
Tx7SH6z6dpLqXdPUN8T9rmbnNvUWaz5jvEo+dzHTqypXdev5TFTNRF8A9Bnp
RTxVof+o/gdMPUTogSpohamnYd+A93M+dbLpUgc+V8DXF3g/xWOiPX8B8+fq
ZupXQg9UmUnP5PgF/FSrTL3UWl/oo6ou6olx/+sEU9/DeMz/K+nDGI/5/yS9
WuifqoHo44C+Kv7Ej7Xylp00nfR5nBPuy/2vx5bDF/KxXQb8neDBgmfbi/R5
4Bg/iOwUrBP4pGPDA9Ncs/OX5pF/JpjqVwOHX2sU5Q1ZeSYuWrE1I5sMO+0o
7SbNj+waYV9rU8hew3cHPCx96aAEm50ueJ7aKsp7Ao66tR/IDsV3h3mqkH8G
5wrr3Jbnp09vc2Zn+cZ9ZyYdnFbPpYDww7tqzX7M29SGEm8TOPFItTd3v/37
f3ik2lQaL+xfrT75Aaz6ubNWV9RJA56Z7FDgWH/CTdMvIexi7Qj5MXAO0U+n
k+API2/3Mdndwk+ixZDdbbVr3LRMZNcLv4e2hPJ5MR7zLCH/AOQA8Nu5X5Zp
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
K1qy7/DN+wdwx2HQOchyILpS9W7yHwnZADk=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxEnQf8ltP7x5/v9xn3s/dTVJLRkpBZFEIIUYgie0VWMjOSlVRCyF6RLXtk
laKMUNmjUCGUTfb/8+5z/q/f69W3cz3nPufc5z73uc+4rs/1OescftLeJzbH
YrGoEYvFFb6dj8XGNsVip+RisRPTsdgJ+rtLv3+rxGJFJZihcJX+Zituc4XD
dP0nxd+h3xeVYrFfJP+gMk5V/PZRLPaQ4v9RXE5/f6n8i5Kx2F6SX1N8D+X/
U3F/KXynFou9orgtJB+vNL8rzWP6fZrK6aZypkk+UvGLFP+A5F0Vl5f8t/Iv
LsRiH+sh1tZ9F6ZisVZK96F+31SMxT5VuI7it1bc60o/UXmXKM36+r1E176S
vIHkryRvoXCu0oxXmo0kvyL5UsknSP5T8pOSv9a9littB5W5vv4uVtxwtdUy
1XuF4u9TuK7Sfy75Ql1bWXEbbKDwF/09J3lj2k956krzpMImtdsGkmdJ3k3l
d5T8kuRX9NdV6TdV+JraZ5HK3Ufh3kqzudLM4x0ldF3yJkp3az0WO1/tslJp
TlD82qrzxoo/TnJbyRtJfl55OlMHhe2yake17y76e0lld1e6v3XtaKVtpb/W
kr9XXX9U+Q8qPLTuNugquafSL1WaK/V7HZWzRPLlpFeY1d8vei9fKbxacT9I
PkfPuIPuc6zC8/TXQ/V8V+/nV5X1gtJ0U/iT/p6h7RXurvK/U/6b9ftn/S5I
flHhicq7qco5QOGtGT2j0i1W/VaqTbZWmsF6J3MrrvsHZfVLpTtL9/pF91pL
f1vrGddX2leV7wg6vPI+oPK2UPwy5Vmg+KMUn1D8w5K3U/xKxT+se52icn5W
/GylP5T+rPjHJR+u+O8kz1P6IxXfTHspfivl/UrxsxV/mOL/kfyo4nfT33LJ
uYS/qSbJZytNJuG2GK8676cyl6m+5ym+oPiXFH+j8g1Q/HuSr1WafSUvUZrZ
FZcRrype6dsr/bv0OYVVlV+SfJXSr6ffFT17H5XTVX/Nik8qf0zxv6vdvqz4
Ha6jcDrvSuX/qN99aX/qq/L7qfx3VOYt+n2E0rRSmquov8pvI3mOyhugNO8r
zW18L8o7WeH6Cv/jO1X8Z7rXd/p9mMJUC303ku9Xms4KT1aZnVTOVP3+tuJx
paPCbyruV88pHKx+eIPi20v+WWXOV/x7KivPvSUfL/kG1WFDPdeHSnefyrxX
f19Inqz4Tgm34e2KG6Z7fSz5bsmbKv4zya+q3LLC3TUmPqf0h6jM3/T7Sj3j
3pJPVPlzGA8VV1Cb7K68G+mvJW2nOhysNCOpg9KfoPJXKG4i367iFyjNTqpz
G/WRZ/UNDtC32lf3HaVynlKarpJ/UppnJW8i+VfJz6ns4+l7klsp7/cKpyjv
eKVpUpr5+r1c9/hB4Z2Kv1nxLXWvRfo9X99AO8W1VDvfmwt1VDhc5a2SXNPf
Q0rfQeWsoJ/kPE7nFe6tsfEWxR+vug5XHbooz918I3q2CQpHKM12yvum7jVJ
v+/XN7JA8kqlP03XlqqcPzU2vKy6Pcr8oLhdlP4mydfrb7HK+V5pOykcTPvo
707FX803onu9JfkTlXcffUFlHc23rt8P6vfHynMr/U5lvqW4ayV/qTT9la+u
33n9/lz3fZ93rjRnqczHJV9GOl1/grFK6c9U/Olp1++zcK/zlf48tfNw1e0H
yUvyvucFkk9WHb5Wuqf0e1+93x9VRkrxO6mMF5kn9fs8yd8qzdP6PUTpP427
3Y5VfTpL7qvytle7JPTXV/FZ3etzhTernKuUPqE2X6jfzYqvKP1WSn9dzt9r
VWGk62XF/6d7rSP5G75N2lTX4rxThVXF15QmSX9TmyxWmGIcU93a6trXkvMq
f6nCW5R+qu7bWvFf6ndJ4ScKE/rbR/38YV3/Xd/C5yrvYcWt0H1/VZ1K+r0F
c73KOVJt9a3S9Vafmaj8h+n3nbrvIIXbKs9mih8meSDzsfrklqrHQWq/K5X2
CMXtqDRnqpyjJX+ncj7RX0/F9VTYUL+6Q2Xtp2v9VM4NyjNU8gr6E8+nsIXK
OkBxS5mL6ZeK70Uf1n2666+3fj+h3xWleVzhD3oXJcmPSd5P991S8luSD9D3
OETlj9P3uJXif1N8Fz3jTRpz9lX8JYq/WfJI1We50rZT3aZLPljpdlaZOyl8
hzqrnn+qTbfR7x2Uv53C5xT/p+pyi9L30O8zS+6HF/NuVU6kPDsr/l/l66Ww
vf5Okrws9LdTJC8P/WqfkufVhPK+WXTfGy/5G12fLvknXbtY99pW95qp34PU
1zpLniF5nOJ/U7qXWQcobpbC35V+mMqfI/kR5lzV+VXGPJW5QvLzfDuST1ea
Fcr7LPOCnr+X2mSk2mRHpdlScd2VZg09x76qe0/9TVH52yncXNfOU9rdJW/F
96t02yjcRmFGz36/0vVlDcQ8pfJ3Vnl7qPztledslT9E76K3ri9U+o0kJyVP
kzxa1/tJ7q6yZirvusrbR3mvUT33lfyO4q/T805Oe048S/GphNdhy9QmV+q5
b1e4VH9XSL5NYRvdbxxjgfrpupKvlDxN8lqSx7P+lNyXfs69VM5U3W9n1k16
D3fwbbP2KPm5LlSaTejzynuF5IeU9568++2K8L1Q5g5N/g4mxP0ttK1aflDp
P1KdhqluE7MMNvreFN9FaS7Pew3JWvJTXRuhy1cr/ER/p0iexDPlvYZkLcka
8MywDmxUXbfbVP5teX8vfDd1xV+g+FsV/2+z05+kstZT/FV8/4r/WOUer7gr
FK6pb+Fi1v9lv9uL4n6/ryl+Wz3/qwqn6H1dRb9W+V/q90K1/2KVd5jaaB+l
3YP6830p/ScKB+gZb014vHhEfeA95mWl/0npDmXNrnCy4u9X/PuKv1ryPczp
kheVPF99rzR3Kn6O4j9V/HsqdzeV/47COxT/EmOc4lvp9xjV+U7Vv7V+Xyb5
Xskt636W2yV/oeccq+e9SeHNefdb+u+aKm8s767ZY9SlknvRD3VtqNI/U3Lf
pH3onz3LfnfjVcaaVae/W3Hrqd90Y73O3K26Pc66hecK4wbjx7pqk9G8d/1e
S3WbJPkR5e2i8DrWY7rfDTXLXZX3O9X1IcU9pPAmxV/PXkDxK/R7muKnKZyh
co9nPGDtoN/PK/5xnlH3ekDpj9O1OyQ/KHmY5B917QWleULhdSpzMvVRmV/r
962Kv0fhWc2Ov1m/71aa2yRvrTSfqc63S+4p+S7F30qbSO4ad5oH+A4Vf6Pk
TRX/sOo2QPc8VXV7kLGA+6t9FmqcuIH3ovT36V73syaU/CV1UninwvuVfnel
P055O9COStNe4Q1hjGKsqtI+7CmUpyb5EcmzJP+nMs+VfHrM/Y8+z5zFWog2
37XJY/N5cY/PTarPCMnFZo/55F1P8s2KP1vyqTGPf6PiHgP/zFg+U/GrMi7n
DMnXqk6b6frL6jPfqz5PKe5Rhc8p/mjyKX6lfj+p+EcU3qN7Pcy3qWuPNbv+
J0vegrGKNarkR5ud5iXl2TTutjpW8ZswtulvKG2hdplKH6ZvRJYfV/otQzkz
JXcL6Z+V/LTqcwhrIbXtl0p/J2OC4i/RN36m7vcz61LJIyX/KvkxvdMP1Z8/
V/nrsF/LeK48ueA1wtesgdNeDzAGHVLyWLgDc03BY+I3kl8seT/bW/c/ouCx
5n3SqOx2cbddC7XJf2HO/Uvl/ZX0PHtRwvPC1krTWvcf0uwxuofSt0953TAm
4XmHb7uTnq0137Lu9YbK2UvX8kozWO3eTX8b6W+u8lVV/tuUlfc+e0vVZ9+C
9+OvSz6u4DXL54xvOc+H8xWemvD+fVPlGSu5f7PXOjHV7b+0x5N6xnPoInQC
SpPmu2d9qeu/pr1eOaDgvriAdY3q3E7pSoqbpOsH6928qfQHKnxDYZq9geo7
KO59biVhfQvrw1vVtg8pz80KL1OatXTtbdbN7EOVfrieb4quD1JZnyr+AaU5
QPHfSm6l+w6WfJrSTFSauvLOVfw01f8h/f2k+k1Fh5T23mqqytgRXYvkd3Oe
K7ZWmEx5fmd82ynvOfNVxa+n+HTK66q4ymvKeI3UUB0W8h0q/22S9497f3dU
wWPuh8p7seJbJKxrul75rtPfu7wDlfe0/t6X/JnS7J3wWvATyf0kZyU/qrTv
6/cvklOqzzEq4wCV+ZLKf0RxBcWdpTR/KP0T+j1EfeJA/Z2kuJU5jxmfsXfQ
9bua/Q1/LnmK5KNYc+v+3+r3/fr9RMHfZH+Vea3in1Lc7fpbrOsbK/5I1mEq
9zXFraE0s5Umj65Kv0uaA95Q2Erxb6qclyS3QAcieQb9SPJKtfkdko9graly
LtLfC7SdwnNZv0quKN0I1iCq89mKe1pxp+j3DNpf93qZ7znh8WUf1v6KW6C4
c9hXSJ4l+QzJB/Md6+8syc8UPO7szd487zHpUJU/RWWuVFkPKs+cnNcjmytc
rnxfp63/ulp17tzsdc5XvF+lb+j3kqTX5KzjN1H5cYUPKe+7it8l4XXhQPY+
Ctdlr5e0bo110n3M2Yprr3AD5W1S3AOS5yhNT+X5l3Vv3GvdX/U5Pqd22Fz1
GaLvYLr+/lT6rnqO9opfP+O9SgeFN4X9yHDJJ9PvJV+X8J6I9eGeaeusOkle
pPAT/a2taz/pvocnrAt4gTrpejfW27q+YbPXbcv51pSmJeOM6rymwqeVZmfJ
rSQ/I7mQ9dz6oOq8PO/1/xjFd1D8RSrrQv1tpu90qNJcwNxXsL7qdqU5TO28
TcLfcpuC9RxTFX9E5LU96V5U/hf097vkDoWg36KeGe+D0KG1Lzi8H11l0IPR
vr8WrUPrVLD+ib3qZugXqtY37IqupeD736a8R0Ve86NzO1HyTUnrQDZW3C8K
d2GuL1qHs4byrZ2wLm171qgFy2fruQ+NPB6yz81Wfd9ddK+vNR/9x3io/ew0
ld0x3Ov4knV1I5X3grrz7Uz6jHU46F4GJ/zse8esI6Tv7SN5g6L1e+eobWep
zC0T1vWhW0VHuIfSnF61bvVL3f8MlTcgpPlHdd5eeQ9R3v7K+0HcerN2Sn8M
a5GK9w536/qGLfTuVJ8Zyr+Pru3P2KW/KUr/reJPjXy/05T+T4VLda8zq+7X
X0k+J/LeFt3mfOXrHeRuRet8R7HOSrgP9FWd5wYdKe31Cn017rK66bnaSP5D
8pKa9Uh7qZ7nVv39fau4k3WvPRPuM52L1peerfIfYexJWo/aTePA9UozQPJm
Bb/fUWr/StXvfE+VeQXrBl3/W2VeWvV3sDt7DaVvIfmyrL+ndRlX2fPq90CF
J+h9fqb4xWnnn13yeuwa1SEdeZ3GWi8qOe/lyjex6u/yT93rUJ5L8jTV4Yea
5/+s+szrfE+Rf2+hOhSYK9RvP9IzHRv33PG7njejcEPV83E971vM2fo9N+05
hWsfJP09Mq+fV3W4Qvd5IeP15F/NnvdzCvfT87ROea24rX7/qDR7pX3v86u+
5/fK+0/R6S/Rs3yVsW4TXWJO/Tmt59xM/ectPc/6SnOIwi4J63f7qPzX9DtF
3654HI0k76v441TGziHd5VWPVat0r6GR9avoHO8qWVf8LTqVqr+VfuhHq77/
HpLX1rUhrKtZz0bWTaPH/FntcKjktVTudMYj1stq1z/oQ8yXKmMz9rNxv5uv
lf7EuPvB5opfpnboIPm3MJa2pU8oz7YqI6vnXan4k+MeK1dIPinuMXS80uyg
NDmlObrm9n5E9czpHY9QOVN1fWtdX0PxT6lev9ZsR7kBvZCeZZjKuZj5GntC
0AP0Vn1u0+/BzE2SN876e9xY6QcpfhuVt77k3Vn/SX5Z9ekfxoEti+4/F6nM
e1h3Kb6H0jwseaGe8SGFs6iTyj5W9ZxX8fy2VH1sqco5XnmrrCmzrltZ8rzQ
V+knf6v/HBd3P5yp+Asif5uvST4i9LNXJfdLu38uVJkHhvHhxrrL2w+7Stnv
Ypzq+bT62BZK/wdtVPK39qTCb8M7ou2urrpegypu+7X0tz5rSKU7UuXvwtif
9r64k9K9qXQdmPd0n1Td3/hgxbVQOXtIPknys8p7htJfqTpEkXUU6Cq20rN/
j72Q+Zf0KnuV3ueQhu/7tvLeW3V/OUzy7VX3uyHMQWqfkegu9Lu7yvmROVPy
PVWPDwcrzS2qT2vJB0reU+/rHKWfrDq0TXlPt72uzVCbnCb5b9Ylyrsx6y6l
r0rGwPpkxTqWG5Wvg/re/VU/9+GKf6Lqex4leQ3dawvWjdjHFN9d8lDJU+uu
4zHYyFSHc9WGB+s5H1L8XqxBFN9S6feUfDLlVN0/35G8lep5s9Lvr2s/hO+C
5/mYZ03720H3NUV166K6dVX6KxIua57a/HJsAQXrwQ5X3EiVmdbzPqN3sKt+
76A6xFXmM4qfU/VYdZzk5crbV+m+UjhEZc5QOafqWk/JUyUfwntHF6Q6nKRw
I/baCT/P3KrbdVjFOhPqfprk11TeHN03QX9S/AmKH6X4top/RfEH6XdN7x3j
9vmK30Zl3q4yD6Qstds16Bz0nGsr71GKO5v2r/vbPV3yjirnZqUZ02y90O1K
u0EL6+U6KP49xkul6Y/9VGl+UXsOj7s/7aD4Xoq/hPWr5OcTrsfWkt9W3c6T
vKfq84Tij2U+k/xowvP9Ej3/NnyTCgcq/tmEn+20ovUej6geo1Ne701S/Byl
PSyM14OL1mXdojTT9CzzVUYn1flpXe/IOpzvLuH678laP2VdDTqbjyuOW607
Ur6PVc9OCl9NWMd0IHtzpZ+l36cr/adKf0CTdTtnp6zPuULxnyvPp4zv2L5U
n2sV/5Dqc1zKOqhzGBvVDhuxVpa8q+KnJfwOerOWZlxlrZuxLujCZq/nGQcO
Rv+gMk9X/ESV2aRn/J3vTHX5m/2u5Mf190bB+5GWSnOU6nGm6nm0xvD3C94z
rqX4nMaXJPt3xb2vOqyZNIZgAfuvlPEDXdR/lureS/leVZ+WSe8Z39T1etJ7
yXcL1gG0Ye2n+EzYl01U+mzae7Nc0nu3kawzleZJ7H3MU8p7NnOX6ra26jlW
8l+SBylfT/0NZM5VmnNZUyj+OeW7iHmZfVTJ73M3bD0V689O1jM9iw4k4X3g
CrXPJ2qX9RSerPjpir+A/layzXzdvHVq6NZ2Vnhg2vtC9oHfK88q5e2qcFHR
OvO/lb5QsF7hY8X9mbd+/Rrl3TOyLQr75qq8w0nYNaq2ZfVUHT/LGLcxT78X
Z2yXQldwhdJtqPpPUL3+rvj61gqvUn3+i/t+/ZQ2HmydxYL1E5+qDv9WbCfc
BmyF5uhfsGOiw1b5ceV/Ts/zT8J74VOV7jG1w18J73m3LnnvXlJ9u5W85y1L
fkLvq09Y8+we2T7OPZ5V+SvYU6DLT7sO3XT5mLi/vzb6PV15dw17lS1Vp666
fqPey2Dd907Fj1C6I9GpJqwju7xkO8xEtcG57HXittfcrvqvEzAqs9FNo/tU
f9wBvUfc9s6tVJ91Vc5Jqs8WNe+FTpTcq+a13XDGYMkbST5F8jl6l60YwyWP
ktyGsUXykTxL3Dbc80u233ZUO8yL2867VM8wVfXJY9fUtb3A18Rtfz1ecR/F
bbc9RHILtdc49iN6xs5JY2XuVN51dW2Z5A4BawNu5tO8bcFn6dnG1b3HG8Hc
wpimvytYH2JLStpO3I3vKG580hYqc1tdO0PxE+rWn5+qvMfX/W6GKTwCfY/i
b+R+Svu25MmSByh+tuQJfIOKXyD5esnnSp4r+UrmV6X5QPLNkgt6j/urjl+r
/Q9XmvsS1nVeo364oeqzB/pmpZ+p+HGMpQpvZU5nP6n0r+j3RNZASvNZZFvI
Xcp7TTMbYZWhd5Rk/Ff9O0r+G52P5A0kNyv+aHTYJdt8twRXkLNttqHwND3n
TayfFE7HrqoiZ7G2UfkbMc4r/Zi0bXwTlL5N0pio0U3ep7JPbKCbKhiztB5j
dd15jla4Y2RbMrrCzzO2r/PNj0O/oHutVPpNdb9Okl/Vuulg7GfsoZX/ZIUd
Fd9UMI4MG+WaMePF0LGswVo/MmaMPt9R6fvFXddzVM89QvyijLFkxPdibk/a
jgn+CPspS6tNk7bvqwliZ6mc7RT+yBhV8P74XNX3A5XTITKmZFDS+2767UaR
cWXY/t8qGu/WQQUdyB45btv9wUljEe6V/GDGdfhB7RUvGJtziu65YWR8C+nf
LhrDch62c7XPULVTa83FbRruz630bjdkb696zlHe7pHxUth50TGz3j5Q196o
WNe1f8V6StbSQxQ/Juuwr+7/pO51gvJeqntcWLUu80eVf3HVerCfJb+T9j4C
HdqypNNzbUzVcb8ozUjVLaZ+VmzhsQF9CO14SGSdMNiAdNVhH9XnhKzr/wu6
PZW5c6j/cHRxcdupwSpga6WvfJox7ov4rSNjV8B7vV80buxblfNe0bivr8Ah
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
EH+vyq1krQtEJ3hsxj69yG/V7ZN7E3aDuv2CW6itxmh8uUdt/izYAKX/KbL/
MLYMMKRXVmz7ALt6heR81nh7rl1fMAb/75x14+BYr1KaS/S88xN+hg8jY/jB
qfbLmAdjfLNtH8RNBOuq9Jc1e379CBxTwvdbUnVdOintowXnezBrfBI4pYcL
xi+Bmacer2dsjwdzMkvXpipu85L9oJHhOIAb4BbJ8by5CMDN3lixjQDs7XUV
Y7pJ8xjzser2iX7f1mxbxr28B3S5uu+nCfeVM5Xmlrif4dXIPibgrrH1EF6k
MkcWneYx3Xdj1ekjpblfdfxG6X+UfBN9O2MdHxibRbrH3YyhetfHK/7euH+/
lbE+EwwNthLe/7Uqf1rKcxz6K3gVfg91/lry+wljkrfSfW9Q+LDaL1G23u8V
1Wd8yhwpXLu34Lo05W0rId9klT+g6r17G+bAgE1lvQeWFbnAuivgc8DpoFNH
F/d6zHogdETzY9bZoKNBP/Mya0LeRdk6G+LxWRiJHiVuTr9tksaFs0bskLZe
aLHkP3SPTxTOBGeUt//3LUXrLNFdgr1/NugDT2uybpJ41txrpK0f+1Byi7R1
odhZWmStF0J/tYrvXeGMrP01SH8+98hYFze72bpsdNpgm/G/4BnPZq7PmKNM
VV+tD6NM/ERapZ3+I8V/pjJfknwB+1jd413Fvahw56rxxXXsROw54+Y0A+v+
SthHdA+4dPYRndLWR30WM4fknJDm26CnuqTJPJOvhvSvFC3PzxuXzFzJOhus
+9yQpmVkWVWOzSq6zLfyxuSj9xujfLXI9ZEY2yDt+M8lH5U2PxpryLNKboe/
ssb1vx7e47/6/ZXCHwtec5Je1Y21jcyth7wreDWFDdbRVe+PapLfy7hNUK2s
GblM/Yv9VLBPwT9Z6/joJ2D+X8+bs2FK0b42vOsXdb2Wts7zvZj9C+APZL8D
/+fnYV39QX61Sj92DGu0pH0QSPOGynqX94g+JnJeTADwy+FPvQisY8p6P8pp
Klr+Im+uwg9COf2qbvs19Fy7V40H/L5hzkPK/zpmG1krha1rxoyzD4AvbpPI
v/nuYkVzvjUr/pOMsa+Kim0e+VlK1CHn7/VfZTgmae45yvolZRscez+4GMG1
0tZdI2PLVaXVPKiLQ/p9VJ82CtdSfXpG5uYCywh/JjJ7MTCf8NGlmRcic4S1
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
mIYxU6eF9MzFYA3xd16NMU95b8i3wTeylZ798oqvf1K17zD+t/je8i3sG76v
cTVjsB8smxt4l1DOjrrfV+A9Gx5rGXPhk2Wf3TvlvfZlNeO1Hyh7HbFdWEv8
WzamYEnDcy7fF5gNzoHjvcEtAFZxYHiPzwYZ7OLEuDH6YPJfD/edQNslrPdh
v8m74Iw6sN+sH8DHw3sMrnznIONb0DeUwxlyxMGTPC2kp299lzNH8l15n3eO
nuXEgrHq+CSADQObTvuA7/8y5zb4KWcOZtqBPHMy5hkAV49dHY4zbIrLwtyK
/X1B0TbYYRqP5yn93XH7L+NTDsYOnBy8hmBn+RZ6ZcyVjR/+EMkHwjvAmrxo
3tdnVOdDFDclbr6yM4r2c78He4fid8n4XdOv6d/0//OL5pJ9Km+sJucZ8J2u
/kbj/h7hdYcbEx7MHzmrQOX8AN9+4K/DRxkfHLj14O7j3AW4QMHIvli0//Xz
Kv+Pkn3kNyNvxhhU8LkXpow7pc70cfo9/fwApRmcMZf4Xgq/j+zHDhcndako
vEDp74i7HfoozU4Z+5VPUvzUuP24x2Tsv8xYOb7ouWem6vNyyn7T+FUvyJhv
kXVAQX11e+pfss8SY+RaFXPywL0DZgWuO94RHKJXp+zrxL0uLhov/XzB4ytj
JXyIZ2TMtYd8UNrcQV8wd2U8/zEv/FC1D/otFX/TjAV819cHLOU32gddmjJe
Gn6AwzLGXeN7jn8P/QSfIPyG4LeEH5Nxl/Gdd3pkxvy9+Kgz1jLW837ZQ7BH
yoT1DJhy5gLWPsw9rHOGluxfelTWOBrwLmBdamXzBu9SMiYQjso7VIdG2dx6
e+K3UbS/8Bv4fZbNBzigZMwhHI/wJYJ5g5dyasV4J/gq72LtVnN94Jq9tmic
4Udq29+r5p68XfHfFYzDALMBhzC4mC4V7+nQecIDCSYTn264E8Fh4nMNp2K1
Zi7De5V+ecq+z/AJlmru1/dUjKlbonskOWczaSwm+y8wJuzHOEPtw5T93OGL
/KZg3iowmewv2WuhX908aYwIey4wRGCJ2EOC0cKfHU7CHnW/tzuxPeaNMzky
awwSWB4lXY1nmNxkfBI+3ex9OH9tj6Ttf+x/F+a9TzpV49K7eac/I2dMUM9Q
Fr727G15j+/kvS88XWnWzZrzijLZc7N+xSa4Ct85yUNYNxa93/5Q8hFZ42rO
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
fRcz
          "]], Polygon3DBox[CompressedData["
1:eJwtnWOYJNkWRTOrspiZle6xbU/PzBvbtm3btm322O6xbdu27bdW7/oRX17f
GxEZF+fsfc4kG++w8vZdhUJhzsFCocRvo1EobFksFBatFwpzjygUdqkWCgeR
fk9foTBurVB4tlIofECFt0n7gzo7k78J8bvJH4f8d5uFwgs0dD35p9LWDKR9
RN5plLmUskeUC4WfyPu2u1D4grY65N9GfoH46bT3EHUahIuM4U7G8Bfld6bu
45SZiLKH0saexJ8mPjHx+cm/0/BAofA68bs7hcIp/M5Bkw/S1pm0uV8hZcau
pb+9id9OfCzCRdobZLz30t+OlJ2wlr76CV/KNZIxFoop00XZLblWp/9bKdOm
7M3EPyHvaootR9lLqPMIeadyD58S3pf8bSn/EGnjU/4fyvRT/hXaPJ2xdw9R
nvBC5L9B+FzS5qatOmVK1P2R8r/T1kjyt6W9FXm+39PeuJRZgfD2pE1K+F/K
/ErZDWmjm3CF8vcSXoeri3iZ+D2E7+SZ1Ak/QLif93sPdXrJr5J2H2lH0//P
tPc9ad+QdxrvYAriVeI/Ufcy4ocV0uZNbd4d1waM5xjSRhMuU/8X8vbroX3a
q7YKhafIf578CuGvK2l7kGtLxr4H93gweffR/3g8n5/J/4u80TyT7ch/gmsn
riHvj/6np43jaLtG28/xrlv0N8SzepPyZ/lfoey0haR103alnGfzDPknEz6J
tHvIW434H8TnoL8/C+nzF8LzknYTY1nZ/zjhcyh/EuH3SJuO8U3CPb5F+GvC
TZ7fiuTPSv7ZpHWT9hxt+D21iT/EGA9mvNP1FgprEn6P8b7h+6XvQxjDZtT9
hetbKkxE+Scp8z/yDydvRdLeIjxA/ljEFyd/F+7tPNL6ikkbJK+Pq0P4fJ7J
COoPMYarKHscaduQtybXfLR1EWkD5L1QGfOpFcYm/ijlNyJ/GfKvJV4j/02u
SfmWFqSPUZSd0PujrRbx/xFfiPxyP98WbRxP/dcYz1zkHUyZTSjbQ/65tDUn
ba5O/An+o2sR/ohy73P/F5B2MvEPKDM9Za/nnj4mfLH/t8HMN6fS1gqUOYv4
c9SblfZ3KaW9Vbh2IjwH+c+SN0gbl1J/IeLrklemjx8Z/7HUfYfw7FzH0/am
jPUxwmXKX075RSm/OGmbEP8f9zOK+7mKOqvz/z6H/BLpNd5vH+/7POK7+h/l
XkbS5/nE/6TOI5T5iviixYx512rqWX922l+5mvq+z80J12lvvnLezbrkf0J4
Gto8nfFtx1ieYnybM4aJqb847/Nn6lzN9SblN6aPLp7/5LT3IfnXMp6dGOvk
9PcS8ecpcxllr6D+s8TPos3PCd9bz/+jn7wXaH+8dv7fLeo1GE+T3xuJn02Z
vShzJXVesD2uLwhfQtqFhczhzuXH+T0Qf474pLV8T4dyL68Qn4J4iftZnb7P
IPwI/f3DN7sy8ZOIP0z8KMqfSP1nKD8Jaa9wTcD7WoD7u5D7+4c+n/d98Xz3
rmU+Povyr1N+SsJXk/8q4fMo8yXh27mf8al/NGVWIXwCaaf4vsh/0/WEZzw9
bZ9GWpH6x5B2HOGdyH+d8CKMZ1XqHkva37yD3/hejyH8F+Eyz2cq7uc0ym5D
/EnGP6v3QHx94o8SfpjfDuVfZgwb096JXGcQ340ybxFeged/MvH/nAtpb076
W57+DiftD9J+pb+j/T8RHhyROca55jzKnE3Zw2ljDcInkPYPZa4g7eVS/q+/
c2//Ub/J8z/SOXJEvim/rfPJP5+yoylzpt8aZR4m/A/lTyL+L21VKH8+vw8x
P93OeB/n+Z9JnUdo/xzqL+1c7P+JvAX4P35P3hS0MQ7P8xniM1L3OuLPE16U
OjOTvz/ll6Duq6TN6nxGWpffKvGZiK9I//3Eb6Tebz4/8v+m7p3UWYn+9nE+
pv37KT8N5Y/j+S1I/2sSH4+6b3N/U/OsF6fMZZS9jzbW5vd/lPmskfnzf+Q1
uKflqD8z1wvUXYc+5qOvabhWpq8nSZuBvMkoPzblnyA+PfF9aetv4g8Qn5b4
NeQ/TXgh6k9L3bvp43Pqz+//j/ABlO/hfl6mzCzOv62sdeORfhtjm4/fP2jv
PvKnJn9B8tej7h6k/9LJO/RdrsH/fRfubXb6+JXy91B+cspf7Hrks6D/cf0W
iV9NfFLi9Wq+Ib+lfRjD0cTHo86V5E9M/tiUPbKeZzM/aR36Pph+Byj7BvHZ
KDvVUMY2vmXIW5dvaHfGsh/XDI3ssdxrHc8YD6H9ybm+YnzXUmcC6k7IdT3h
BehvKvKOor95aWsh16NW5gjniv3o83jXXtqfaiBzyF2EHyXtX+ruRptt+l+E
8s9T9jTKNGhrVDVz3QG8z/19vqQdT97JXHXCg4xxU+rORJ8v0N4V9Pkk7Z1H
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
R6iucNOuyMMnIG1b4ndT5jLXC9qfjfYnJu9V2p+Aig+Tvx3lJ3f85ezVbnMP
zZg/pdwXyjaov7LvrhX5lnKuFz2PqUPoy3qrbmWscvYCN1D+fPLGof0byF/e
PQjtX0b+kox1FsqMPywPVLanjFBZofLN+Yn/N7xG7cM9L0T5uUmbrBp54byE
H6P8dJSfqJr78RvwW9iV+7uL8o8oJ2N815azl7TNKZXnE1+xkDamIP4K41uG
d3sM43uJ8AX0d2wh7+hA8s8fjG7tEuIHEN9jMHtLn+nX9DdqMHvp0eSfUI2O
SF3RCvx/nxyM3Fn581RdOR8uVU7ZbRnvrkM5F3o+vLkU+dwi5egClvNM6ZlL
eQJ1FyXvOu5nNq6RPNv11aXyff3birxdufu75E1cz95rTspMQngt6u1JexPQ
3kpD0R/Y1xauidR5kf5mL6bM2tXIpZWdrEUbC7t3UEdH/t6l6Hc8L+9byvlr
Effyri88v/W68nyO4bqxFBmYsrA/GcO9xE8h/UPPp+U8y7WcQ8hftB39z0fD
8/N+lBulIlxdG9dblFlK3SRpVfLOIe1Qss8pZT/3XDP3ok7jWcKLlpO3NWnf
eFakzDjEn+Yedh2MPO464tMx/mUq0X+eUcoe7mzylyVtdeXFpJ1WjbxL2ZB7
2K9q0Z8ou/Mbv3Aw8kjvTxmissRTq6mrDlpdtPK0B0r5j31O/ctIO7uQtNMp
O6Kce7tMeY/vh+dxD8/jcnUznrddc322yksJNym/OPmvD58J9h7M2uEasi11
fqCN3ej7E/L3Iu9T4pv2RR8/FvVnoM31BqOD35b/ziGD+R5WZQxzDe/nZqOt
qai/tro5yq9O3hXqJgnfVI4+ZDl1gLZHfG3CXzD+eehr6nLy3iY+x1DWtxlp
bw3qjzWsf1mJ/D0Y00H0/aVnKsLfe8YifEgn8kef1YwjIl9QFvEZ7c09lD2/
e//vipHHe78LePYj7SfCn3Nt0Zcz7+6D0Z+ORfh/lJmA8G1+k+TfRNqPhO+s
BivxqzpT77Ed+eZUw/rl0f5fyP/FZ0jaLeSvwfv4UDkR+SsTX4H7W9Nnwn99
lmrW762VuTtXUOcfwj30dyPxjbi/Zan/OvWnov435K+i/Ju0abxnrk8p/w1t
3E1bbS/leS411ZwXFKAt7PrHWjs2ad8U84591zfQx43KT4mPrGVNdG0UQ/CX
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
k78f8dWJr9IT/YDlDduGbe3DPS3IeBd1j1GPDlNdpjoP8dQr0sZWtP9pKfoW
1/+1PF+791EeLz95IDKyxWvhaMof8p1vxPu7rJM21Ncc2sn5UN34XL3hrJ6v
jrgnmJQK7X9AfM7eyJSVP4sPW9b/N2kbDEUfUegJH0JehBw9uXqmqZ/YqJ7v
TRnV9c3g9cRuNpQxU3/NetZ7OREbtcKJu5/qP4phqWbP595vY/97ylKqwXuI
CRErdRVpG1Ty/Hs6wX+K1RZDKpZ01XrOGtuVoj8fi7K7e1Z0zqgGjyu2V46Y
XDH3rO5dNyH8r/o62lu4N3PCjtXIQJSFKPf7m/xLPHhVYr9ipU7wf+pmp1Fm
PxS8lFxUZXzK+uT5y/c/sRS8zJmVcNMnIm3loeCh9ihEBqkscl/G/0ZXdE4P
tqJ/OIa6W6jL7kQ+JVd9EvJXGQr/ZGbxcMRXJf4l8UXVpahDpM7rzeCfjhk+
n25GmcXFipJ2RDVzjnOPmCPxfpdUgtVbrDcceWVEvk85Lru2ggETC+aZQr6t
MjJlZeqw5c+rp1BfoYxCWcU3w/IKzxyeS+T/rlkKBk4snHhx3406LHXPV3re
5/d4//ONPOv11KWVYi9EPqHc9sOUHynL8/kQPsS1qRN+umXlrMtdv1gdcyX6
qRUJr0r9F11vlXEOhZ/qK/WM93kj/FD5osuJY6qn7rrkPV2Kfkv+6TOl6MzV
na9M/tbWLUWfOr06RcfeHTy4+lbzvD91ddoUGFXIGMQfq0/121aHry5f/I94
dG0gaAtBvM9nw/2pu1ff5ljk9Mvt72tkvr6W9E+4kRflf/itl4L/v4K0+6vB
x9/Ds1qiGryHmCmxUxM4RxWjUxVPfXR9DE22cDZpa7WDN1c/JidGbsw5zeA9
xH3IZRKfq77MOci5SPyK395M1H9e/SRpexDuUYZE+CXSJuuOjFz5sufPU2lv
6uHzuvpd9aXqTb/phGMq13QO8r8WD0P4Of8W7qGqwQsbFgMvFn7DcuaSG2ij
Qtm7WsHXi7P/wrmjnHTzv2zGXof4WzlWcq/UDQ/0hAMvF15+g2NXR6yuePRg
5ivLqPN7tpHzvWe2L+uxf6MszW/Qb/Gxwdgt0X7JhjzPdcvh4s1Cnb/UhzQj
27ve+bsRzprctbG7wnfbifzpSpFZL90I703+m5j02WhrHe7vh55gmuxfGbSy
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
k9oblSusjYhvCLdb4WY/Q3zxZuYA5wLle3KbtSGhLYn3u2MvxvOGelP1p/ID
B1vBmqhzVvesP0V1t+q01W17xly9Fjy8Z0/lg+tUY8PM+V75hLIBfbA6f2t/
7YCu2DBTfyRe1rPX0sS/r0empWzLOcq5SvtUyiLEZIjNUF64WjWYfn3Lqn9R
NjGxMotW8JjqZuQ4ynX8uB3umTLWrkbmSOdK5YlytffqhEsh1nuSEfkP+1/W
x6B4M20+61t45YHYgnZP6972STEA9LVWJ7YotSGlLSnx1nI19GH50nD/6w3E
ZvR77mU68Uko/+ajRjA3Ym+0Ge78pY1AbQXqI077lfos03eZ8++GlWAOxR6q
w5utGRuL2lrUns9Hw3hb7c3u7P6lFkyp2FJ9oj5Cezu7XvbHJ7f2XrQX/EMh
GB45HO7BtbXnHtS9qD4D9R2oj0H92eqjT1997k+3qESXO4a/2RW+43bt+OpR
5qd8zzP8ibT/8WDO9qe0YutdzKZ4SjFgYsH8T4j38kwtv2K7Ss7aYjrFdsqB
FR+pj0Z9NSofVv90NuO5pD9nqAnLObP7rV9dyVleG0zaYtKnufao3auJDXun
GH/e6hC17acMXFm4Pgz1ZagPRP3/acNRW47qsNRlHdKOLwNlJgcTXrAc/sok
XG/UYm9e/Yc+hvQ1dDLX6f3Rb4gvX7YZ3f7nhfgudQ1yLVKHpy5PH3z64ptb
DFI5mFKxpdpA/1tZPPnX9ccHgr4Q9h6KrdorCrF/dU4ttsu0qaz9d/39vTzc
n74KxVSJrVLnpu5Nfq/cHvUV6i30l/elsji/91r83yk/3t75zndP/FviG/YH
b+x+Xmzr5aS93YjOQ18r05ajCxHzK/b31ELwTie3w63Qhutz9dg7kht2FGnH
1oJhF8s+xmZjLf4EPysEc7ZfLfzRDYrxIaMvGfkF2n9S/iefVvtiX5N/q/rY
WjBzYuc8g3kWO0Odd39kqt8ztlUZ81BXOCByQRyf9vJ/HMp8oCxFPoI25LVH
f2Q7tjsvqeW8d3EtcTkv2jbSppm2zeQANqt5X18Uc57wXKHMyf/ytZXIonzv
vn99/OlP+JWhcD+3Ur9D3q70d25/MJhiMTetRfexVn/4gcqktC+xYyWyqs3l
V/SHUye3TgzPtYXYlhbbsxvlz+tPnbvrwY/7LuX7ijE4k/hFxN8qxp+F/kTk
5m4uRq8WDvoYLnpX/GHoj1j5/yae72rxEa2vaDHzfw/mf+b/TR+3vw0FKyK/
XB8G8ruvUwfYH5nv0YPBtInP98zk2Wl/fnfojw/H54eCxz+N/M3EB9XyXn2/
PmP9gWg/Tdvv+vTSt5eYAHUtG1SDFThADJPjKUZ+pM8hfQ+1u2IfyPHI1dEH
kL6A5lSW1p/9iLYk7h6K7fF5u2JfTN7HDoWUubsW++76rhEfL05+jH/0QnxY
6ctqLN7RCO3KFYIP07+9vsHEkDzm/OuaOhifW/PU4u9HX2FyhOUK65Ne3/R9
hfgjV1+v7UZ95ug75+lWuP7asHrEvWI93+YSA/HHq79zfXvrs0/ffddzvdKf
d6C/I/nJ1a7oX9XD6kNJX0r61NO/5S2kvdMfjJX6Vs9K2mbWZ57++PS5qO9F
8XDiqfS5pi8Y8R8P1IIB0V6eGASxCPr0W6kQTrr8Tv1faXtLmwHaDqgqDxwI
Z8bz7aOk3UL+4+KPaOOJSnxlP0f8HuK/Ueb6gXBqtScn9lxsnT4Yl6nFHtpP
/bGnJQdKjIpcGzEGYg30qalvTTGf+tvTx5S+pqyj/TR9zOtrXp2q9sjvUbfd
Fz6l9gDvJV7pC99Ne5FiNsVuiod5qBb7cHJp9Kmnb737KF/ti8/fu127SXum
P+9Afxp3EP+0P/wheUR1nocG3tUxiJepNcIX1ievfJhzWuFaiXkXT73TUGwn
7UX5g6uxqadtPfffxuVYyLVwDtWekVgpbQlrU1p/9Z4VtGeiD5b9PYfX4rvL
85DnokfFmPTFBpD2Z7TfZ1/6dNK30+tcEw8EPzGqEh/C+hLWR7H+TvYVE9gf
nZ36xRfKsS+sjRRt+elvV67OT87v5XA+5H7s2RX+hP5F1I35zHx2YrTFautD
R7yS/mXcD+iTRt80+ofz7KSOxP3qe67r5N2jvriaNdy1XA6Q/jaH3N8R37OQ
87o+avVVqw0T/Q3rQ1dfukKg9Ierv0e5QPqk1DelmBKxJc5pX9DfyHJs2Su/
V45fo/1/PXsP4zf0Z6ftAnVY6kva7tF4D9vTZqsTDJG2XsVkiM2QryS3Vh+h
+gptuH8dDMZh4Xb8X+jbUP2CegZtOmvbWUyL2JaHGH+7LzZ8tOc0E8+sbzBn
Jt/3/NRfsBgfovoS1aaLtl3krL5bCydXbq6YHLE5YjbUdc1cDpbj2HZk63vR
9kQj4tNB3w5bdcU/knz8Hai/Dn0uWs/6tWcxGCyxWFu0Ywtx2kL0sfqk1ze9
deTvb07+Ef3hUMil0D/DZV3BkIklk+Mi12WjYvi4fk9bFoKhFEvpnsO9hzaa
5Qf+SXy7gWAM/B7dB7sfvqKY/a7zj7aqD6FMqR777ne5FvoOlS24fx8IZ1zu
+LaM76T+7GlHK5ejvd0Ggin7pxZ7PzeLhZDPUItPCn1T6CPG+V8fnPridM57
hLytae+4/nDqN2vHXoB7Af1xOwdo401bb8oPztLWh5i0/qzR6sfcr4gXmZ4y
/6vHJ6C+AfXB+d1gfBzr61i8vpiBZz2DMpYrGMNVjfj409efz1j/nOLBPTsq
41HWcy91xxoM5/7XYRse2vJQPvFjLfxcfV/NQdq85M3FNcFgfBjJbxYYdjv5
K5C2UD14sjldC4nPX4+/+RcotjLxheuxcaitwwVsa0TWa21fjCRtvno4L3Jf
xKCLRZdvd1Mx+kn1lNN3Ivtch3pzjwjeWO7xKfSxZCX2/fTF4/nPc6D+wfR3
8mkt/og2aoeLN1kh+Gb9mftfEYMnFk+OuvhiccZixUeXs9dQv6eeT46gXEHx
/OLz9Lfi9yNGWayy/ArtmW1dC79enyb6NpFP5Xqm/46Pu4KpEls1azu+Bh4r
BF8uHlrf6WKkxEpN4T30RQbtfPd8NXy9owdiH0QbCdpKUB6mP0ntf7/eFQyQ
WCB9Ourb8RIxTNX4bHXy853pX2961++B+IwRX91LncP8lolvyr3NVYttbf/z
+gtVdi/3wzOFZwt96ulbTx8f4qk27WS9lNMht0NOidySiQqxx/WOMtaBcBrk
NiznGlqID4Zva5GpK1sXoy5WXZvdY/x69wbroP8afecur3y7Fp2Dugc5CnIV
tJGlrSx9pIhX0+eqvlf14aG/h3074VoqM1V2qn+ST7uCCRMbpk9WfbP6jH3W
6kr1N3EoV089eGbDPiOf1QzOJwNZ88V368NVX676BNV+kvfp/WojV3+JyvCV
5T9RiL0ifdLrm14xufxW+V7KBuSQySUbtxVf8vqcmLqR9Ufs4HvDeEBtImsb
+ZGB+IsTU6wtVjGMYhnlAMoFlPOi/F8fqvpS1Qet/jvUETs/vlGN7ninSs4S
6s/Vo+t/sFHMGcOzhpxGuY1yDOVbaFNS25LiQT0viA37cSA+yPQne/pQfKXo
I1v/tfog1hexmDXnrxNo85T+2MDTP5z+444uZE1zbdM/obbj1Y+oJ3F90hfi
T8Xof9WhO5+/Xo1ufYz/Lup/S/np6jmTeTb7sZDzuT5S9ZWqz1399cg5U76g
nEHd0KW12EaxDf1byamUWyknSf2D/t48izhmx669UG01iy8QZyBHVa7qCZSf
uxmft/q+FZ+ov1qxkPqH08e18g/thWrLWpmDsgfxRQ85Vzg/1XN+lUuvzlT/
ExfVwp3zzOx59TTiZ/eHc69/ODmacjW1sTSiEX/ayk6UuSh70R6xtonPJ356
LXIl5Uu2YVvHiCnszztX/6oPXn3xKg/Wv6+cU7mnOxTjv0kOjlwcOZ3yd7TP
qGyjzrObpR4bq9palW+ifzTPi86dk4lVbYRD437ffb/cU/2tjS7kTOXZShmG
sgzl088NRVYtX3yavsSXaEZWqgxXWe5BQ9E9ntkV/2ulTnQfjwzj6/V3oi+Z
t2ljKtradyi2jOVEu/7KgZULq85S/q38OG0JyoGTC7diM7JcfaTK31y9Hazw
qEK4OnIE5QrKoZC/JedJ7tM6xOUTLtaMLFKZsrJlZdHaqlFGoKxAPLC6GXU2
6m4uZdz9g9H5fDYYDpRcqDO6wq9S5qPs57JizttyiuUWqyOTv6m8S1/04kvF
mXoG9yz+aSHn/YFqbHt/4jOtx2e0vqPlL+lfT//iV3SFIyJXRB8z+ppRZiHe
Xp9k+ibbsDv2VtxP7VIMh0UuixxTuabaqJJ/qn9L5yr30GKa9d89NX19KCa4
HhmoslBtbGpvc1b1pgPZo8mH0R/kzM6VxKetR4ahLOPkYuwHKvNQ9qGMVP8w
nk88+8vHkZejD1x94eqTW//Irykf6Yv8XvvI+izWd7F4Cv37OibHps5Q/+/q
DLw/bQupSxhXfAP3sYTyrnY4tHJptSG1UCP2ivQ14DfltyVnWe6yNl3FC8pX
0B/OdsXsL+U8yZdx7ZUL5R5cv6/Oec592ndy7nMO0R/C+JSZfDAcknHc+3Xy
7anjnUpZGn2cXsiZxLOJmAGxA9qgcnz6/9J3qj759M0nfkTbrnKStcPuHs29
mueHe9vxmazvZH3K6i9YDq1cWm1uae//iHZkedqs0F6uMjexFs5hzmXa+9A2
hDKMc9vxuajvxef6Y89Fm7va3n2+P/Y+tFmgbEadsfZYlP9Z9hbPE+3IL5WF
7t0Xf9HaC7Hu11wXt+MjR1856iy1j6JMcZJy8CnKGpUZqktQxqksURm//pT1
Da7sX3mFvlH0f/V4JXtU96ra+1Z+JJ9YXwfKHLWFsgL1H+wP51l/bD7/HsqX
uJqd7InnGeZHaE9e/+z6ZinQxpyV8PXkznom9Gx4ndhQnvfnXfFnLUbAtVCf
VKObsa8kN+4n0iqUX5f8Pwbi42eoHf9z+m5SJqNsxj36CsP8LP1raW9J22Cu
2epn9OGtL2/5r9pPlhMtN1rMtfibJ1qxnSNGVbyUOnx1+fpc6W7HJ7e+ubX5
MsYe9VDmSmXU6kOmo4+1ByMDqTeCOXRvv3t/7C8cR3vjFjLHaxtEn9P6nl6t
EPvU65P/10B8MDXb4RDLJdZnTH875wPPpld2BR+hzHzGcvgGytK1Rz6Duh3q
9HWCrxH765zyQCNr0NK1+NhxbXJ8ExN+dDBYyfHc0w/mjLZGO2uYa9l83ZEX
eG7x/PJIMfJw/fk91xUZorJEOdpytfWRpP0M+dvTFHKmGoe8p+vxbeKc4tzi
/s+1z2/cb1178vqKeMv9Zyc2grQVpE0hbQtpQ0hbQtpIUF4+0MleSBsE8j1c
D18fCOdEPIBnMs9mTzPGWj17Sudl52f3mvpj1JeXMhVlK+rY1bXro1L+ujqQ
mcrh0Kkb8Yw4xzDf4M3B2AzXdvgMA9H3amNEWyPyK/UneFgltrsnpv7NtHNA
Jbb/xfTpp6FSj+9BbSJqG1H7W8pWlAHd3w6nUG6heEb35y+StuRAbECrL9Ue
ykRdkYFeIB6gFdt0+pjX17w2/LTlpw0C/T3pD+pS11PX/Hbs6+nrSZmXsq9V
OpH361NC3xKWsWynFP8l4jPUjSqD07bwj1wnD+Q/0FTWS5nT1DUVct52z9kp
R57hXrTq9z8QmYr29bR5rO3j2Qbi//y3WrA953aFH/U8aYsNxIa1+lHt9c4/
rD/ah3b7SVt0IGUsO9iIbNln5LP6nGuTgdgYmbId/2DKLrcqZP7wXOX5So6W
/mjVqV1UCadRXdvD7chO9dGur/ZDyduqO/YyDx8MRlZZlj4KtL+sDOviSvQR
yraUQV1eiXxJ2ZT24wxPpYyvnffvWdfzmLZq7M9nISdU+2Sf2v9AdEzyxZUZ
HFeLzQhlCepbPMuok1F/sj/xq/rjo13/Qd8rAxjIGUJ7GsqElA3tTHsPVaLf
dG+vzSflQdqk0DaFe+Y76pEpKVtyj6S8R/8cc9D3Gf3x17VPJXuj9rDOWX9e
5p3JtZNn40rkbUsW4ivWNPO0Ma9/GOVzyvb1USweXfsncg3Uiakb27MS7OQS
1N+f+st2snd3z+DeYZlO7M+LwRSLqX5KX2jqlNQtadNP235v9MeekBg6dV/a
TNQfgfPRlf15Zj475XePFiPTUrYlhrpYjE8zsdXux/UdITRM/IJ4UG25rViI
r2rtJYpFVqejbsf9sLoshjFGP7+8Oo9C+nQ/pY1PbX2qQ1V/e2Qlvg600XbU
YHxK6VtKHaD6SfGA+q1X56vud6lOzmtySuSWaL9LX2vK+JT1KW8Tiy4Gyfnc
86/cH33E6yt+93bOStqoFC+m/1u5NgsW4rtbH3X6qtPHxR+NyMP0XbmT61sl
mGqxmPqME2v9fj1z3VrUnZb4hs3YxvylEN8S2jjR1onPWPsy77Vjq0kfrq6X
csTcy8vpV168GO29MhCZn/xMOZByIdWRrtYIZ1HuojYgxHMpI1m/nP2mshN9
eujbQ8yg378+xPQlJgZC/IUYM7Fm2kgT76H/Sc8efnN+ex9xrTsQm7ueN92D
uBfZohB7FjPUgw2cljpF3ssOxK8qxCaYtsH0R6ttWWWs37WDR954MBx2uexy
9OXqq2O4gfyzPeOwH3iYOpOoKyc+Z19khOIlxK+6t/Gb9tvuNOKr1zE6VjmT
cie1qaN9Hn3+6vtXjrf227QZou0QfbRd1c6ZUW62a6Zrp/YOHi/kTNLViUxR
X+f6h1fWKH5V2Y4yI/3/ae+gXs8a4FowKXVmHowPjg9Iv0K+CvfzVlf8E+jf
W19h+sMSM6r9ILnFcjblbooZUza7NtcHxC+h/vPU35/yT1XiM1jfwdosc70R
n+u7lqMuV/3LdmTrcqjlUqtjVtfsM/qwHX+oyi7GyKza4TQo+xTjWWynT/v+
sC/2VJTRrVmOPkzZnZgbZa/6FNa/tz6B9Q2sz5VJ28GnigVxzXHtuVwdOuN/
U5mcshnKbzmQNes58q9UXkH+2+S/VY2NJG0lKWPVfo3ybm0dyFGWq+wZ1rOs
a/ZgNf7wPHuLERcrfmYjsvvNBsIfv4r236T9d2jj3KE8H/PEN2sbVBnlyuXI
J30e1yhP8X0prx3+hv2WZ+SahPBk7cj21Ul80w4+QGyIakD3DHLo5dLrs1J+
/GvtyDL1YSxeRB+w+oLVxoj+Hd2julfVh5zzy4W090hv7E1pz1l/i+qi1qPN
GTqxNaQv4MOKsT+oDFqckHghZdNyGuQ2KGOSv6YMRFmIlJUXh6IzUHegz1Lt
R+i/Xt84cjLEvD/i90LZ6wbiD1MbtlYWwyaWzbOi8v1tu6Jv0kattmrl3Mm9
02eqvlPljOsbV5uv2n4VgyoWVR+8+uLVx5TyszfEsvYFP9o1FH+c9q3OWN2x
/q3d63um8Gzhnti9sZgq8XTaG9q8EBn33+34CNdXuD6rxGPp81rf1+oIXmpH
p6BeyzOEZwltVmm7arZS/Adq81Xbr57p1O9pz0LZgjYSbmrHh7K+lJ2j1Od7
fn6nFvm9ug99HOnrSB2Y+iBtTGtrWp+A2mfV55O+n/TpOpr8hcmfdjB7Uv2T
juIZPEXbr9Deb6S/KfeqLxxP/auIH3Xu1aaItkUmpr1lic80/P+U7+feXJsn
2j45k/r39Oa8o/8sfSTrK/n6vvh/1Malti71YaR/0hepP7IvNqO0B6WPMX2N
ianSvohncs/m7/Zk/VFGo6zGNV9/Ca5/jsU50LlQfoZcOmXo/7h3b0TXpU9D
/Ueqg+mv5Yyrbub/baOzfQ==
          "]], Polygon3DBox[CompressedData["
1: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
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt1FtoznEYB/CHOZ+GOYzZvNLGlmllkdqanEMjF5LTBeXMbuSQuMOKEuVQ
5BglRDndOeccjW3GZsxGGxMXCu2Cz1vqfd99n8/v+T+/f7//vw1bWjZ3fbuI
SPGT1jkimcd0jNgtVHWNmNI7wieuqqcKQ+Wd1p+qq9MiprlmNDvJGlkdW8yK
WWk/610iZsmJ/vq6RSyUT/NWnts+4qc9VrOtrkt0ipjE2tgSe23hf/Wtlcvl
UXydfEieKpfr7W9uN3PPspXsaJ+IUzyVXWPH1TfU9+UH9nhij5fJdXNfscfq
CvVA/Td9K9kzVsn66LnFqtgLVs2mpDonXs2O2q+GFbqndH2vWaW+rB4Rb/kA
fTWshiVYHUtnb9j5XhG1vJ4NZm/ZRVbPPrBMdtvMWt7APrKh7A6rY02siY21
92D2jn1in9k4lsHqWTPLtnczz3H9e/aNfVGPVH9QX7bvD9bK8lgD+67+qs5V
7zDvJXuu3iTfS96/9SvqAs+yzfO+yvaxI877OG9lZ5LPyXqRGQflvp5VB/e1
S86RS+T5eq/rXWPuZj7EjBL2x9kuYqtYo+tL5QVygTxDninflWfb77f3rkV/
EcszcyJ7zxaYm8/Gqh+qs5LvoXdglXf1srrQemryvVFfUo9J3ofrHUcsYxdY
AeupXqI+p66wmM8caZTZf3t37x7PY2LM07dNOM1GMOPijwFz+AmWzdxq/GKz
2DE2nK3QaFxMZ0dYgi1n/sRkdpg9tncWcEQxgR1gj1gmU0axn4323s8zWAc2
nm1ge9kglsK+2ruQ72EDmeOOFpbPyv//H/gHry+Eug==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzcyBVAYhuHfCIVR4F5XzlmjsQQ5cxmh1GMJKjkvQ9qBGUajERchp4IF
eG7xznfO9/7/mTn1C8uTS1kRsYiewojbRMRvMuJOHhdFPCG7JOIqPyKh6y42
h3r9M464NXtJrlffhwb9XEHEur6Sn/HeLBr1F+4vcoMrsdNvfgCr+ib9Kza5
FDeov9Gn0Zx50xtb3J9c0ZWnIuadW7g33NvZ5kvlDz9kfxjn3Ds6dZco40f0
o2jVfyBH3+W9Hfsn7uVmqnQVss292/kYudjN/Es/Zn8cp3ye3U+5x1VxE/oa
OSnX7LRzX5k5530z1Vyau3Wfkh3cNx70B3ytnOLucO08beaM/8Gj+6GZOvkP
u3w5Fg==
       "]], Line3DBox[CompressedData["
1:eJwVz7cyhGEUh/GjMmMU8giDWaGS4zYoFUKjkNm14iq4DGo5XItcGK1wCXo5
dH6KZ855/8857/d+iczm2EZORGQxWBAxVxKRwjyaCiNecF8c0V4acYVqzHCz
aOHS6m1eRLN+vChiAmf6a3Ov6o47E/Yn5VM4l5WURfTb2+X61CEsYBhb9lrN
vOHB3p6ZOnXa7nN+xIX8HfvyevnL/3u4WbTJP3DANXCv3Jx8Hh3yT3TIbtCu
T8nTuNR/4c5/dKoj3jGKAVR6a0atsHPo3nJ10XkJXWar+G/1iGv0zQX3rXIZ
ddtsN/eDY77GeZlbxwp65I92nnDC1/JJ961xWST5X+TKT/le/R9GpTir
       "]], 
      Line3DBox[CompressedData["
1:eJwV0EkrhWEYxvHbypQyK2XBB7BFFkoZMxzHCjsfgFLmWckWGzs+gC8imadz
zBshQ6yIlZ/F1f+6r+u5n+ftrRwcTg5lRMQwtedHrBVH9BRE/GACt0siRqhN
t1QYcY+rujvcwM+iiBz9ou5W1mS+NNdRkl+Qf+A89mCt/Isa+Rvn5+TvfIK+
5b3e3KUk/br/TZ4tH6DM0ogd87W9BrzCbpx1xytW53lbtmM3jZ2yGV3abqt5
mu+Qpfh6vMB23NL30ws/5UwbnutWvH+Gm7pnWRZO6k9ldeaqXPfihOwJx7HG
mQrfuWz3xLkEtvx/J5bJj/lF/gib7YzZecRJe5X6dd2hbgEPcFT/oO/Tp2j/
/5/p9rDcPMt30R+5ZkXR
       "]], Line3DBox[CompressedData["
1:eJwVzksvnXEUxeFt6khcijHHTHyCFgOTDg4Sx3EJTYgY4ztolaqjiVZICOYY
+wrEZc7E7bhf4pKS0sRjsPJbe6293/df2TeYHsiLiCFqLopYKo3oLY7YoR76
b+7/EFFQzmMrbVCb7kWXweWyiFm+yX0ab3EG9+T19Ksk4tXNC9WZq3xrWn9j
bxEn9f90N7RgrrWTtPOHv7bTgo04UBhxhb/Nl/jFftbtM666meC7+Qvdtned
409Zwree5ON8F57Jm/EUf8jy9X/NY/yJLMXXJCI6cVSWkp3z8/6b46dw1/8+
UYf8u51HHME53Ud5lra84dj+N/mDvp0a3t9Jm7oOapPd05rsq711/sjNZzzE
DA7L73DFTg4P5El+H6uxkiroDbo3S3U=
       "]], Line3DBox[CompressedData["
1:eJwVz0cyRGEUhuHTJRSabnluDTZgB2ipo1hCGTC3CTl100KLE2luDxbAMlRR
pfD04K3vv+f9/nPvHZhfz6wlImIVxc6IVG9EGnNdEffdEY99EdMocMs9ESt4
5pbkr96izHPzsl1vQT7xg/0RSf4HbcjptMhWbNd36tzZf4ssN+feUMr7zGed
ZzBlXtL9QBI3uiX+Wk7zV3JSJ+1dl87fZjVZ1Lmodz2fy3d3J/Sqzmco8FXf
8ZKOGDc/MTvFm3lR9xUVz2Pcsfy0pyzz/Bd35JwzO5QZnX15gC0up9NsdxNG
uQbZiE3ugUs4B0a4DbOUb/+zK8vt2bGLYa7DfNt5p/6PXMWdMmr4B0bUOZw=

       "]], Line3DBox[CompressedData["
1:eJwVzrkuxHEUxfGrVVhmxgw6sRdKLyHReAAJEpV1DAUSWyLxDvY9dmMwlggJ
hdLSmwdR+ChO7rnne+7v/2/oH+0ZKYuIIeqtikikIpJ0U80nIh5qIlbl00kd
6rAPm7d4Eq+0d6Yj1nRm5eN04j7739eZwfOUkq3rNPJH/DEN4y1uU97ZwD7s
OXddFREjfI18Uz4nK/Cnblr1+7wxiqdlGdmWzrzOgPyHFvkiNqaTMet0tnUW
5L/4neyexvEzrFQe8ck/yB7pm681n3R33H3Zn+1L7l/MCXs3dkX17nd1srJX
7I1yfJv/PMf2sCa9C/6SVvginuf3seb/d/h2/YI5idV54wBb9r1BvETvsins
WucQa5H9AbsFP4A=
       "]], Line3DBox[CompressedData["
1:eJwV0Msug1EUhuHFxERpUZEYSbghc2lVWz1IK6kWYcIluARxSJyVEhIkJEjc
g/tAgucfvFl7fe+3d/52qtCcbfRFxBLq6Yj0WMRQNiJj1jMR7yMR66MRP7IS
ajqDXMo5ZdZ03nTWdF7NKt9xXkWP6+jdo22vcJPuZMYjNmVV/sWdZyxyT+YA
n+aLfIV/lD2gzG/LZrhDnUXuwNxHidviprk9e5mbSN4Z9g534/4tSvKeealb
wALXtV+hyOVlF7i0F7isN8ZxzbXld/jwO1qY58/1LrCTvKVz5nyKPLes8y1f
wRXXtDeQ41qyL/Qn/7Gsy9fMP3vVnNPJ8Z/4tZ8k36NzbO7qHJkb8n8Ltj7S

       "]], Line3DBox[CompressedData["
1:eJwVzjcyh3EQh/HVamSFnGbECoVOOIJwAbXUyaFgGNkt/GUKOVUYOYxwAcdg
fBTPfHf32d++b3Fnb2tPUkR0oys1YjUzIoH3tIic9IjarIgrTGdEjGIGY+jn
m+ylcnXIyo5o1LfhEO0YsFNlnutOwu1ye/vmBxjkqrk8bo2r4I7MQx7L2f/e
Tos6Tb1up1ndgb6UiCEu39sN81n/82PnVn+HD65AbnJz3C93r19QP8hhvlDm
uVXPXWOeezR7wihfJL+TI0bUJ/bOcIoxfY3/Lua33F/07ln9gk/uxq0S9Ta3
xE1iCnPmX3wpt8Mtm72qV+SbHOfKZL5v7PKV9ht851x/iQtM2Mkwz8SenXT5
B9hCP6Q=
       "]], Line3DBox[CompressedData["
1:eJwNzTcyBmAUheGrZ0YuGYWcU634pVphARoVVsAMI4dKzuxAYwFy7mQVK5BT
w1OcOfee99zvy+voaetOiohu6kqN2MmM6E+L2OX56REFdJIVcSe7ND/rJNlz
8D3aMPfSAH6Fv+CzGRGnskL7tLmID+LXfMb+qjPHz3SKZSU0hI/JErJJurfv
e/+QDmjYfqM3r/OIv3lj0VwqW+BlfERnOCXiHXswl8uWsAo+at92d2teln3o
rPFK+wqv4n/4mN6deVX2qXPk71zaxPpoHL/Hv7ANna3kiHVeLZvAHvg3duwm
OzuikTdRgtqpwRvl8jNzje6m21o+6fZEdko/7s95nbyeprBOd0/0i11gLdRK
zfQPlQpIkQ==
       "]], 
      Line3DBox[{4215, 2044, 2512, 1708, 3905, 2059, 2058, 2423, 2422, 4214, 
       1291, 4579, 5612, 1290, 2057, 1289, 5523, 4578, 2141, 4213, 2140, 4092,
        2418, 1287, 2056, 3904, 1285, 4577, 1284, 2055, 3903, 1282, 1696, 
       1281, 3902, 2054, 1279, 1691, 1278, 5611, 4212, 1277, 4576, 5610, 1276,
        4211, 2139, 5193, 5656, 2138, 2581, 2051, 4132, 2511, 1689, 2049, 
       1275, 3720, 1688, 1274, 2048, 3899, 2032, 4509, 2046, 2580, 4147, 2045,
        2510, 1685, 4511}], Line3DBox[CompressedData["
1:eJwNz0cyhGEUheGrtazlMLYEOe3CEoyVMJOzHWCo5LABqqiSGVmCkWKIlnN4
BqfOvec93/3rr+ns6ejOiIgumimJaKiIqK6MaORbpRFl5RGP5ptUxDReYi+l
TayY7+gW8SmskKdoA8uqiigw59Mk1uZGO83rr+N58lyawHL4lftr8mxzFo3L
+3TvKGlfxVq9b6ExrMn9JnMz7WFnOhd0SklsVCdhzqRrPINf+saI/K/Mz9pX
5L3ub9ODO7/yYfwYq7ef8F2dXPeOzAm9Qz6k8637Q3OyZZ0v8ycNYu+8zvsP
Posv4W/mtOyVD+j0yG/pxb6IP/MDt594P17umw/mWm8e+YJOmu/r3PNz/g9z
IEGB
       "]], Line3DBox[CompressedData["
1:eJwVzckyHGAUhuHTyEKVhXllY2MMsaHMlCouQBUXgIRO021IjBeC6zCPVehe
J9kgchdSokpMTy/eOud87zn/XzuRGU0nIiKFobKI9cqINWzgvDTiV1XEOHLc
P9kDHnHG/ZR/LY8Y5P5URNxhlaupjujgktwA90EtQk62wp+6/a5+Qz//2912
3mFZdsLP2O/jRmRbKDRnzcfclVrsj1t3N1hycyRfzL9t95Kf12ewgEPuk72/
3Bh6+QLvtcoSapt6YOcH91E/nXf6UJvNb/Zb1HtZO5r0X7ge+Svm/PGiZrm0
ft9bs2oK3fJnpEoiGt3tcZ/dXsiG7W/iv74Lu1y9nSm+05x0U2d+0jeoO/wk
d61/B1R+Pvk=
       "]], Line3DBox[CompressedData["
1:eJwV0EkvHWAYxfHHxtSaq0vDR1A1RBA3hmu4SLphbVtjkVhICCJme24/S81c
dmhXWtNXIOnSz+LkPM/5nydv8laPTHwbz4qIWRosiXgui3ii/58irooj/pRH
DNMV9ih/oF0sYa/6HLFjHjCXlEa0Y8W8g1+6/e1uG5+R9esU8S17pbsUltDL
6G3KprGUTiFvk7/ifZSRXei0yn5gffY5+U9ad3cv3+DnOi3mKZ1enV48Tc2y
Atm57ExnTbfC+4tYt+wj1qTzgffYT3VusSE6s//D/tKquxPsRj6pm8TyeR41
4sfYNdZgnpB14UtulildFLHCj3Tq8HG8E8/lX+0v7nqo3nyos6A79v6POt3y
ffqC5chq+YHOvM7o+5/rJPE9yrbX4L/w7+Y78xvdGkB9
       "]], 
      Line3DBox[CompressedData["
1:eJwVzkkv3XEYxfHnGjcketE1El02VjVTuje9hK7aDQsv4e5rnmLnmoVQJF6F
jaHRuEq4UsM7MH7+i5PzPN/nnN//X/t9aGAwFRHDNP8h4ls6opv2KyNK7fnq
iJ80a36oinike5qzl9Cu3JX8jPkT/p/q6Y6KsRvdHZlLmWl7F9+2H5RF/OZF
2K3sP3zK/JVv4qmPEQO6W+ZC/AKf5P3YInXa83oFyTeSPu/Ds9ThtpG8ga3x
bHnEhLkdv5Rt4+t4YKuJ+9YPvXF7q9sK1sJz9reKiAb3nN45jWHNbksyTXyZ
v8pcJ/9lzmGjMnWyZ1RLaf2//EXulB/TiMwRP6HP7hn9P+ZnmQXvnHvnl0wv
vkeN9iyewcaTO+/BF+iL26Huk24Nr8beAUS/SfE=
       "]], Line3DBox[CompressedData["
1:eJwV0EkuhGEUheGLCUpbVUrfhUTfzszYgg1IDDVVWINViKlmIDERvTVoRhIJ
oVBKU7bgMTh57z3n3C9//t7F3Hy2LCKytN0YcZ2OqMQbrML3poglyjZE3PKq
eXeYwAJ/mTI0wKvh3WMtfvBekhGD9jzW8R7ME5mIWdmPuY9y3n3EHV69zpO5
AUfsr+6G7G84ap9x2yh7pCStud3k71LK/qybxn5cl03pv5ibeHnM4Ekqopy/
4maY9+7tU16z7ABb8AwrdFZ1RnQKOue8VtkhtmFRdmH++P82nSKWsP3/v+C0
+zmdX/MYjdOnzkIi4shdh96XfcN3fuOebidvi7roUueHP+EuK9unK1637Bh7
sCSflP8Bpeo+Fg==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0DlInHEQxuGxEVmPFS+08ajWA8E2xaqpItiIIFjqCnYehZUgCkbFXixM
xE4CSRMPEAut1BAsRRtdu0SxEddt4kGeLYbfO+87//mGryUzNThZFBEzajwR
8Vwe8bsiIo+psoiFZER9ZcQ8NtRFzJZG/OFfmvmLK/p7LNY/1kbc0au8F8zy
XnFNn5O901W8N1znVftGjfqgv5DX0bWq0UwK89iKW7If5tvpTl4bdmEa/2HC
Xd30gZleTPN68FC/4+5d9dE3jvFInfN/2jliJqkfxSveGA55m8Fb+TA9QU+q
O/k0Zgr3y6boT3YuYrMdnzFnZhmnzSxhv3wDO+Rf8E0ebt2k58x8xV7/9kme
U9v2Dnizz99TJfQJPvBPC/9K/wvPCnfS19jn3Q026W/xm71Z/I7/Aax4Rjk=

       "]], Line3DBox[CompressedData["
1:eJwVzzsoxnEYxfFHlHI3uC3qncklZUBEUSZ6KbtLNkKUxUqxIblEvUyKTVEs
NsTqEquBIoWF8DGcvs/znHP+/36J/tHkSFpETNJwVsRNTsRFXsQtTmdHPOBn
bsRrUcS9uY6e6FrmGedkXjHT/ibzYp53+8XQq8el/Ihj3iIuU4n7o3wppmTL
iyN23BsLIraxQaeCd6NTifsyNVhNTbxW/NLP1mszH/E7sNmtHVuwC+/1032v
23wh04sn9h68sheYq/yzEG/tQ+59ut96g+Y7tzEs44/jk30KB2R+ZCbNQ+ZZ
nKMP/gIe8OZxgreJlfpb+MPfxhn3FP7a33m13vGBSW87cj+kLPPZ/5vcz7HY
foUrupd4iquUodsps2ZOyGzgLq3THv0BJrRG1A==
       "]], 
      Line3DBox[{1840, 990, 2944, 992, 5581, 2947, 1856, 2957, 2183, 5226, 
       2189, 1041, 2971, 5584, 1043, 3113, 1436, 2981, 5664, 2238, 2239, 1922,
        5271, 2252, 1103, 2483, 2255, 5548, 3932, 2492, 2493, 5374, 1533, 
       1558, 1535, 1562, 4984, 1162, 3038, 2324, 5673, 3042, 1181, 1617, 1183,
        5009, 1619, 1211, 2367, 5322, 2366, 3066, 1239, 1678, 5043, 1241, 
       3075, 1267, 5543, 3155, 1269, 3086, 2422, 3096, 2449, 3099, 5559, 1320,
        1767, 1322, 1773}], Line3DBox[CompressedData["
1:eJwV0LkuxVEUxeGNmMcChRgLQyNKQhC8ABpDotGYElpCpdCZX0JccoWKxvAA
EiQShTmGTksk4rvFym+ds9b+73Nv3fjc4GxaRMzTTF7EdVFEY0nEDS7nR7wW
RKTxL3hZFnHIp9MdZdC6zlpxRLuZ1vKIVX7DXWZhRBa1mbsyl8NnU7mZKqym
DtmtrJavoSNZPTVQwn2nvCn1Hurie/GPCuzpw2Z3J/ZV232M5/YmzQ35Vq7z
MF67G8V+/REcwF+dCb5UZxKfdaZxTDaFT/JXd4t8pc4Sfjk/8N12tdl/zz+m
fqusHjfxR+fF7DY/71tbuIC72KKTwHRvftPZ57/d7eGKzmnqv3I+wx15od4F
vyo7xzNcox6ddayQF3tLLxVRCb3pDcrfsUH+iUndDzzAf+a/QQ8=
       "]], 
      Line3DBox[CompressedData["
1:eJwV0EEopHEYx/HH0cwyJObiMm7ODiIne6It5eBic5gTJWocKBcHm4uyCkmk
pBSx4aAoZdgtDgi7ymEO2tTugY2S2/rM4dvz//++v+d9551MdrBzoCQihnGY
iHhFZUXEx1RE7YeIn2URrc5VNRE3znv8M76WR+T5FJr5BjtN5jb3iH15Bx6q
I77Z28KG/C925CvyT+asfAar8gecytflbejzjl4syu/xg+txX+Z+JyNqvC+N
aszxB3zB7NSZ17nW+ezZCb7bLPBT/B1a/N5JnbxOO/ffTplvbHOe4H+hUfZF
Z1fnn/Om/TfzCWP8FeqdR3XWdG75OvuPsow5wp8j7Z7TWeCX9BJcvfeXmkP8
GZI6fTrT/It55/5s9he/G0d2m+xkZeM63/kbnCDL54v/red18Tn+0jzmLsw/
8ncCc0rM
       "]], Line3DBox[CompressedData["
1:eJwVz80r5WEYxvFbWTnmOBuTjeFsLI40LLCwUvgDWFiZBTvFLKg5IzNl4WWj
7CSRlKIsvNapWVicolgIEwuLmZrFWSDjLcnGx+Lb9Tz3dV338/ule792DhZF
RBZ7JRHPWE5GHJZGVOLiQ0RbWcQ5vSmPyPEf0JpSQEqmgd+CemzxbjFpxy9e
MQp6m/oN8ht0nX+FEZlt/g7/NRFRpV+DT1jhF/DXuRJLMv9lfup/tucHXeD/
Q/nHiC8yPUjzqjFr3mj+h3Z5Z847v/U7nBNy7fTFzhn+Jdrcp2XyMkX8uvf/
o0k7pvgX2JWZkKlFs/dz+i9mTc5j/DNk3Ef5q/akde/dH3CH7/xjVDgPyczr
L8qV6me8l6DD/CP082f5jfQJjxgwP8C47xrXy9Jv6DNbk83Tazu6ZYf4p3Tf
Wyf0yvwNNuJHow==
       "]], Line3DBox[CompressedData["
1:eJwV0T0ohWEYxvGbLL4tiEVkpQwYDViQYjaJMiFfC2WxYGOhDMRgEIsoSkcU
hRgMQjEoCmUQBsXvHf7dz3P9r/u87zmnvHugsz8tIkaQyor4wUZexEVORAVa
8yNqCyLqiiJanPf4TyzonPDFOM+NaODOzG3uA9P8AZeJdLu7XK3OjrnJv2Gb
Wy2MaDdX5MtYl79gyP4ft8V9ZUfMcOX2p5Me/4QTvkdvTedVZ4Qr1Rk2F/lH
XLo384dmCpXeZV5+jza7c9yF3U47GXw+3+E8y98k34Pf55uS9/a8XzuNzlPc
NWrcJ3W2dKrlX+5V5gR3hTL3MX7J7qpOKfcsKzFH+XNkeuaDrD75reRpGJSf
4sher3zG7rv5hj75MVLcj26XbJy/S/4Ln3Nrfsv/AcQ6SQ4=
       "]], 
      Line3DBox[CompressedData["
1:eJwVzz0oxWEUx/Ejycv1NmAxISUykIwymUyKgSwGZUBSWJTFIiwUiUFdg8nC
QhEyGK7LYDB4uUp5L4Nk8zF8+/2f8z3nPM+/amC0ayQrIsZxXBDxi4vCiBpk
iiI6SyIe5Gd5xAH3jfzSiDwUogAJXOpp15uWe3q+MFcccWRPAtkV5rlWPfty
h//AHpe0O+SWeiOflNvcCx6da7Cp5ycRschVOy/ITf4JW2bfuSm1Sm5Srqkf
msnIdb4Dp9wJar1lWf0Wbd6+xKXN95jL4bvlrdl5/gZ9ar0YwTBm1a6x6/9m
zNYj185mcw32Nclp/ur/bfrf9G3Yl3THi+9XPGOCT6HM96gdq3pW9GSc6+x5
kGP8OQb5ee5CLYUhtRZ3nsl+rg73uMOv+/8AhJ9H8w==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzz0oxXEYxfHH28K9WJA7sRoMGAyMMlksGL1M7o2FgUVZMHAjWZSILFiE
WF3K2yZSVu+FRYrJx3A6z/N8z/n1/9f2DXcO5UXEGI2URFwnIt6TEb/FEaP2
bvuHvYcPuD3wT3sBVlga0W8/rsD4EP7NE9gCpf9nmQy/50m9bFlEJVZt/9Ib
wVLmUT6un8GXqUamqjKiy9xNPTSJN8vO6u3h+zSld+A2zWfwfLksnip3x09o
DjuUyfJ5mV+83X5Ep/iZToLOKUm7eClP+94L3irzSKv6N/Y637VmXvHWhMyt
Wxs+6L0t9wv9tHnbvCmzJJOxd8i8yNbrP/FXeqYdmV2ZN3PXf0a/SLfB/kON
1EQ5mWnv9MrM85xMnv884S34Hb6ou4ANyqzzS2yDX/E2mT92HUfT
       "]], 
      Line3DBox[CompressedData["
1:eJwV0M0r5XEUx/GjuaUMl4ynjYVGHprFSLOwYaOuKTULIpGUUkqu3TQSqdlZ
yEMiD0NmIQtPWU3IBhuWFoi/AGW2bLzu4tPnnPN5n/P93VvRP9KWzoqIX/Tz
Y8R1bsRofsRbTsRLXkS3/rQ4oocPmA3KErh23kFFJRGdfER2n4zIk83oh/Fn
9mbVafWDLOlekpdi/piv0jqt0Zj9z/INdbmbFZhtGrc7Qb/lDfJpN2vN93A7
tE+7NCVvlc/ID/T1mIvMt9g90s/yOUwvZg7z3Xc0yJvNl+kSU+XdFfUSrkx/
RU2YG75pfse/YP6q1zGTbvW5k8L8p53MHbeHzXbVW5hFTFr/Q/5ov5oK3Xji
NVRX4PfwZ/pq3oV7VR9n/nd7J/zQnUazSmy2/gM/5wl+wf/Jb72z4O15O0Nu
FMpSdj7xFv6NvwMMZ0IJ
       "]], Line3DBox[CompressedData["
1:eJwVz7srBWAYx/HHotwlx+AYkEwyUFIWMRkYmCiUcgyKxbXcjsk1C2I4BgMx
EbEYKLs/gAmLP0DKpXzO8PR93t/v9zzv+9aMTPZO5ETEnFosiPguivhRC/pf
HCqM+MNhPE9E1JdGPBVHpEsi8mQ6ndf0lRUR69jqPI5lvAN1aOZVfp/2hu8q
aV8Cq/jV+Ckza/+cWsqPaKJd8L7ol5imN9NWscH+L/2ZfbXubORf6zd4Sd4m
btvRLnOr7vgdtF31KLeHuVhqNuUd3TJtMs8qw+t3PsIrd5fJzcsM0Dr5KTzh
vdAbzJ/qj921IzPG65KZyr6dPo2XWCd7wp9x7uMvY47ZG95K9o3YKHMnk3Ye
lPlw96b+nreFD9jkbzNyvyolM5qlKqKPZee949WOjPwEv5zeTU9gD7bgP32E
QoE=
       "]], Line3DBox[CompressedData["
1:eJwV0TsohnEYBfBHitxJPkkSSjaFfIvRZHDLLJeBDG6LGChkoJTklrIot4nB
bTAKGzEYbIysNpffN5zOeZ5zzv99/+9bNTDWPZoWEdMwmxPxmB8xX2CgF3Bf
bsSZXUYiop8eyY54NZcVRszJLMsM2a/gcplhelImPS8iS65YZgfG7W9LIrbk
JugpmU/+trmCf4Ar9ad5VfYzeE6m0TnV5m/dWrkmeoHXjBfxkswPfaJfo18v
cwPn5ku4gFWZTLzmjCuc5N/iTf123S28IVOkX2x/By0yb6nvQT9DHe8J78rN
eKcXupX/BUf6984+xvv8CV6bfR8egITuOx6EE/6h/gfdIzPv+Vd6i/gan/KT
vG9o0OuV+aN/4Dd1H/6T/rrnDfH29O71HuCG15G6F2+Ml/CPOs2luCt1b/wP
SZlE6Q==
       "]], Line3DBox[CompressedData["
1:eJwV0c0rpXEYxvGbOpJxnINGR94aLxs0Ndh4KRazIaLJhpW3DYkNTY2zRckO
xc5GlD9AMws1K2YxG4XYKrM1Z8OC8jmLq+913dfvdz9Pz/NpZvnbUkFE/KD6
0oi9sohjquSPsAJ/Y3FVxC52yIXpiBaa/RBRLs9gRr+aipijFZo0K8rv+Bgx
wf83e6JX/iAZkbVrjH/Qr/Gj/L75kDvT8rb5P7McPdK52RR90d/as6Vv8g4D
uju5H//ioh03/JCz4/SH/+rOJTY4P2j2093PZiPO/pK7dBfUSX3yi35Ydyb3
YK9ZG9+NrXivP/Gsbt2p3ILtuia+DRuxDpvND/k01srV/JW7NXwm/+0wpdvh
X7xPWs7pU3KSL8MEPus2+AXP3NRvYpE8jgnM4jx956+dXXcmZ+9bif+a/+a4
hhd2XdI7E889vQ==
       "]], Line3DBox[CompressedData["
1:eJwVz78r73EcxfGX4aJ7ubhiYLnqooRrQPmie68UJYrBQpTYuF/KYKHcwR+g
GOlrUG6pW8rEZiExyI+YDAYGEguK+zC8ep7XOef9fn8+JUPJnt9pETFpvmZF
XGRHrH2OGPsUsYqjuIjn/M2CiAKdD7kRGWZElo7DeCPb0emWv+RE9PNaZQ2F
EX30hqxTdivrsdfw7+hu+hIrzCP9R2/Ce+3vvjuTdBs9y7/Gcb0L00IP4i88
wKQ5o8vdO6jb61zCfmwaTId9gP/PnXv2Lf1m31dP//Rdddgl35b/sDfRVbyE
c5X4HRt563QZVttL6b9myZlvuPL+D/wU/UUnZS+mj+TLWGTmeXmyBfrZO/n6
efShTg6dSz/xa82VybTPOZOBM3isM0Xv65/Kp3lvHyPu3fmKD3jC39X7D9os
P84=
       "]], Line3DBox[CompressedData["
1:eJwV0L0r5wEcB/APUfI8cHX1OzoPMRC68weYKEqJW1x5mFg8DgaTPHQX2Und
WQ6RwejpbjLjMkhC2BATE16/4d378fP9fvt+7h1sG0iJiHEoz464yYnYzI0Y
zooo44fwMp/+IeJa91H2H/+W9et+4T58VxhxLG/X7+NuWTbdhadt9mQp/Bp+
zov4Jr9xM6nroMfwqu6FHtXfQrV3tvA9dDMewU2e8d121u2l7AEuYE/WCbX6
Y7uf+pL8iCPdORzCrr4VtnU1dg30DvzTHbj5iz+5+eK9GXyVTZNvSsjqdPtQ
C2fuN/SNui2+Hq/zlUnteRX41KaM/qr7wydwKV9Mn+hW7IvoRXwvX6LTbBb4
hPcXJjsogLnk/7CZp5980w/3mXwWn4Ez8ZTNo26CvsIzNqFL5V+T/x6/4Uvd
kfwdy5lD9g==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
SE84NcpigPt9EBBp2cT9PnSo0xJIft9C+rdo3DCGGuQvkd14lY8oVfZoiqs/
QLjJOV+WjElgjigUjhWbR0Fr7MMXp7/CLZZTvT3uGGQS6xNPcNdA46mR66R+
wn/S2dYHJgioO+TLua+qPchUoON52bMc4OHqqNvNw3lY1+ke5245FLlwPa6S
cYLDR4MnQlamkdtI3UfZlRnwVDJSrKMrhxqzvOO0lYsQnSe2n792FD5ctDG9
URwJjA8ly4i4XmU+uy7WMRSJ/jDnX66fDYKljFekfggafXI6cy8hHl38ordt
lBcMl456+k2ZYdBi3MbH3FoL9HV5C5sFEaDzObBqNw7XsR6t910DlWjylmfm
WS8XcOVkiLZsnwb1S1n/VbyYhfyQOwx8LpEwuOrx4L4mAQXeVGyTZ+lHF7fy
XDNWs6BFp/Ly6w9EmEnz2WPN74ThQ3F+3bwBIOsaPM5euwS2iQo/ulwGEbWd
bqOxVg4ozV0L5V1ZAiWaS8cU1gbAxv1HpfTLTPiiQ0/qF6GuU2Ub8pdy0JVH
Hk6kfhGzanaRwVcCfDPQFXKv7IONX73ZFT9d4K/m2hRNNIZ662zVO29Xoa7L
mU1RFvage3jgMMtrIpJ/M3mVd7wTsS/nMi/XuUCQoMKp83pEpB74+B/9vi6k
9Ucus9HKCdjfHMZY8PtUyYe5Dfw+yb5zi7vg97khv/xYWGwarRDf5c+tzIKh
1++k9sEf8IpR20NxC4P4rGBfh8xopDAiNtx2wBbW3EI1MlcWgLorm89PZhwx
hJQ8I/XNqlPv0DEFEtH4Wd7tvuIO+Oy0Jbtp7gljUyH1ivMY0OuLBGcfzAZj
k2Pi5BEGUFeQr3PLoxmu6HamObBjqCw6ToXUl9N44aP7EOfn/CeHq0wY+0Eh
n7FdfM0ZGLSqavbSZmFwHl4dcZxGPAV9nAd3n4Lhi4gOveNEIFKs8fChbqS1
23Nk35w/fPI94b5HNQu3z8+Z+gjPoBcdTdL+LV5g8ItsIgOv70P81lRSRQj9
ZxXeQOofvhrLUKxrxX2QcXt5sVMxkv38/BLL3+/w2OKWeWEEhk7kFbOtalRB
VNPwKOt6AHwpmw9wFyMiir4eu9aGLqhQjPM4M50I63QMbxcoMHTraTlFGVUr
Us49dG2uNxrOf/z8IHobz4uNkmDLyXD08g7f6LqbC8xsLD9woCai2Mt3U6iH
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
JLpH2YaXIHy6xiyELxnO07beSMf9BXONtM6EZBgK3FBP3aKqhkfjdGvcbhjE
u0wKJy5VQ/VwuPn9s1HAm13ul+y+CPxWZu+9JcfA3+JW92+rCGDUjTtCievw
qopPKMO7LvTIM6X7vW0uGAn0fJ3ubYd6cfePVAlE2N1l+yrulwnTjw+ti7O0
w8VTr4eiy4hA4cXhU0eXDZ8UJ+NjWzEUPZeYcPVVEbIfDPE3kouClqxg0agZ
DJg87q2O/oqDmi0ebjVCBtynkJ7QZ69DT+Tt/3EZ4jx+5rQ0T1I6nL2v+BUj
4vog0vJr6XsS8M62i59YiYWox0jjWS0G41qxDNIKH9DTusEvFXfKoPbgzDnP
dAytqyXpT7uXo5j7odp551JgX+GDzA1vDMSIrqJlNytBkV+T0EHMBjAaP6Sq
SUCe9bHVVVt90Crmq/X/85PEpbAbCb3I32TGvqF3DjWtzF8qfzAGs63Mdpdl
FwF7yWYpFj+GrtB5vP7ClA68rQl5LdkYPLP1P1e/jYCLlWhzNDgF0ipqkl4b
EJFIVJyuSXonmmQN9BgXToLzYWuKAgMLaPDFHf8JvnEo7oxi7PHOg2xcnKmS
FsHK0DH5hkEvuh4kP5R9rAdu5lzhmR/CoMCOr4duOQBsRGKPGs7kgXd+5Nnc
mUXkPX92+jrnKNpN87rBfzgV6OZCniU1Ymiq6HysbUcJuhf7G173e0H9by4y
IbMsyLxvkdcxjwGHGe/g6RNu8Ks2y5f6RTvc+PZHLaCBCLqxRI87foHQ8LXg
1C1zApp9k8YxM9mHurwzztDl+EJeeN44XzkGjm9cCnjKEYyJG/oycDtD5Z9T
j9KVRhFLzbLCwvQiEr9SpobWguDdzeNkvuZDaIaSVygscgkxzLLRO96Ig9R4
4q3g0EogrhYetkvE0DH90YKssW+gIWXjrePYi1rP8h88W0lAx+7ZDCqw2AOv
wBmZ662LIBHo6TX+ZhQJyH+T+yOYDlckuB5bDy/Ck5V9N5cfDqGr7JP7Wu/+
At5L9511P2DgYp2lnCtSA9fohU4+EM4Dap+2Jc97GPpy+dyht6cbUdr73zNk
KTEgKvDdl2sOQ4vGpuOCmtGo2k6Ip1siE0oFTmfSaeG+y+ZHbnfLDMqL0rJt
os2EwVTle4a+GKK94uX7TL4choqamDRsCnF9VfpbsExEVe3V5HRibegVK1sM
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
vZQHqvzddscY49c1i4nPL6mBSEx4T1k8/RR6ukV5N3/4EEwbtOzGOAgKS62V
8cHZKPjnscurMA7KxzxfZdo/CCK+6rbHH0yB29eRjs4TqRDy4WWDV18w0Csu
+vnOtoEcP+tAXA8F/hZkP6AmjMCB2ZWe7NT3aOfEJgcznQnQNH9hFfVkHIVu
7lgVdy0ZXtqUdJXEjIK9zVrXjpZ3aGrKevZMVycIPnj7oE2aAttsp2zSfhEo
xODnTpeo19BYXreaVjfkf0qhKZynAlVsRoYY98HYlEOIhvucSU+Zb3Fh3vXT
wju9oAGarW82SzVUwzOpLv0rs9Pohb6wdN37Loit1/RVwfwhcvJV5QWFYVSw
wG4xaD8JHMq/LV9e9AP30C43zEPA4Ob7nz5PhiF55iIXjYdkJtiMUecI1L/j
9N0lumjI2KNz7MXEW1g7Z4mY3kXClubGVMxnIEdr/XYrzGcKfykXO2A+72gs
+NGoIBPK/f2PB7P7QHLaME99WgJ617T0onz/CMoWnly5DfOizhNw3vB+B0SE
3F+ZvjSNZNXF/Wo2NsO9qQBx6UPT8Mf19V3P5gEwNPuovk8yAqzyQx6ZZY+j
9PQQ+r72ehhCClYes8OQ4j1k94S/Cw348bFingb0Z4XyKZinte7nNOQWnUR2
UxpxW23aUG1gz58B8QEoWxNge7/lI4rVNNug9XwGlXPdUeLHfI/R5N2LLsMR
9DCxnsfMYgL0ekSOCtpkAKOpcB/mjeC/mL4d80Zw2Wz1kMYbmQNPOzoNUtEf
G7Xw6K0NaKXD6HZ2qxR4+WHkmn5RGzoxWPNEv50CT40X9X/NJ0LLTv/40XgC
/gpUbvXfWQCTJ9pQAUqC2adzDq6hVEjXv/rpuksTGH4ruLeBzRc4CPU8b41+
9Kb+zZ5ujXG0x92f6mjRBx/PBjZfwPaIt/Xj77sZn+H9zP5tD7/awvFNrEaV
2VRoOX64cV9sAzrsZn2HLf0zNCu7nfxmXAVJTxzvWUgSwPTqB0N0dRJIBS25
DO9tQ1l+gXck+ikgZ29kpFKYCRneWzn6M7B/LfHz8a0cfyh1H7Wj9haAkhrD
Ct9QAgxTtnzUf1IIjpmp3a65yVC84m1uzwkKKAz+feuVHw4qzapUeVo8ZIZN
KRHz0qXPPDsEn2RAt9P6Wt3GDMhLiizafI9AJ9q11PlDy6H2MC9XZX4E1P7g
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
F/GSz9T+6tULlT9yEphQq2PJ+T6jEDbr3vTdWfoCtMNd+4xxHj/5pPaqz5VG
YBOefTHX1BcahjSS8fuJkiaW71oXGItSDfk5dYPj4UCHwAoF60EwMG562x3d
Cza77eypfdp6MytD4XEmRNut8rfZGQkpzhPXZYvvQ0WbYK8jGx3W5HJdmsXd
Ap/Mk552Tt6B66tfxKwcbQN/s92LOtVHYFC75Ry1x2u/gdmdg88ZUWHuc0NX
iuHn4rsWe2fdh9Wd6XFzfbpBri5r2r6bhtaKXJSLXpcFi13d9QIu0uHoM1f9
n2ua4NX5iLbbRUGQlyM9KYrr/UX2AyXHHqejvz5s9lkmfnCD7PPnkX3+WLLP
/5n05QZJX66X9OV+kH3+eLLPP032+cNUL314in/vlTV33Ww4wtFU54Ydd7x8
wJT039RJ/02C9N/Wkv7bLtJ/+0F8vb87CGy1VmSgWUtUR0ME65B32l6nufov
oJT02T6RPtsl0mfTJP20TtJP0yf9NDPST5tNeKknST+tZUkOPdWHAU7+d+LG
+6pR1bbCK29v6eC6m/1n9nEGPPnp52t1sBZ1pQuPW6U7gWhQ80mZ8hFQv3B3
/d6RFuQXpWpO6Tzskpuve72+ETbeffen+iodFiV6HaHm4ImuEWUuTz6gj6+b
J76dYSIt9xWhn5reAJ+aj/83yRbUr/l9+0TTCNqUYamp158Od6J87Ke20+H1
2PHrV0qbUFZeeE3JhXh4TngHlgUs3sGu7SzewbaqhvLEmiLE+ODkFHuEgYKd
BtIo/YqbOstM+3UYcOB4WbTcdA160vKtaPH8ZGhOulMY/JOJHD9vPp5YFo5m
N60YTbgZBifM5TQHlzqjrunF0ZNNuE7v2njTxi0LMog+UgfRR7pF9JGEyf6k
DtmffEn2J4VI/AuJR5K41P7z+fh74Xr4Ecu0snBYOLI7jPpeqY50eu1SZ6gz
X0p9L7ySH0qhvteF6Cy9ITpLCkRnqZnsZ9aQ/UwHsp/5iPSRIkkfqZf0kST8
soq+SrbAg10Osfg6w601ManUddav6+zG1xnxaDY9siptgoDlnr7F+Dqrkf7S
RqLXNET0mrKV9jDwfYTe8Xl/8H2ENfLJsdR9vEx0kwyIbtIjopvUT/oPXaT/
MN+D1X8oJPuiwmRf9CDZF7W2sxB6OM1E9Mmm4KcFKTsTTeZLXzjiC9d9alx5
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
e9IDneluSj6aNMRMV1YI9YuAbJ/nvPj8B8UlQdt/pMYgBRHRdOr8z/AzqMR5
BHaFmojhPAJlK+eaWuA8UnisqdrpWg88jjzPX76Jhir05dmnorIgZ1TaB5+f
8Nyudm1M0ztoF1ZTps7PZTfqjG07M4C+aWxwyY1udE5PO+obzne6S9n5Z0vW
oTf7RC0Yl+mIqZ34Kgnnx31npY7iPIvuXZWxxnkWtb1c0DQL59kZ/vgDwh9f
RvjjjHOpajjvoyDXiBiVsSJ0bXqRwgTO+weCH53FeR++7zt1Fud9tFHcdjWV
9200UuQmjnah75YSkgbVQyAzHcJZFfMGfijG/5avZUC6f9QA+0QlHGUKuX33
jYBlRF+ujejLiRF9OTYSnyBxNRJ/wT9/Lc5faCn3xo7g7Eok8kn7rzfOX4K8
phM434FQCy8t6O4LlPDH6zSV754RHfI/RId86yaWDnnWi8lQwRO9aJ2O8QKu
oo/oZtiSR8UY/zjxanHgfIoCyiUDcT5F3L77t1P5dKavEkT6KiKkr5LEljb3
ng3GOR2yV/mlESqTPauogvGVHeHRlxEdPPlOFo9+xk/2BPGTTSZ+ssW73/mN
cEZAzOzJctXjDPShbODbCblaqFYar8K4DkXnpDr6O+XBfqVEHgrXiS99boDx
A7SjKlGMH9AsYZmPFH443bpkMKauE614nS/2bs4wSJ3zftWP8STz7dQy4Z2R
oNjztQbjVSSRl+jjhvHq5Osn9zFeRYsjvnod+5GEytsWH7yO8eo40R3yJLpD
DkR3SJbw8WMIHz+Z8PG/+TMZGEfBHY2zkRhHAfJvTqJwlNHLRHUp0wp4b8tU
3tfch5oyeUw6MK7Wbju6FOM6tITuoZkZ1QiaQob7IzCum+kvffBn9ZfMg/9X
X12H6PLdJrp8Mzp+eUksHb9YouMna8wnjfEnuOiH1ogvSgF9lVKZFIw/dcve
lGL8jBg5xcm6Hi+RN/cq2XyMn9kEwjlxXYDqcjIF7nD1w6uzrlXZuC541hO/
QuwjE3FoLJwqOJyDYkREuOepR0OVkWv2RxH8vLWbBT7s/gg3Dj9/cm1uCpzp
sRGRWM9AGr+uKOaK16AO6caNkrHvYIVmlshVq3cQtmlgn10gfp+mFqw6efUN
HO6r5bR2ZMLDoGNr+6SeI9Rck3lkawlIZH17XCDMRD8/Kfyw2fMZnoZntVC+
Vx9uC5dWXi5Fg49O6bumM9DUvHSJ2svlMPeeqcLk0S5wvUC/dbx6CDVwH42q
xO/dq7kH+1V5aYhh/vQbL60brbzoJhzUXPrvPCidzIPEyTwowXTlPXxOwhjb
CoZlSRNkHT7z8zI+JzV12fiKnvSgdRsLk701aTBnMvNzCD7fjNqGKX1ROCDX
t6Y/Lgm2fj00TOmLxjc8mIz7PYzGQnclGszugKj+CWeqfxtM9soaiZ6tDdGz
3fq68WCWLwM8DZJeflxWjT57Pl3rtTcd7vccer/ImIE4XwVKpC2oRfddazUb
zUL+zVN3SJ5SJHmqYMhYHeNSxAUfP2Bcip7Z7laRw7jUPl7MwUyeAT4Ja/l7
ROvQoydxqt94IuDebu5zVlbvkF+N1D18X2A9vFSn7su7jgO8+D6C+s4QY3wf
QVPniQl1H786yAXiz0E7fty07xatg+8973ZSn/Npj0Umfh5QpYPve/w8IHcr
l7PU8zCjp9RD9JREiZ6SCsduSs8TOM5e2fmzpxuO5vRfovQ8f4/f+ejYxoC+
cdRg214JvAN/hSkd0ZyN3uzRVR3Ie99KG/raYbA3VzpJ6Ze6yv+DZ1BudDWF
Z1C2qq0XhWeEq9jaUug9kDUt91pvZBCpDXbKsgulwpaQqcf4ekJ6g6hx+oJa
4LqjsaAZX8+p25auGB+i/sZf1zE+hNzeNUEUPnw+fT4705eB7u41U6pcVg2/
Gj/feIrvy49kVv+tmfTfPpL+Wxnps/mSPtsE6bNF2a1MDbpYjxStRVr7rtMh
a6D50t36YjAjvkjHjrN8ke7RiC8Sia8icUUSjyJ970Ok7x1L+t5eP4S13rQy
EY1zy+0r85JRQejbIUoPfMUUUxK/X8hh+fzbdKnnsGLaY/wgfr/k3X2MJEeY
6ILZrLDy1mhgSz3NfeBaHGiRPokn6ZP4kT7Jgou9tt2r6kAuL5FrpRADZlkw
v79zTodPfovdHkMdKLo/kq6op6Gflv0a8zZ1QOvPFX/izjJA5Erd5znfamDF
0dBeqq87LqafuQzXU0Z3lmanGCegSx99vm3miwTnhXEcJVFM2J+sbll0qADO
LWx4XF+QAbNbZh142IzrEXWD6vZtTah7uZ9gSnYJtC3UUYq8WA91mavEeq/T
0QuHhcsc8PUMI74wXVMsX5idxBfmyRGtqZ6fTLQuQnsv9+MoWLNQKvBIrh9c
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

    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{370.19117967940497`, 247.43442688405324`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.239129373796237, -2.0558553363039747`, 1.4865256417544082`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.619791211795747*^9}]
}, Open  ]],

Cell["\<\
If we now look at the corresponding Bracket sums (again adressed with respect \
to the cycles as mentioned in Example 2)\
\>", "Text",
 CellChangeTimes->{{3.585554256586432*^9, 3.585554284819312*^9}, {
  3.5855543272669077`*^9, 3.5855543351216593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "computeBracketSums"}]], "Input",
 CellChangeTimes->{{3.585554338342684*^9, 3.585554346785474*^9}}],

Cell[BoxData[
 StyleBox["\<\"computeBracketSums[data,originIndex,mM]\\n\\nCompute the sum \
over the congurence classes h+mM^T*z, where h is from the\\ngenerating set \
and z runs through all integers adressing the values in data.\\n\\nThe result \
ist given with respect of the coefficients of th generating set\\nbasis, i.e. \
each h is decomposed with generatingSetBasisDecomp and these\\ncoefficients \
are used to adress the sum of h in the result. Here, originIndex\\ndenotes \
the index in data that corresponds to the \
origin.\\n\\n\!\(\*StyleBox[\\\"Options\\\",FontWeight\[Rule]\\\"Bold\\\"]\)\\\
n\\nValidate \[Rule] \
\!\(\*StyleBox[\\\"True\\\",\\nFontSlant\[Rule]\\\"Italic\\\"]\) | False\\n\t\
whether to perform a check (via StyleBox[\"isMatrixValid\", \"Code\"]\)) on the matrix mM\\n\tand \
the check, whether the Origin is in Range.\\n\\ncompute \[Rule]  \
\!\(\*StyleBox[\\\"\[OpenCurlyDoubleQuote]Bracket\[CloseCurlyDoubleQuote]\\\",\
\\nFontSlant\[Rule]\\\"Italic\\\"]\) | \[OpenCurlyDoubleQuote]absolute \
Squares\[CloseCurlyDoubleQuote]\\n\tdespite just summing up the entries, the \
second option sums up the\\n\tabsolute squares of the data \
entries.\\n\\nIndex \[Rule] \!\(\*StyleBox[\\\"None\\\",\\nFontSlant\[Rule]\\\
\"Italic\\\"]\)\\n\tIf specified other than None, only this Index is computed \
and its value\\n\treturned, provided it is in Range of the data.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.619791212207265*^9},
 CellTags->"Info3619798412-5813794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMBS", " ", "=", " ", 
  RowBox[{"computeBracketSums", "[", 
   RowBox[{"ckDM", ",", "origin", ",", " ", "mM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585554246731226*^9, 3.5855542540550737`*^9}, {
  3.585554353601335*^9, 3.585554356570677*^9}, {3.585554442416482*^9, 
  3.585554444606617*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.619282804373584*^9, 3.6197912125158052`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMBS", "[", 
  RowBox[{"[", "131", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.619792398474069*^9, 3.6197924101754208`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.619792403256225*^9, 3.6197924105802593`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "we", " ", "see", " ", "that", " ", "exactely", " ", "one", " ", "bracket",
     " ", "sum", " ", "is", " ", "not", " ", "equal", " ", "to", " ", "1.", 
    " ", "To", " ", "obtain", " ", "an", " ", "interpolating", " ", "basis", 
    " ", "we", " ", "divide", " ", "each", " ", "Fourier", " ", 
    SubscriptBox["c", 
     RowBox[{"k", " "}]], "coefficient", " ", "by", " ", "its", " ", 
    "corresponding", " ", "Bracket", " ", 
    SubsuperscriptBox[
     RowBox[{"sum", " ", "[", "c", "]"}], "k", "M"], " ", "multiplied", " ", 
    "by", " ", "m"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Det", "[", "mM", "]"}], ".", " ", "This"}], " ", "can", " ", 
    "be", " ", "done", " ", "by", " ", "seeing", " ", "these", " ", 
    "divisors", " ", "as", " ", "coefficients", " ", "in", " ", "the", " ", 
    "space", " ", "of", " ", "traslates"}]}], ",", " ", 
  RowBox[{
   RowBox[{"i", ".", "e", ".", "  ", "by"}], " ", "using"}]}]], "Text",
 CellChangeTimes->{{3.585554452507328*^9, 3.585554495644246*^9}, {
   3.585554777170624*^9, 3.585554928818407*^9}, 3.5855554446732597`*^9},
 FontFamily->"Arial"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "getFourierFromSpace"}]], "Input",
 CellChangeTimes->{{3.585554932466837*^9, 3.585554935513435*^9}}],

Cell[BoxData[
 StyleBox["\<\"getFourierFromSpace[coefficients, ckSpace, originIndex, mM]\\n\
\\nThe coefficients represent the Fourier transform of the weights which \
applied\\nto the translates --- with respect to mM - of a function \
\[CurlyPhi] result in a\\nfunction f and \[CurlyPhi] with its Fourier \
coefficients ckSpace (where originIndex\\nis the index representing the \
origin), this function reconstructs the Fourier\\ncoefficients of \
f.\\n\\n\!\(\*StyleBox[\\\"Options\\\",FontWeight\[Rule]\\\"Bold\\\"]\)\\n\\\
nValidate \[Rule] \!\(\*StyleBox[\\\"True\\\",\\nFontSlant\[Rule]\\\"Italic\\\
\"]\) | False\\n\twhether to perform a check (via StyleBox[\"isMatrixValid\", \"Code\"]\)) on the \
matrix mM\\n\tand the check, whether the Origin is in Range of the Fourier \
coefficients.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.619791212597159*^9},
 CellTags->"Info3619798412-5813794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ckDMIP", " ", "=", " ", 
  RowBox[{"getFourierFromSpace", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"Det", "[", "mM", "]"}], "]"}], "dMBS"}], ")"}]}], ",", 
    "ckDM", ",", "origin", ",", "mM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585554915074349*^9, 3.585554964137866*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "520"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "260"], ",", 
     FractionBox["1", "520"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.619791212797407*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "ckDMIP", "]"}], " ", "//", " ", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.619791491695557*^9, 3.6197915027810287`*^9}, {
  3.6197971161784782`*^9, 3.619797119441042*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0019230769230769232`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`", "0.`",
       "0.`"},
     {"0.`", "0.`", "0.`", "0.0038461538461538464`", "0.0038461538461538464`",
       "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0038461538461538464`", 
      "0.0038461538461538464`", "0.0019230769230769232`", "0.`", "0.`", "0.`",
       "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.619791503653102*^9, 3.619797120197967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       SubscriptBox["k", "2"], ",", 
       RowBox[{"ckDMIP", "[", 
        RowBox[{"[", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["k", "1"], ",", 
              SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], 
         "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "2"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.585573354465722*^9, 3.585573411168755*^9}, {
  3.585573578727375*^9, 3.585573584766911*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], 
    Point3DBox[{{-18, -7, 0}, {-18, -6, 0}, {-18, -5, 0}, {-18, -4, 
     0}, {-18, -3, 0}, {-18, -2, 0}, {-18, -1, 0}, {-18, 0, 0}, {-18, 1, 
     0}, {-18, 2, 0}, {-18, 3, 0}, {-18, 4, 0}, {-18, 5, 0}, {-18, 6, 
     0}, {-18, 7, 0}}]}, 
   {RGBColor[0.7926498, 0.5499369, 0.1278459], 
    Point3DBox[{{-17, -7, 0}, {-17, -6, 0}, {-17, -5, 0}, {-17, -4, 
     0}, {-17, -3, 0}, {-17, -2, 0}, {-17, -1, 0}, {-17, 0, 0}, {-17, 1, 
     0}, {-17, 2, 0}, {-17, 3, 0}, {-17, 4, 0}, {-17, 5, 0}, {-17, 6, 
     0}, {-17, 7, 0}}]}, 
   {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
    Point3DBox[
     NCache[{{-16, -7, 0}, {-16, -6, 0}, {-16, -5, 0}, {-16, -4, 0}, {-16, -3,
        0}, {-16, -2, Rational[1, 520]}, {-16, -1, Rational[1, 260]}, {-16, 0,
         Rational[1, 260]}, {-16, 1, Rational[1, 260]}, {-16, 2, Rational[
        1, 260]}, {-16, 3, 0}, {-16, 4, 0}, {-16, 5, 0}, {-16, 6, 0}, {-16, 7,
        0}}, {{-16, -7, 0}, {-16, -6, 0}, {-16, -5, 0}, {-16, -4, 
       0}, {-16, -3, 
       0}, {-16, -2, 0.0019230769230769232`}, {-16, -1, 
        0.0038461538461538464`}, {-16, 0, 0.0038461538461538464`}, {-16, 1, 
        0.0038461538461538464`}, {-16, 2, 0.0038461538461538464`}, {-16, 3, 
       0}, {-16, 4, 0}, {-16, 5, 0}, {-16, 6, 0}, {-16, 7, 0}}]]}, 
   {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], 
    Point3DBox[
     NCache[{{-15, -7, 0}, {-15, -6, 
       0}, {-15, -5, Rational[1, 260]}, {-15, -4, Rational[1, 260]}, {-15, -3,
         Rational[1, 260]}, {-15, -2, Rational[1, 260]}, {-15, -1, Rational[
        1, 260]}, {-15, 0, Rational[1, 260]}, {-15, 1, Rational[
        1, 260]}, {-15, 2, Rational[1, 260]}, {-15, 3, 0}, {-15, 4, 0}, {-15, 
       5, 0}, {-15, 6, 0}, {-15, 7, 0}}, {{-15, -7, 0}, {-15, -6, 
       0}, {-15, -5, 0.0038461538461538464`}, {-15, -4, 
        0.0038461538461538464`}, {-15, -3, 0.0038461538461538464`}, {-15, -2, 
        0.0038461538461538464`}, {-15, -1, 0.0038461538461538464`}, {-15, 0, 
        0.0038461538461538464`}, {-15, 1, 0.0038461538461538464`}, {-15, 2, 
        0.0038461538461538464`}, {-15, 3, 0}, {-15, 4, 0}, {-15, 5, 0}, {-15, 
       6, 0}, {-15, 7, 0}}]]}, 
   {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], 
    Point3DBox[
     NCache[{{-14, -7, 0}, {-14, -6, 
       0}, {-14, -5, Rational[1, 260]}, {-14, -4, Rational[1, 260]}, {-14, -3,
         Rational[1, 260]}, {-14, -2, Rational[1, 260]}, {-14, -1, Rational[
        1, 260]}, {-14, 0, Rational[1, 260]}, {-14, 1, Rational[
        1, 260]}, {-14, 2, Rational[1, 260]}, {-14, 3, 0}, {-14, 4, 0}, {-14, 
       5, 0}, {-14, 6, 0}, {-14, 7, 0}}, {{-14, -7, 0}, {-14, -6, 
       0}, {-14, -5, 0.0038461538461538464`}, {-14, -4, 
        0.0038461538461538464`}, {-14, -3, 0.0038461538461538464`}, {-14, -2, 
        0.0038461538461538464`}, {-14, -1, 0.0038461538461538464`}, {-14, 0, 
        0.0038461538461538464`}, {-14, 1, 0.0038461538461538464`}, {-14, 2, 
        0.0038461538461538464`}, {-14, 3, 0}, {-14, 4, 0}, {-14, 5, 0}, {-14, 
       6, 0}, {-14, 7, 0}}]]}, 
   {RGBColor[0.6948711, 0.3883986, 0.0921483], 
    Point3DBox[
     NCache[{{-13, -7, 0}, {-13, -6, 
       0}, {-13, -5, Rational[1, 260]}, {-13, -4, Rational[1, 260]}, {-13, -3,
         Rational[1, 260]}, {-13, -2, Rational[1, 260]}, {-13, -1, Rational[
        1, 260]}, {-13, 0, Rational[1, 260]}, {-13, 1, Rational[
        1, 260]}, {-13, 2, Rational[1, 260]}, {-13, 3, 0}, {-13, 4, 0}, {-13, 
       5, 0}, {-13, 6, 0}, {-13, 7, 0}}, {{-13, -7, 0}, {-13, -6, 
       0}, {-13, -5, 0.0038461538461538464`}, {-13, -4, 
        0.0038461538461538464`}, {-13, -3, 0.0038461538461538464`}, {-13, -2, 
        0.0038461538461538464`}, {-13, -1, 0.0038461538461538464`}, {-13, 0, 
        0.0038461538461538464`}, {-13, 1, 0.0038461538461538464`}, {-13, 2, 
        0.0038461538461538464`}, {-13, 3, 0}, {-13, 4, 0}, {-13, 5, 0}, {-13, 
       6, 0}, {-13, 7, 0}}]]}, 
   {RGBColor[0.3275082, 0.5566509, 0.7041141], 
    Point3DBox[
     NCache[{{-12, -7, 0}, {-12, -6, 
       0}, {-12, -5, Rational[1, 260]}, {-12, -4, Rational[1, 260]}, {-12, -3,
         Rational[1, 260]}, {-12, -2, Rational[1, 260]}, {-12, -1, Rational[
        1, 260]}, {-12, 0, Rational[1, 260]}, {-12, 1, Rational[
        1, 260]}, {-12, 2, Rational[1, 260]}, {-12, 3, 0}, {-12, 4, 0}, {-12, 
       5, 0}, {-12, 6, 0}, {-12, 7, 0}}, {{-12, -7, 0}, {-12, -6, 
       0}, {-12, -5, 0.0038461538461538464`}, {-12, -4, 
        0.0038461538461538464`}, {-12, -3, 0.0038461538461538464`}, {-12, -2, 
        0.0038461538461538464`}, {-12, -1, 0.0038461538461538464`}, {-12, 0, 
        0.0038461538461538464`}, {-12, 1, 0.0038461538461538464`}, {-12, 2, 
        0.0038461538461538464`}, {-12, 3, 0}, {-12, 4, 0}, {-12, 5, 0}, {-12, 
       6, 0}, {-12, 7, 0}}]]}, 
   {RGBColor[0.9, 0.675, 0.], 
    Point3DBox[
     NCache[{{-11, -7, 0}, {-11, -6, 
       0}, {-11, -5, Rational[1, 260]}, {-11, -4, Rational[1, 260]}, {-11, -3,
         Rational[1, 260]}, {-11, -2, Rational[1, 260]}, {-11, -1, Rational[
        1, 260]}, {-11, 0, Rational[1, 260]}, {-11, 1, Rational[
        1, 260]}, {-11, 2, Rational[1, 260]}, {-11, 3, 0}, {-11, 4, 0}, {-11, 
       5, 0}, {-11, 6, 0}, {-11, 7, 0}}, {{-11, -7, 0}, {-11, -6, 
       0}, {-11, -5, 0.0038461538461538464`}, {-11, -4, 
        0.0038461538461538464`}, {-11, -3, 0.0038461538461538464`}, {-11, -2, 
        0.0038461538461538464`}, {-11, -1, 0.0038461538461538464`}, {-11, 0, 
        0.0038461538461538464`}, {-11, 1, 0.0038461538461538464`}, {-11, 2, 
        0.0038461538461538464`}, {-11, 3, 0}, {-11, 4, 0}, {-11, 5, 0}, {-11, 
       6, 0}, {-11, 7, 0}}]]}, 
   {RGBColor[0.5828616, 0.340344, 0.5526333000000001], 
    Point3DBox[
     NCache[{{-10, -7, 0}, {-10, -6, 
       0}, {-10, -5, Rational[1, 260]}, {-10, -4, Rational[1, 260]}, {-10, -3,
         Rational[1, 260]}, {-10, -2, Rational[1, 260]}, {-10, -1, Rational[
        1, 260]}, {-10, 0, Rational[1, 260]}, {-10, 1, Rational[
        1, 260]}, {-10, 2, Rational[1, 260]}, {-10, 3, 0}, {-10, 4, 0}, {-10, 
       5, 0}, {-10, 6, 0}, {-10, 7, 0}}, {{-10, -7, 0}, {-10, -6, 
       0}, {-10, -5, 0.0038461538461538464`}, {-10, -4, 
        0.0038461538461538464`}, {-10, -3, 0.0038461538461538464`}, {-10, -2, 
        0.0038461538461538464`}, {-10, -1, 0.0038461538461538464`}, {-10, 0, 
        0.0038461538461538464`}, {-10, 1, 0.0038461538461538464`}, {-10, 2, 
        0.0038461538461538464`}, {-10, 3, 0}, {-10, 4, 0}, {-10, 5, 0}, {-10, 
       6, 0}, {-10, 7, 0}}]]}, 
   {RGBColor[0.5144301, 0.5278347, 0.], 
    Point3DBox[
     NCache[{{-9, -7, 0}, {-9, -6, 
       0}, {-9, -5, Rational[1, 260]}, {-9, -4, Rational[1, 260]}, {-9, -3, 
        Rational[1, 260]}, {-9, -2, Rational[1, 260]}, {-9, -1, Rational[
        1, 260]}, {-9, 0, Rational[1, 260]}, {-9, 1, Rational[1, 260]}, {-9, 
        2, Rational[1, 260]}, {-9, 3, 0}, {-9, 4, 0}, {-9, 5, 0}, {-9, 6, 
       0}, {-9, 7, 0}}, {{-9, -7, 0}, {-9, -6, 
       0}, {-9, -5, 0.0038461538461538464`}, {-9, -4, 
        0.0038461538461538464`}, {-9, -3, 0.0038461538461538464`}, {-9, -2, 
        0.0038461538461538464`}, {-9, -1, 0.0038461538461538464`}, {-9, 0, 
        0.0038461538461538464`}, {-9, 1, 0.0038461538461538464`}, {-9, 2, 
        0.0038461538461538464`}, {-9, 3, 0}, {-9, 4, 0}, {-9, 5, 0}, {-9, 6, 
       0}, {-9, 7, 0}}]]}, 
   {RGBColor[0.8235, 0.29925, 0.19125], 
    Point3DBox[
     NCache[{{-8, -7, 0}, {-8, -6, 
       0}, {-8, -5, Rational[1, 260]}, {-8, -4, Rational[1, 260]}, {-8, -3, 
        Rational[1, 260]}, {-8, -2, Rational[1, 260]}, {-8, -1, Rational[
        1, 260]}, {-8, 0, Rational[1, 260]}, {-8, 1, Rational[1, 260]}, {-8, 
        2, Rational[1, 260]}, {-8, 3, Rational[1, 260]}, {-8, 4, 0}, {-8, 5, 
       0}, {-8, 6, 0}, {-8, 7, 0}}, {{-8, -7, 0}, {-8, -6, 
       0}, {-8, -5, 0.0038461538461538464`}, {-8, -4, 
        0.0038461538461538464`}, {-8, -3, 0.0038461538461538464`}, {-8, -2, 
        0.0038461538461538464`}, {-8, -1, 0.0038461538461538464`}, {-8, 0, 
        0.0038461538461538464`}, {-8, 1, 0.0038461538461538464`}, {-8, 2, 
        0.0038461538461538464`}, {-8, 3, 0.0038461538461538464`}, {-8, 4, 
       0}, {-8, 5, 0}, {-8, 6, 0}, {-8, 7, 0}}]]}, 
   {RGBColor[0.3607400034841738, 0.4698059979094957, 0.765], 
    Point3DBox[
     NCache[{{-7, -7, 0}, {-7, -6, 0}, {-7, -5, 
       0}, {-7, -4, Rational[1, 260]}, {-7, -3, Rational[1, 260]}, {-7, -2, 
        Rational[1, 260]}, {-7, -1, Rational[1, 260]}, {-7, 0, Rational[
        1, 260]}, {-7, 1, Rational[1, 260]}, {-7, 2, Rational[1, 260]}, {-7, 
        3, Rational[1, 260]}, {-7, 4, 0}, {-7, 5, 0}, {-7, 6, 0}, {-7, 7, 
       0}}, {{-7, -7, 0}, {-7, -6, 0}, {-7, -5, 
       0}, {-7, -4, 0.0038461538461538464`}, {-7, -3, 
        0.0038461538461538464`}, {-7, -2, 0.0038461538461538464`}, {-7, -1, 
        0.0038461538461538464`}, {-7, 0, 0.0038461538461538464`}, {-7, 1, 
        0.0038461538461538464`}, {-7, 2, 0.0038461538461538464`}, {-7, 3, 
        0.0038461538461538464`}, {-7, 4, 0}, {-7, 5, 0}, {-7, 6, 0}, {-7, 7, 
       0}}]]}, 
   {RGBColor[0.8755460013936696, 0.5594800069683477, 0.06602579623709227], 
    Point3DBox[
     NCache[{{-6, -7, 0}, {-6, -6, 0}, {-6, -5, 
       0}, {-6, -4, Rational[1, 260]}, {-6, -3, Rational[1, 260]}, {-6, -2, 
        Rational[1, 260]}, {-6, -1, Rational[1, 260]}, {-6, 0, Rational[
        1, 260]}, {-6, 1, Rational[1, 260]}, {-6, 2, Rational[1, 260]}, {-6, 
        3, Rational[1, 260]}, {-6, 4, 0}, {-6, 5, 0}, {-6, 6, 0}, {-6, 7, 
       0}}, {{-6, -7, 0}, {-6, -6, 0}, {-6, -5, 
       0}, {-6, -4, 0.0038461538461538464`}, {-6, -3, 
        0.0038461538461538464`}, {-6, -2, 0.0038461538461538464`}, {-6, -1, 
        0.0038461538461538464`}, {-6, 0, 0.0038461538461538464`}, {-6, 1, 
        0.0038461538461538464`}, {-6, 2, 0.0038461538461538464`}, {-6, 3, 
        0.0038461538461538464`}, {-6, 4, 0}, {-6, 5, 0}, {-6, 6, 0}, {-6, 7, 
       0}}]]}, 
   {RGBColor[0.6631044054353109, 0.3222, 0.45272399163798316`], 
    Point3DBox[
     NCache[{{-5, -7, 0}, {-5, -6, 0}, {-5, -5, 
       0}, {-5, -4, Rational[1, 260]}, {-5, -3, Rational[1, 260]}, {-5, -2, 
        Rational[1, 260]}, {-5, -1, Rational[1, 260]}, {-5, 0, Rational[
        1, 260]}, {-5, 1, Rational[1, 260]}, {-5, 2, Rational[1, 260]}, {-5, 
        3, Rational[1, 260]}, {-5, 4, 0}, {-5, 5, 0}, {-5, 6, 0}, {-5, 7, 
       0}}, {{-5, -7, 0}, {-5, -6, 0}, {-5, -5, 
       0}, {-5, -4, 0.0038461538461538464`}, {-5, -3, 
        0.0038461538461538464`}, {-5, -2, 0.0038461538461538464`}, {-5, -1, 
        0.0038461538461538464`}, {-5, 0, 0.0038461538461538464`}, {-5, 1, 
        0.0038461538461538464`}, {-5, 2, 0.0038461538461538464`}, {-5, 3, 
        0.0038461538461538464`}, {-5, 4, 0}, {-5, 5, 0}, {-5, 6, 0}, {-5, 7, 
       0}}]]}, 
   {RGBColor[0.25223796933927034`, 0.6435, 0.3862880390227469], 
    Point3DBox[
     NCache[{{-4, -7, 0}, {-4, -6, 0}, {-4, -5, 
       0}, {-4, -4, Rational[1, 260]}, {-4, -3, Rational[1, 260]}, {-4, -2, 
        Rational[1, 260]}, {-4, -1, Rational[1, 260]}, {-4, 0, Rational[
        1, 260]}, {-4, 1, Rational[1, 260]}, {-4, 2, Rational[1, 260]}, {-4, 
        3, Rational[1, 260]}, {-4, 4, 0}, {-4, 5, 0}, {-4, 6, 0}, {-4, 7, 
       0}}, {{-4, -7, 0}, {-4, -6, 0}, {-4, -5, 
       0}, {-4, -4, 0.0038461538461538464`}, {-4, -3, 
        0.0038461538461538464`}, {-4, -2, 0.0038461538461538464`}, {-4, -1, 
        0.0038461538461538464`}, {-4, 0, 0.0038461538461538464`}, {-4, 1, 
        0.0038461538461538464`}, {-4, 2, 0.0038461538461538464`}, {-4, 3, 
        0.0038461538461538464`}, {-4, 4, 0}, {-4, 5, 0}, {-4, 6, 0}, {-4, 7, 
       0}}]]}, 
   {RGBColor[0.3315753, 0.4561011, 0.6388182], 
    Point3DBox[
     NCache[{{-3, -7, 0}, {-3, -6, 0}, {-3, -5, 
       0}, {-3, -4, Rational[1, 260]}, {-3, -3, Rational[1, 260]}, {-3, -2, 
        Rational[1, 260]}, {-3, -1, Rational[1, 260]}, {-3, 0, Rational[
        1, 260]}, {-3, 1, Rational[1, 260]}, {-3, 2, Rational[1, 260]}, {-3, 
        3, Rational[1, 260]}, {-3, 4, 0}, {-3, 5, 0}, {-3, 6, 0}, {-3, 7, 
       0}}, {{-3, -7, 0}, {-3, -6, 0}, {-3, -5, 
       0}, {-3, -4, 0.0038461538461538464`}, {-3, -3, 
        0.0038461538461538464`}, {-3, -2, 0.0038461538461538464`}, {-3, -1, 
        0.0038461538461538464`}, {-3, 0, 0.0038461538461538464`}, {-3, 1, 
        0.0038461538461538464`}, {-3, 2, 0.0038461538461538464`}, {-3, 3, 
        0.0038461538461538464`}, {-3, 4, 0}, {-3, 5, 0}, {-3, 6, 0}, {-3, 7, 
       0}}]]}, 
   {RGBColor[0.7926498, 0.5499369, 0.1278459], 
    Point3DBox[
     NCache[{{-2, -7, 0}, {-2, -6, 0}, {-2, -5, 
       0}, {-2, -4, Rational[1, 260]}, {-2, -3, Rational[1, 260]}, {-2, -2, 
        Rational[1, 260]}, {-2, -1, Rational[1, 260]}, {-2, 0, Rational[
        1, 260]}, {-2, 1, Rational[1, 260]}, {-2, 2, Rational[1, 260]}, {-2, 
        3, Rational[1, 260]}, {-2, 4, 0}, {-2, 5, 0}, {-2, 6, 0}, {-2, 7, 
       0}}, {{-2, -7, 0}, {-2, -6, 0}, {-2, -5, 
       0}, {-2, -4, 0.0038461538461538464`}, {-2, -3, 
        0.0038461538461538464`}, {-2, -2, 0.0038461538461538464`}, {-2, -1, 
        0.0038461538461538464`}, {-2, 0, 0.0038461538461538464`}, {-2, 1, 
        0.0038461538461538464`}, {-2, 2, 0.0038461538461538464`}, {-2, 3, 
        0.0038461538461538464`}, {-2, 4, 0}, {-2, 5, 0}, {-2, 6, 0}, {-2, 7, 
       0}}]]}, 
   {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
    Point3DBox[
     NCache[{{-1, -7, 0}, {-1, -6, 0}, {-1, -5, 
       0}, {-1, -4, Rational[1, 260]}, {-1, -3, Rational[1, 260]}, {-1, -2, 
        Rational[1, 260]}, {-1, -1, Rational[1, 260]}, {-1, 0, Rational[
        1, 260]}, {-1, 1, Rational[1, 260]}, {-1, 2, Rational[1, 260]}, {-1, 
        3, Rational[1, 260]}, {-1, 4, 0}, {-1, 5, 0}, {-1, 6, 0}, {-1, 7, 
       0}}, {{-1, -7, 0}, {-1, -6, 0}, {-1, -5, 
       0}, {-1, -4, 0.0038461538461538464`}, {-1, -3, 
        0.0038461538461538464`}, {-1, -2, 0.0038461538461538464`}, {-1, -1, 
        0.0038461538461538464`}, {-1, 0, 0.0038461538461538464`}, {-1, 1, 
        0.0038461538461538464`}, {-1, 2, 0.0038461538461538464`}, {-1, 3, 
        0.0038461538461538464`}, {-1, 4, 0}, {-1, 5, 0}, {-1, 6, 0}, {-1, 7, 
       0}}]]}, 
   {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], 
    Point3DBox[
     NCache[{{0, -7, 0}, {0, -6, 0}, {0, -5, 0}, {0, -4, Rational[1, 260]}, {
       0, -3, Rational[1, 260]}, {0, -2, Rational[1, 260]}, {
       0, -1, Rational[1, 260]}, {0, 0, Rational[1, 260]}, {
       0, 1, Rational[1, 260]}, {0, 2, Rational[1, 260]}, {
       0, 3, Rational[1, 260]}, {0, 4, Rational[1, 260]}, {0, 5, 0}, {0, 6, 
       0}, {0, 7, 0}}, {{0, -7, 0}, {0, -6, 0}, {0, -5, 0}, {
       0, -4, 0.0038461538461538464`}, {0, -3, 0.0038461538461538464`}, {
       0, -2, 0.0038461538461538464`}, {0, -1, 0.0038461538461538464`}, {
       0, 0, 0.0038461538461538464`}, {0, 1, 0.0038461538461538464`}, {
       0, 2, 0.0038461538461538464`}, {0, 3, 0.0038461538461538464`}, {
       0, 4, 0.0038461538461538464`}, {0, 5, 0}, {0, 6, 0}, {0, 7, 0}}]]}, 
   {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], 
    Point3DBox[
     NCache[{{1, -7, 0}, {1, -6, 0}, {1, -5, 0}, {1, -4, 0}, {
       1, -3, Rational[1, 260]}, {1, -2, Rational[1, 260]}, {
       1, -1, Rational[1, 260]}, {1, 0, Rational[1, 260]}, {
       1, 1, Rational[1, 260]}, {1, 2, Rational[1, 260]}, {
       1, 3, Rational[1, 260]}, {1, 4, Rational[1, 260]}, {1, 5, 0}, {1, 6, 
       0}, {1, 7, 0}}, {{1, -7, 0}, {1, -6, 0}, {1, -5, 0}, {1, -4, 0}, {
       1, -3, 0.0038461538461538464`}, {1, -2, 0.0038461538461538464`}, {
       1, -1, 0.0038461538461538464`}, {1, 0, 0.0038461538461538464`}, {
       1, 1, 0.0038461538461538464`}, {1, 2, 0.0038461538461538464`}, {
       1, 3, 0.0038461538461538464`}, {1, 4, 0.0038461538461538464`}, {1, 5, 
       0}, {1, 6, 0}, {1, 7, 0}}]]}, 
   {RGBColor[0.6948711, 0.3883986, 0.0921483], 
    Point3DBox[
     NCache[{{2, -7, 0}, {2, -6, 0}, {2, -5, 0}, {2, -4, 0}, {
       2, -3, Rational[1, 260]}, {2, -2, Rational[1, 260]}, {
       2, -1, Rational[1, 260]}, {2, 0, Rational[1, 260]}, {
       2, 1, Rational[1, 260]}, {2, 2, Rational[1, 260]}, {
       2, 3, Rational[1, 260]}, {2, 4, Rational[1, 260]}, {2, 5, 0}, {2, 6, 
       0}, {2, 7, 0}}, {{2, -7, 0}, {2, -6, 0}, {2, -5, 0}, {2, -4, 0}, {
       2, -3, 0.0038461538461538464`}, {2, -2, 0.0038461538461538464`}, {
       2, -1, 0.0038461538461538464`}, {2, 0, 0.0038461538461538464`}, {
       2, 1, 0.0038461538461538464`}, {2, 2, 0.0038461538461538464`}, {
       2, 3, 0.0038461538461538464`}, {2, 4, 0.0038461538461538464`}, {2, 5, 
       0}, {2, 6, 0}, {2, 7, 0}}]]}, 
   {RGBColor[0.3275082, 0.5566509, 0.7041141], 
    Point3DBox[
     NCache[{{3, -7, 0}, {3, -6, 0}, {3, -5, 0}, {3, -4, 0}, {
       3, -3, Rational[1, 260]}, {3, -2, Rational[1, 260]}, {
       3, -1, Rational[1, 260]}, {3, 0, Rational[1, 260]}, {
       3, 1, Rational[1, 260]}, {3, 2, Rational[1, 260]}, {
       3, 3, Rational[1, 260]}, {3, 4, Rational[1, 260]}, {3, 5, 0}, {3, 6, 
       0}, {3, 7, 0}}, {{3, -7, 0}, {3, -6, 0}, {3, -5, 0}, {3, -4, 0}, {
       3, -3, 0.0038461538461538464`}, {3, -2, 0.0038461538461538464`}, {
       3, -1, 0.0038461538461538464`}, {3, 0, 0.0038461538461538464`}, {
       3, 1, 0.0038461538461538464`}, {3, 2, 0.0038461538461538464`}, {
       3, 3, 0.0038461538461538464`}, {3, 4, 0.0038461538461538464`}, {3, 5, 
       0}, {3, 6, 0}, {3, 7, 0}}]]}, 
   {RGBColor[0.9, 0.675, 0.], 
    Point3DBox[
     NCache[{{4, -7, 0}, {4, -6, 0}, {4, -5, 0}, {4, -4, 0}, {
       4, -3, Rational[1, 260]}, {4, -2, Rational[1, 260]}, {
       4, -1, Rational[1, 260]}, {4, 0, Rational[1, 260]}, {
       4, 1, Rational[1, 260]}, {4, 2, Rational[1, 260]}, {
       4, 3, Rational[1, 260]}, {4, 4, Rational[1, 260]}, {4, 5, 0}, {4, 6, 
       0}, {4, 7, 0}}, {{4, -7, 0}, {4, -6, 0}, {4, -5, 0}, {4, -4, 0}, {
       4, -3, 0.0038461538461538464`}, {4, -2, 0.0038461538461538464`}, {
       4, -1, 0.0038461538461538464`}, {4, 0, 0.0038461538461538464`}, {
       4, 1, 0.0038461538461538464`}, {4, 2, 0.0038461538461538464`}, {
       4, 3, 0.0038461538461538464`}, {4, 4, 0.0038461538461538464`}, {4, 5, 
       0}, {4, 6, 0}, {4, 7, 0}}]]}, 
   {RGBColor[0.5828616, 0.340344, 0.5526333000000001], 
    Point3DBox[
     NCache[{{5, -7, 0}, {5, -6, 0}, {5, -5, 0}, {5, -4, 0}, {
       5, -3, Rational[1, 260]}, {5, -2, Rational[1, 260]}, {
       5, -1, Rational[1, 260]}, {5, 0, Rational[1, 260]}, {
       5, 1, Rational[1, 260]}, {5, 2, Rational[1, 260]}, {
       5, 3, Rational[1, 260]}, {5, 4, Rational[1, 260]}, {5, 5, 0}, {5, 6, 
       0}, {5, 7, 0}}, {{5, -7, 0}, {5, -6, 0}, {5, -5, 0}, {5, -4, 0}, {
       5, -3, 0.0038461538461538464`}, {5, -2, 0.0038461538461538464`}, {
       5, -1, 0.0038461538461538464`}, {5, 0, 0.0038461538461538464`}, {
       5, 1, 0.0038461538461538464`}, {5, 2, 0.0038461538461538464`}, {
       5, 3, 0.0038461538461538464`}, {5, 4, 0.0038461538461538464`}, {5, 5, 
       0}, {5, 6, 0}, {5, 7, 0}}]]}, 
   {RGBColor[0.5144301, 0.5278347, 0.], 
    Point3DBox[
     NCache[{{6, -7, 0}, {6, -6, 0}, {6, -5, 0}, {6, -4, 0}, {
       6, -3, Rational[1, 260]}, {6, -2, Rational[1, 260]}, {
       6, -1, Rational[1, 260]}, {6, 0, Rational[1, 260]}, {
       6, 1, Rational[1, 260]}, {6, 2, Rational[1, 260]}, {
       6, 3, Rational[1, 260]}, {6, 4, Rational[1, 260]}, {6, 5, 0}, {6, 6, 
       0}, {6, 7, 0}}, {{6, -7, 0}, {6, -6, 0}, {6, -5, 0}, {6, -4, 0}, {
       6, -3, 0.0038461538461538464`}, {6, -2, 0.0038461538461538464`}, {
       6, -1, 0.0038461538461538464`}, {6, 0, 0.0038461538461538464`}, {
       6, 1, 0.0038461538461538464`}, {6, 2, 0.0038461538461538464`}, {
       6, 3, 0.0038461538461538464`}, {6, 4, 0.0038461538461538464`}, {6, 5, 
       0}, {6, 6, 0}, {6, 7, 0}}]]}, 
   {RGBColor[0.8235, 0.29925, 0.19125], 
    Point3DBox[
     NCache[{{7, -7, 0}, {7, -6, 0}, {7, -5, 0}, {7, -4, 0}, {
       7, -3, Rational[1, 260]}, {7, -2, Rational[1, 260]}, {
       7, -1, Rational[1, 260]}, {7, 0, Rational[1, 260]}, {
       7, 1, Rational[1, 260]}, {7, 2, Rational[1, 260]}, {
       7, 3, Rational[1, 260]}, {7, 4, Rational[1, 260]}, {7, 5, 0}, {7, 6, 
       0}, {7, 7, 0}}, {{7, -7, 0}, {7, -6, 0}, {7, -5, 0}, {7, -4, 0}, {
       7, -3, 0.0038461538461538464`}, {7, -2, 0.0038461538461538464`}, {
       7, -1, 0.0038461538461538464`}, {7, 0, 0.0038461538461538464`}, {
       7, 1, 0.0038461538461538464`}, {7, 2, 0.0038461538461538464`}, {
       7, 3, 0.0038461538461538464`}, {7, 4, 0.0038461538461538464`}, {7, 5, 
       0}, {7, 6, 0}, {7, 7, 0}}]]}, 
   {RGBColor[0.3607400034841738, 0.4698059979094957, 0.765], 
    Point3DBox[
     NCache[{{8, -7, 0}, {8, -6, 0}, {8, -5, 0}, {8, -4, 0}, {
       8, -3, Rational[1, 260]}, {8, -2, Rational[1, 260]}, {
       8, -1, Rational[1, 260]}, {8, 0, Rational[1, 260]}, {
       8, 1, Rational[1, 260]}, {8, 2, Rational[1, 260]}, {
       8, 3, Rational[1, 260]}, {8, 4, Rational[1, 260]}, {
       8, 5, Rational[1, 260]}, {8, 6, 0}, {8, 7, 0}}, {{8, -7, 0}, {8, -6, 
       0}, {8, -5, 0}, {8, -4, 0}, {8, -3, 0.0038461538461538464`}, {
       8, -2, 0.0038461538461538464`}, {8, -1, 0.0038461538461538464`}, {
       8, 0, 0.0038461538461538464`}, {8, 1, 0.0038461538461538464`}, {
       8, 2, 0.0038461538461538464`}, {8, 3, 0.0038461538461538464`}, {
       8, 4, 0.0038461538461538464`}, {8, 5, 0.0038461538461538464`}, {8, 6, 
       0}, {8, 7, 0}}]]}, 
   {RGBColor[0.8755460013936696, 0.5594800069683477, 0.06602579623709227], 
    Point3DBox[
     NCache[{{9, -7, 0}, {9, -6, 0}, {9, -5, 0}, {9, -4, 0}, {9, -3, 0}, {
       9, -2, Rational[1, 260]}, {9, -1, Rational[1, 260]}, {
       9, 0, Rational[1, 260]}, {9, 1, Rational[1, 260]}, {
       9, 2, Rational[1, 260]}, {9, 3, Rational[1, 260]}, {
       9, 4, Rational[1, 260]}, {9, 5, Rational[1, 260]}, {9, 6, 0}, {9, 7, 
       0}}, {{9, -7, 0}, {9, -6, 0}, {9, -5, 0}, {9, -4, 0}, {9, -3, 0}, {
       9, -2, 0.0038461538461538464`}, {9, -1, 0.0038461538461538464`}, {
       9, 0, 0.0038461538461538464`}, {9, 1, 0.0038461538461538464`}, {
       9, 2, 0.0038461538461538464`}, {9, 3, 0.0038461538461538464`}, {
       9, 4, 0.0038461538461538464`}, {9, 5, 0.0038461538461538464`}, {9, 6, 
       0}, {9, 7, 0}}]]}, 
   {RGBColor[0.6631044054353109, 0.3222, 0.45272399163798316`], 
    Point3DBox[
     NCache[{{10, -7, 0}, {10, -6, 0}, {10, -5, 0}, {10, -4, 0}, {10, -3, 
       0}, {10, -2, Rational[1, 260]}, {10, -1, Rational[1, 260]}, {
       10, 0, Rational[1, 260]}, {10, 1, Rational[1, 260]}, {
       10, 2, Rational[1, 260]}, {10, 3, Rational[1, 260]}, {
       10, 4, Rational[1, 260]}, {10, 5, Rational[1, 260]}, {10, 6, 0}, {10, 
       7, 0}}, {{10, -7, 0}, {10, -6, 0}, {10, -5, 0}, {10, -4, 0}, {10, -3, 
       0}, {10, -2, 0.0038461538461538464`}, {
       10, -1, 0.0038461538461538464`}, {10, 0, 0.0038461538461538464`}, {
       10, 1, 0.0038461538461538464`}, {10, 2, 0.0038461538461538464`}, {
       10, 3, 0.0038461538461538464`}, {10, 4, 0.0038461538461538464`}, {
       10, 5, 0.0038461538461538464`}, {10, 6, 0}, {10, 7, 0}}]]}, 
   {RGBColor[0.25223796933927034`, 0.6435, 0.3862880390227469], 
    Point3DBox[
     NCache[{{11, -7, 0}, {11, -6, 0}, {11, -5, 0}, {11, -4, 0}, {11, -3, 
       0}, {11, -2, Rational[1, 260]}, {11, -1, Rational[1, 260]}, {
       11, 0, Rational[1, 260]}, {11, 1, Rational[1, 260]}, {
       11, 2, Rational[1, 260]}, {11, 3, Rational[1, 260]}, {
       11, 4, Rational[1, 260]}, {11, 5, Rational[1, 260]}, {11, 6, 0}, {11, 
       7, 0}}, {{11, -7, 0}, {11, -6, 0}, {11, -5, 0}, {11, -4, 0}, {11, -3, 
       0}, {11, -2, 0.0038461538461538464`}, {
       11, -1, 0.0038461538461538464`}, {11, 0, 0.0038461538461538464`}, {
       11, 1, 0.0038461538461538464`}, {11, 2, 0.0038461538461538464`}, {
       11, 3, 0.0038461538461538464`}, {11, 4, 0.0038461538461538464`}, {
       11, 5, 0.0038461538461538464`}, {11, 6, 0}, {11, 7, 0}}]]}, 
   {RGBColor[0.3315753, 0.4561011, 0.6388182], 
    Point3DBox[
     NCache[{{12, -7, 0}, {12, -6, 0}, {12, -5, 0}, {12, -4, 0}, {12, -3, 
       0}, {12, -2, Rational[1, 260]}, {12, -1, Rational[1, 260]}, {
       12, 0, Rational[1, 260]}, {12, 1, Rational[1, 260]}, {
       12, 2, Rational[1, 260]}, {12, 3, Rational[1, 260]}, {
       12, 4, Rational[1, 260]}, {12, 5, Rational[1, 260]}, {12, 6, 0}, {12, 
       7, 0}}, {{12, -7, 0}, {12, -6, 0}, {12, -5, 0}, {12, -4, 0}, {12, -3, 
       0}, {12, -2, 0.0038461538461538464`}, {
       12, -1, 0.0038461538461538464`}, {12, 0, 0.0038461538461538464`}, {
       12, 1, 0.0038461538461538464`}, {12, 2, 0.0038461538461538464`}, {
       12, 3, 0.0038461538461538464`}, {12, 4, 0.0038461538461538464`}, {
       12, 5, 0.0038461538461538464`}, {12, 6, 0}, {12, 7, 0}}]]}, 
   {RGBColor[0.7926498, 0.5499369, 0.1278459], 
    Point3DBox[
     NCache[{{13, -7, 0}, {13, -6, 0}, {13, -5, 0}, {13, -4, 0}, {13, -3, 
       0}, {13, -2, Rational[1, 260]}, {13, -1, Rational[1, 260]}, {
       13, 0, Rational[1, 260]}, {13, 1, Rational[1, 260]}, {
       13, 2, Rational[1, 260]}, {13, 3, Rational[1, 260]}, {
       13, 4, Rational[1, 260]}, {13, 5, Rational[1, 260]}, {13, 6, 0}, {13, 
       7, 0}}, {{13, -7, 0}, {13, -6, 0}, {13, -5, 0}, {13, -4, 0}, {13, -3, 
       0}, {13, -2, 0.0038461538461538464`}, {
       13, -1, 0.0038461538461538464`}, {13, 0, 0.0038461538461538464`}, {
       13, 1, 0.0038461538461538464`}, {13, 2, 0.0038461538461538464`}, {
       13, 3, 0.0038461538461538464`}, {13, 4, 0.0038461538461538464`}, {
       13, 5, 0.0038461538461538464`}, {13, 6, 0}, {13, 7, 0}}]]}, 
   {RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
    Point3DBox[
     NCache[{{14, -7, 0}, {14, -6, 0}, {14, -5, 0}, {14, -4, 0}, {14, -3, 
       0}, {14, -2, Rational[1, 260]}, {14, -1, Rational[1, 260]}, {
       14, 0, Rational[1, 260]}, {14, 1, Rational[1, 260]}, {
       14, 2, Rational[1, 260]}, {14, 3, Rational[1, 260]}, {
       14, 4, Rational[1, 260]}, {14, 5, Rational[1, 260]}, {14, 6, 0}, {14, 
       7, 0}}, {{14, -7, 0}, {14, -6, 0}, {14, -5, 0}, {14, -4, 0}, {14, -3, 
       0}, {14, -2, 0.0038461538461538464`}, {
       14, -1, 0.0038461538461538464`}, {14, 0, 0.0038461538461538464`}, {
       14, 1, 0.0038461538461538464`}, {14, 2, 0.0038461538461538464`}, {
       14, 3, 0.0038461538461538464`}, {14, 4, 0.0038461538461538464`}, {
       14, 5, 0.0038461538461538464`}, {14, 6, 0}, {14, 7, 0}}]]}, 
   {RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], 
    Point3DBox[
     NCache[{{15, -7, 0}, {15, -6, 0}, {15, -5, 0}, {15, -4, 0}, {15, -3, 
       0}, {15, -2, Rational[1, 260]}, {15, -1, Rational[1, 260]}, {
       15, 0, Rational[1, 260]}, {15, 1, Rational[1, 260]}, {
       15, 2, Rational[1, 260]}, {15, 3, Rational[1, 260]}, {
       15, 4, Rational[1, 260]}, {15, 5, Rational[1, 260]}, {15, 6, 0}, {15, 
       7, 0}}, {{15, -7, 0}, {15, -6, 0}, {15, -5, 0}, {15, -4, 0}, {15, -3, 
       0}, {15, -2, 0.0038461538461538464`}, {
       15, -1, 0.0038461538461538464`}, {15, 0, 0.0038461538461538464`}, {
       15, 1, 0.0038461538461538464`}, {15, 2, 0.0038461538461538464`}, {
       15, 3, 0.0038461538461538464`}, {15, 4, 0.0038461538461538464`}, {
       15, 5, 0.0038461538461538464`}, {15, 6, 0}, {15, 7, 0}}]]}, 
   {RGBColor[0.47563919999999993`, 0.4235616, 0.6312158999999999], 
    Point3DBox[
     NCache[{{16, -7, 0}, {16, -6, 0}, {16, -5, 0}, {16, -4, 0}, {16, -3, 
       0}, {16, -2, Rational[1, 260]}, {16, -1, Rational[1, 260]}, {
       16, 0, Rational[1, 260]}, {16, 1, Rational[1, 260]}, {
       16, 2, Rational[1, 520]}, {16, 3, 0}, {16, 4, 0}, {16, 5, 0}, {16, 6, 
       0}, {16, 7, 0}}, {{16, -7, 0}, {16, -6, 0}, {16, -5, 0}, {16, -4, 0}, {
       16, -3, 0}, {16, -2, 0.0038461538461538464`}, {
       16, -1, 0.0038461538461538464`}, {16, 0, 0.0038461538461538464`}, {
       16, 1, 0.0038461538461538464`}, {16, 2, 0.0019230769230769232`}, {16, 
       3, 0}, {16, 4, 0}, {16, 5, 0}, {16, 6, 0}, {16, 7, 0}}]]}, 
   {RGBColor[0.6948711, 0.3883986, 0.0921483], 
    Point3DBox[{{17, -7, 0}, {17, -6, 0}, {17, -5, 0}, {17, -4, 0}, {17, -3, 
     0}, {17, -2, 0}, {17, -1, 0}, {17, 0, 0}, {17, 1, 0}, {17, 2, 0}, {17, 3,
      0}, {17, 4, 0}, {17, 5, 0}, {17, 6, 0}, {17, 7, 0}}]}, 
   {RGBColor[0.3275082, 0.5566509, 0.7041141], 
    Point3DBox[{{18, -7, 0}, {18, -6, 0}, {18, -5, 0}, {18, -4, 0}, {18, -3, 
     0}, {18, -2, 0}, {18, -1, 0}, {18, 0, 0}, {18, 1, 0}, {18, 2, 0}, {18, 3,
      0}, {18, 4, 0}, {18, 5, 0}, {18, 6, 0}, {18, 7, 0}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  PlotRange->{{-18, 18}, {-7, 7}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.619791212949226*^9}]
}, Open  ]],

Cell[TextData[{
 "We see, that all the points on the boundary of (",
 StyleBox["Transpose[mM]", "Code"],
 " times) the unit cube  are different from the other coefficients and \
furthermore"
}], "Text",
 CellChangeTimes->{{3.585554979875434*^9, 3.585555008858918*^9}, 
   3.5855710590589657`*^9, {3.585573426838724*^9, 3.585573445322324*^9}, {
   3.5855735049926443`*^9, 3.58557352650259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"computeBracketSums", "[", 
   RowBox[{"ckDMIP", ",", "origin", ",", " ", "mM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5855550182078123`*^9, 3.585555019442287*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"], ",", 
   FractionBox["1", "260"]}], "}"}]], "Output",
 CellChangeTimes->{3.619791213378463*^9}]
}, Open  ]],

Cell["which means, that", "Text",
 CellChangeTimes->{{3.5855550281786127`*^9, 3.5855550347992496`*^9}, 
   3.585571064717865*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dMIP", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ckDMIP", "[", 
       RowBox[{"[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["k", "1"], ",", 
             SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], "]"}],
        "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["k", "1"], ",", 
           SubscriptBox["k", "2"]}], "}"}], ".", "x"}]}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "2"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.58555504893687*^9, 3.585555051644699*^9}}],

Cell["\<\
is a Lagrange interpolator, more precisely, from the pattern only y = 0 is 1, \
all other sampling points are zero : We use as in Example 1\
\>", "Text",
 CellChangeTimes->{{3.585555054440035*^9, 3.585555091435402*^9}, {
  3.585555140899523*^9, 3.5855551593004723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "v", "}"}], " ", "=", " ", 
  RowBox[{"patternBasis", "[", "mM", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["2", "65"], ",", 
    FractionBox["1", "260"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.61979121341616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", " ", "=", " ", 
  RowBox[{
   RowBox[{"IntegerSmithForm", "[", 
    RowBox[{"mM", ",", " ", 
     RowBox[{"ExtendedForm", "\[Rule]", " ", "False"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585541828015502*^9, 3.5855418519423*^9}, {
  3.5855421984034157`*^9, 3.5855422048278418`*^9}}],

Cell[BoxData["260"], "Output",
 CellChangeTimes->{3.619791213445437*^9}]
}, Open  ]],

Cell["to obtain", "Text",
 CellChangeTimes->{{3.585555147954064*^9, 3.585555159300962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"dMIP", "[", 
     RowBox[{"2", "\[Pi]", " ", "*", " ", 
      RowBox[{"modM", "[", 
       RowBox[{
        RowBox[{"k", "*", "v"}], ",", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"Target", "\[Rule]", " ", "\"\<Symmetric\>\""}]}], "]"}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", 
     RowBox[{"\[Epsilon]", "-", "1"}]}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.585555093078455*^9, 3.585555121409191*^9}, {
  3.585555172600874*^9, 3.5855552206250067`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.7755575615628914`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.7755575615628914`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "0.`", ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.7755575615628914`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.7755575615628914`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"5.551115123125783`*^-17", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.619791216884012*^9}]
}, Open  ]],

Cell["where we ignore rounding errors to obtain", "Text",
 CellChangeTimes->{{3.585555233031055*^9, 3.585555251196608*^9}, 
   3.58557111842624*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.58555522349825*^9, 3.585555226073407*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6197912170114403`*^9}]
}, Open  ]],

Cell["We can also use the method of the Bracket sums to see", "Text",
 CellChangeTimes->{{3.585555278921084*^9, 3.5855552991743917`*^9}, 
   3.585571385816674*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMBSq", " ", "=", " ", 
  RowBox[{"computeBracketSums", "[", 
   RowBox[{"ckDM", ",", "origin", ",", "mM", ",", " ", 
    RowBox[{"Compute", "\[Rule]", " ", "\"\<absolute Squares\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.585555301182507*^9, 3.585555346537491*^9}, 
   3.585555411844802*^9, {3.5855714003932447`*^9, 3.585571410833631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.619791217299995*^9}]
}, Open  ]],

Cell["\<\
Which is in this case of course the same. In order to orthonormalize the \
translates (cf. Cor. 3.6 in [1]), we can compute similar to the last case\
\>", "Text",
 CellChangeTimes->{{3.5855714155285187`*^9, 3.585571534346879*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ckDMon", " ", "=", " ", 
  RowBox[{"getFourierFromSpace", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Det", "[", "mM", "]"}], "]"}], "dMBSq"}], "]"}], ")"}]}], 
    ",", "ckDM", ",", "origin", ",", "mM"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585571546532166*^9, 3.5855715775028763`*^9}, {
   3.585571617080614*^9, 3.585571617552743*^9}, 3.619799789205578*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["130"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["65"]}]], ",", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["130"]}]], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6197912174831944`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dMon", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ckDMon", "[", 
       RowBox[{"[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["k", "1"], ",", 
             SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], "]"}],
        "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"I", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["k", "1"], ",", 
           SubscriptBox["k", "2"]}], "}"}], ".", "x"}]}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "2"], ",", 
       RowBox[{"-", 
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.58555504893687*^9, 3.585555051644699*^9}, {
  3.5855716127161427`*^9, 3.585571622683568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dMonTerm", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"dMon", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.585571627908588*^9, 3.5855716662434053`*^9}}],

Cell[TextData[{
 "Then the usual scalar product on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["L", 
     RowBox[{"2", "\[Pi]"}], "2"], "(", 
    SuperscriptBox["\[DoubleStruckCapitalT]", "2"], ")"}], 
   TraditionalForm]]],
 " yields"
}], "Text",
 CellChangeTimes->{{3.585571713541593*^9, 3.585571730581573*^9}, {
  3.585571769142817*^9, 3.585571796904728*^9}, {3.585571832503927*^9, 
  3.585571917421582*^9}, {3.585573265513617*^9, 3.585573285436666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "\[Pi]"}], ")"}], "^", "2"}]}], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "dMonTerm", "]"}], "^", "2"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "2"], ",", 
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5855716692166643`*^9, 3.5855717107597303`*^9}, {
  3.585571785435812*^9, 3.585571813145741*^9}}],

Cell[BoxData["0.9999999951706047`"], "Output",
 CellChangeTimes->{3.619791251282453*^9}]
}, Open  ]],

Cell[TextData[{
 "and as an example of the orthogonality of the translates using one \
translate by ",
 StyleBox["v", "Code"],
 " and the Parseval\[CloseCurlyQuote]s equation on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["L", 
     RowBox[{"2", "\[Pi]"}], "2"], "(", 
    SuperscriptBox["\[DoubleStruckCapitalT]", "2"], ")"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.5855719241146812`*^9, 3.585571930758102*^9}, 
   3.58557202318808*^9, {3.5855721872537737`*^9, 3.585572205088848*^9}, {
   3.58557244618823*^9, 3.585572453980501*^9}, {3.585573308253937*^9, 
   3.585573323923217*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ckDMon", "[", 
     RowBox[{"[", 
      RowBox[{"Sequence", " ", "@@", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["k", "1"], ",", 
           SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], "]"}], 
     "]"}], "*", 
    RowBox[{"Conjugate", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Pi]", " ", "I", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["k", "1"], ",", 
           SubscriptBox["k", "2"]}], "}"}], ".", "v"}]}], "]"}], "*", 
      RowBox[{"ckDMon", "[", 
       RowBox[{"[", 
        RowBox[{"Sequence", " ", "@@", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["k", "1"], ",", 
             SubscriptBox["k", "2"]}], "}"}], "+", "origin"}], ")"}]}], "]"}],
        "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["k", "1"], ",", 
     RowBox[{"-", 
      RowBox[{"max", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"max", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["k", "2"], ",", 
     RowBox[{"-", 
      RowBox[{"max", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"max", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.585572209175337*^9, 3.585572245363859*^9}, {
  3.5855723148531427`*^9, 3.585572405123825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "10"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "10"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"8", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "5"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "5"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"27", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"27", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"14", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"14", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"29", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"29", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"31", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"31", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"16", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"16", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"33", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"33", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"18", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"18", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"37", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"37", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"41", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"41", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"43", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"43", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"22", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"22", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"47", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"47", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"24", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"24", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"49", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"49", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"5", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"51", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"51", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"53", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"53", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"27", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"27", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"28", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"28", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"57", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"57", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"29", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"29", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"59", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"59", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"61", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"61", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"31", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"31", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"63", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"63", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"32", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"32", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"33", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"33", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"67", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"67", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"34", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"34", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"69", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"69", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"71", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"71", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"36", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"36", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"73", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"73", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"37", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"37", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"15", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"15", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"38", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"38", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"77", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"77", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"79", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"79", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"8", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"8", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"81", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"81", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"41", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"41", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"83", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"83", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"42", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"42", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"17", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"43", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"43", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"87", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"87", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"44", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"44", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"89", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"89", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"46", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"46", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"93", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"93", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"47", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"47", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"19", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"48", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"48", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"97", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"97", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"49", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"49", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"99", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"99", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"10", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"101", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"101", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"51", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"51", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"103", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"103", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "5"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"21", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"53", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"53", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"107", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"107", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"54", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"54", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"109", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"109", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"11", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"111", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"111", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"56", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"56", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"113", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"113", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"57", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"57", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"23", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"58", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"58", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"9", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "10"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"59", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"59", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"119", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"119", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"12", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "13"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"121", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"121", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"61", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"61", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"123", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"123", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"62", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"62", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"25", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"25", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "26"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"63", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"63", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"127", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"127", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"64", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"64", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "65"]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"129", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "130"]}]]}], "+", 
  RowBox[{
   FractionBox["1", "260"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"129", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
     "130"]]}]}]], "Output",
 CellChangeTimes->{3.619791251519239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.585572410758004*^9, 3.585572413628503*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.619791251559002*^9}]
}, Open  ]],

Cell["and hence orthogonality.", "Text",
 CellChangeTimes->{{3.585573668800918*^9, 3.585573683655137*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Literature", "Subsection",
 CellChangeTimes->{{3.5855496850460997`*^9, 3.585549704447104*^9}}],

Cell[TextData[{
 "[1] D.Langemann, J.Prestin, ",
 StyleBox["Multivariate periodic wavelet analysis",
  FontSlant->"Italic"],
 ", Appl. Comput. Harmon. Anal.28 (2010) 46\[Dash]66, doi: ",
 ButtonBox["10.1016/j.acha.2009.07.001",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1016/j.acha.2009.07.001"], None},
  ButtonNote->"http://dx.doi.org/10.1016/j.acha.2009.07.001"]
}], "Text",
 CellChangeTimes->{{3.585572743433515*^9, 3.5855727700311747`*^9}, {
  3.585572815682597*^9, 3.585572827302051*^9}, {3.5855729088742723`*^9, 
  3.585572921318075*^9}, {3.585572952515403*^9, 3.5855729533714447`*^9}, {
  3.585573029780456*^9, 3.5855730747618303`*^9}, {3.58557312806185*^9, 
  3.5855731291290207`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 714},
WindowMargins->{{Automatic, 612}, {Automatic, 30}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3619798403-5813794"->{
  Cell[7185, 226, 791, 15, 58, "Print",
   CellTags->"Info3619798403-5813794"]},
 "Info3619798412-5813794"->{
  Cell[343170, 5890, 1491, 22, 421, "Print",
   CellTags->"Info3619798412-5813794"],
  Cell[349496, 6009, 893, 13, 250, "Print",
   CellTags->"Info3619798412-5813794"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3619798403-5813794", 529966, 10684},
 {"Info3619798412-5813794", 530076, 10687}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 198, 3, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[780, 27, 320, 4, 92, "Title"],
Cell[1103, 33, 317, 6, 29, "Subsubtitle"],
Cell[1423, 41, 198, 6, 74, "Program"],
Cell[CellGroupData[{
Cell[1646, 51, 98, 1, 35, "Subsubsection"],
Cell[1747, 54, 872, 18, 228, "Program"]
}, Closed]],
Cell[CellGroupData[{
Cell[2656, 77, 156, 2, 36, "Subsection"],
Cell[2815, 81, 270, 7, 31, "Text"],
Cell[3088, 90, 635, 18, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3760, 113, 156, 2, 44, "Subsection"],
Cell[3919, 117, 249, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[4193, 126, 495, 13, 28, "Input"],
Cell[4691, 141, 674, 19, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5402, 165, 155, 3, 28, "Input"],
Cell[5560, 170, 96, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5693, 176, 1194, 36, 28, "Input"],
Cell[6890, 214, 139, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7066, 222, 116, 2, 28, "Input"],
Cell[7185, 226, 791, 15, 58, "Print",
 CellTags->"Info3619798403-5813794"]
}, Open  ]],
Cell[7991, 244, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[8150, 249, 155, 3, 28, "Input"],
Cell[8308, 254, 138, 3, 28, "Output"]
}, Open  ]],
Cell[8461, 260, 203, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[8689, 268, 1359, 39, 46, "Input"],
Cell[10051, 309, 3910, 90, 710, "Output"]
}, Open  ]],
Cell[13976, 402, 94, 1, 28, "Input"],
Cell[14073, 405, 132, 2, 30, "Text"],
Cell[14208, 409, 1274, 40, 28, "Input"],
Cell[15485, 451, 140, 2, 30, "Text"],
Cell[15628, 455, 231, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[15884, 465, 478, 12, 28, "Input"],
Cell[16365, 479, 326372, 5395, 262, "Output"]
}, Open  ]],
Cell[342752, 5877, 263, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[343040, 5886, 127, 2, 28, "Input"],
Cell[343170, 5890, 1491, 22, 421, "Print",
 CellTags->"Info3619798412-5813794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344698, 5917, 321, 6, 28, "Input"],
Cell[345022, 5925, 2858, 38, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347917, 5968, 150, 3, 28, "Input"],
Cell[348070, 5973, 96, 1, 28, "Output"]
}, Open  ]],
Cell[348181, 5977, 1159, 24, 54, "Text"],
Cell[CellGroupData[{
Cell[349365, 6005, 128, 2, 28, "Input"],
Cell[349496, 6009, 893, 13, 250, "Print",
 CellTags->"Info3619798412-5813794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350426, 6027, 382, 10, 28, "Input"],
Cell[350811, 6039, 14024, 367, 685, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364872, 6411, 223, 5, 28, "Input"],
Cell[365098, 6418, 10656, 187, 710, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375791, 6610, 1231, 37, 46, "Input"],
Cell[377025, 6649, 29042, 473, 286, "Output"]
}, Open  ]],
Cell[406082, 7125, 393, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[406500, 7137, 207, 4, 28, "Input"],
Cell[406710, 7143, 8935, 263, 428, "Output"]
}, Open  ]],
Cell[415660, 7409, 129, 2, 30, "Text"],
Cell[415792, 7413, 1275, 40, 28, "Input"],
Cell[417070, 7455, 280, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[417375, 7464, 122, 3, 28, "Input"],
Cell[417500, 7469, 187, 6, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417724, 7480, 389, 9, 28, "Input"],
Cell[418116, 7491, 72, 1, 28, "Output"]
}, Open  ]],
Cell[418203, 7495, 91, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[418319, 7500, 620, 16, 28, "Input"],
Cell[418942, 7518, 24467, 515, 533, "Output"]
}, Open  ]],
Cell[443424, 8036, 148, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[443597, 8042, 122, 2, 28, "Input"],
Cell[443722, 8046, 2838, 38, 97, "Output"]
}, Open  ]],
Cell[446575, 8087, 163, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[446763, 8093, 375, 7, 28, "Input"],
Cell[447141, 8102, 2834, 38, 97, "Output"]
}, Open  ]],
Cell[449990, 8143, 240, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[450255, 8151, 495, 12, 28, "Input"],
Cell[450753, 8165, 25210, 881, 1487, "Output"]
}, Open  ]],
Cell[475978, 9049, 1326, 41, 28, "Input"],
Cell[477307, 9092, 328, 9, 28, "Input"],
Cell[477638, 9103, 476, 13, 34, "Text"],
Cell[CellGroupData[{
Cell[478139, 9120, 635, 19, 28, "Input"],
Cell[478777, 9141, 88, 1, 28, "Output"]
}, Open  ]],
Cell[478880, 9145, 617, 15, 34, "Text"],
Cell[CellGroupData[{
Cell[479522, 9164, 1614, 51, 46, "Input"],
Cell[481139, 9217, 47104, 1411, 828, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528280, 10633, 127, 2, 28, "Input"],
Cell[528410, 10637, 70, 1, 28, "Output"]
}, Open  ]],
Cell[528495, 10641, 106, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528638, 10647, 100, 1, 44, "Subsection"],
Cell[528741, 10650, 724, 15, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
