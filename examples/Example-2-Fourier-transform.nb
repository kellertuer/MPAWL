(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     55651,       1357]
NotebookOptionsPosition[     51742,       1223]
NotebookOutlinePosition[     52563,       1253]
CellTagsIndexPosition[     52435,       1247]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Example 2", "Subsubtitle",
 CellChangeTimes->{{3.561784903322611*^9, 3.561784914734438*^9}, {
  3.5855442449811163`*^9, 3.585544245709262*^9}, {3.585544364225713*^9, 
  3.585544364400597*^9}, {3.585544546786407*^9, 3.585544547049386*^9}}],

Cell[CellGroupData[{

Cell["The Fourier transform", "Title",
 CellChangeTimes->{{3.561784933316359*^9, 3.561784950590352*^9}, {
  3.5617882095607243`*^9, 3.561788217874277*^9}, {3.585537636231443*^9, 
  3.585537653026313*^9}, {3.585542528085225*^9, 3.58554253224314*^9}, {
  3.585544162354004*^9, 3.5855441725463533`*^9}, {3.5855445490096292`*^9, 
  3.585544552121216*^9}}],

Cell["\<\
This example demonstrates, that the Fourier transform can be used fortwo \
different kinds of data sets.\
\>", "Subsubtitle",
 CellChangeTimes->{{3.561788081362376*^9, 3.56178816956818*^9}, {
  3.5855441822319193`*^9, 3.5855442385494347`*^9}, {3.5855445841757603`*^9, 
  3.5855446199258966`*^9}}],

Cell["\<\
Author: \t\tRonny Bergmann
Created: \t\t15.08.2013
Last Changed: \t15.08.2013\
\>", "Program",
 CellChangeTimes->{{3.585540461223832*^9, 3.585540470991144*^9}, 
   3.5855435520430107`*^9}],

Cell[CellGroupData[{

Cell["License", "Subsubsection",
 CellChangeTimes->{{3.585537355831193*^9, 3.585537363963532*^9}}],

Cell["\<\
    This file is part of MPAWL.
  
      MPAWL is free software : you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
  
      MPAWL is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
  
      You should have received a copy of the GNU General Public License
    along with the MPAWL. If not, see <http://www.gnu.org/licenses/>.\
\>", "Program",
 CellChangeTimes->{{3.585537405416844*^9, 3.585537461767535*^9}, {
  3.585537502312166*^9, 3.585537513376918*^9}, {3.585537694042321*^9, 
  3.5855377067755623`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Loading the Library", "Subsection",
 CellChangeTimes->{{3.561785031749501*^9, 3.561785066774623*^9}, {
  3.585537743617692*^9, 3.585537746062161*^9}}],

Cell[TextData[{
 "The MPAWL is located in the parent directory (see ",
 StyleBox["MPAWL.m", "Program"],
 ") in order to load the library, we add its path to ",
 StyleBox["$Path", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.585537766270393*^9, 3.585537868296885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"$Path", ",", 
     RowBox[{"{", 
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "to", " ", "actual", " ", "directory"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<MPAWL`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.561784454440884*^9, 3.561784464446355*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The data set as a matrix", "Subsection",
 CellChangeTimes->{{3.585542611369248*^9, 3.585542622864993*^9}, {
  3.5855446303364973`*^9, 3.58554463850933*^9}}],

Cell["\<\
Let' s look at a matrix having more than one cycle (in contrast to the matrix \
from Example 1). For\
\>", "Text",
 CellChangeTimes->{{3.5855446450184097`*^9, 3.585544679011527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mM", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"16", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "16"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"MatrixForm", "[", "mM", "]"}]}]], "Input",
 CellChangeTimes->{{3.585544674567384*^9, 3.585544691556964*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"16", "4"},
     {"0", "16"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.585573947714201*^9}]
}, Open  ]],

Cell["We have", "Text",
 CellChangeTimes->{{3.585544693627241*^9, 3.585544694267748*^9}, 
   3.58554473393038*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"patternDimension", "[", "mM", "]"}]], "Input",
 CellChangeTimes->{{3.5855446991123743`*^9, 3.5855447032337303`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.585573947748969*^9}]
}, Open  ]],

Cell["and", "Text",
 CellChangeTimes->{{3.585544705244916*^9, 3.585544733930869*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["v", "1"], ",", 
    SubscriptBox["v", "2"]}], "}"}], " ", "=", " ", 
  RowBox[{"patternBasis", "[", "mM", "]"}]}]], "Input",
 CellChangeTimes->{{3.5855447104346848`*^9, 3.5855447153384657`*^9}, {
  3.5855455451293497`*^9, 3.585545562553149*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "64"], ",", 
     RowBox[{"-", 
      FractionBox["1", "16"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5855739477833853`*^9}]
}, Open  ]],

Cell["\<\
where the elementary divisors are\
\>", "Text",
 CellChangeTimes->{{3.585544738849497*^9, 3.585544755392313*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[Epsilon]", "1"], ",", 
    SubscriptBox["\[Epsilon]", "2"]}], "}"}], " ", "=", " ", 
  RowBox[{"Diagonal", "[", 
   RowBox[{"IntegerSmithForm", "[", 
    RowBox[{"mM", ",", 
     RowBox[{"ExtendedForm", "\[Rule]", " ", "False"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.585544756954894*^9, 3.585544777682675*^9}, {
  3.585545608215355*^9, 3.585545615871068*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "64"}], "}"}]], "Output",
 CellChangeTimes->{3.585573947816279*^9}]
}, Open  ]],

Cell["and hence", "Text",
 CellChangeTimes->{{3.585545399365362*^9, 3.585545401975342*^9}, 
   3.585547353923274*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"pattern", "[", 
   RowBox[{"getPatternNormalform", "[", "mM", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5855454028999968`*^9, 3.58554544744916*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJx11kmuElEYgFF0J67EPbgEE8duwSW4BIYO34ABAwaEEEIIITSPvntWB1S7
BY1SJJzonfz5KsWtOpUU8OHz109f3jd+r3eNxp/5Z719/Pe80p4//Tu/1Z3Q
JT2kD/f58z4jOqe79Oa+X90BndIv9Ovz5x6uAH+AP8Af4A/wB/gD/CH+EH+I
P8Qf4g/xh/hD/BH+CH+EP8If4Y/wR/gj/DHXifHH+GP8Mf4Yf4w/xp/gT/An
+BP8Cf4Ef4I/wX/Bf8F/wX/Bf8F/wX/Bf8Hve379z6zXFT/P6dElPaRr/w3/
Df8N/w3/Df8N/w3/DX+KP8Wd4k/xp/hT/Cn+FH+GP8Of4c/wZ/gz/Bn+DH+O
P8ef48/x5/hz/Dn+HH+Bv+C6Bf4Cf4G/wF/gL/CX+Ev8Jf4Sf4m/xF/iL/FX
+Cv8Ff4Kf4W/wl/hr/DXy99533vX3d/4/ux/dEkP6drfxN/E38TffPY3fjz7
H53SL/Qrx9/oK12vumt/C38Lfwt/C38bfxt/G38bfwd/B38HRwd/F38Xfxd/
F38Pfw9/D38Pfx9/H3+f++jjH+Af4B/gH+Af4h/iH+If4h/hH+Efsc8I/xj/
GP8Y/xj/BP8E/wT/BP8U/xT/FP+U4zP8M/wz/DP8c/xz/HP8c/wL/Av8C/wL
/K/4/V/k96TPbYl/iX+Jf4l/hX+Ff4V/hX+Nf41/jX+Na4N/g3+Df4N/i3+L
f4t/i3+Hf4d/h3/Hfe3x7/Hv8e/xH/Af8B/wH/Af8R/xH/Ef2feE/4T/hP+E
/4z/jP+M//zw/wKL0Tyh
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 0.984375}, {0, 0.9375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.0196875, 0.0196875}, {0.01875, 0.01875}}]], "Output",
 CellChangeTimes->{3.585573948049129*^9}]
}, Open  ]],

Cell[TextData[{
 "is the same as (where ",
 StyleBox["Flatten[...,1]", "Code"],
 " is used to get a vector of points instead of a matrix)"
}], "Text",
 CellChangeTimes->{{3.585545520776881*^9, 3.585545522254546*^9}, {
  3.5855457154554033`*^9, 3.5855457600712852`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"modM", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["k", "1"], "*", 
          SubscriptBox["v", "1"]}], "+", 
         RowBox[{
          SubscriptBox["k", "2"], 
          SubscriptBox["v", "2"]}]}], ",", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"Target", "\[Rule]", " ", "\"\<Symmetric\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["k", "1"], ",", "0", ",", 
        RowBox[{
         SubscriptBox["\[Epsilon]", "1"], "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["k", "2"], ",", "0", ",", 
        RowBox[{
         SubscriptBox["\[Epsilon]", "2"], "-", "1"}]}], "}"}]}], "]"}], ",", 
    "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5855455271794567`*^9, 3.585545658174035*^9}, {
  3.585545696804769*^9, 3.585545703812462*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJx1102O2kAQhmGSm+QkuUOOECnrXIUjsGTphRcsLMVCloUQQgPG/Bhjz1ES
ZeqtxaukN6ViaOin7a/xfPn+89uPz4s/49Ni8bf+cyy/ftTi10ddRV9Hv45+
F30R/Vv0ZfSX6DfR36Ovoh+jr6N/j37L36M2zI/a8vmsg++PutfrB9Yf9YhP
8xgn+c/yd/Jf5O/lv8p/k/8u/0P+Qf6n/KMcL/kn+Wf5+V7GzHWNOnGdor6i
4seB/8m+RB1w4tM8XmcdN/4e67tqn3rtO9+Dv2N90Z91n53+c98yjvIf5N/L
v5O/lb+Rcyt/LX8l/0b+Uv5C/rX8K/mX8jOYT/5zvu4f8l+oMkqti/zjJP87
rYv9I/+5f8oP+R/lZP/IP/tH/tk/8p+5VT3Jf5a/k/sify//Vf6b/Hf5H/IP
8j/lH+V/yT/JP2vdzMNP/vP80HUi/4XWwSD/+Mk/fvKffuWH/Of5qfeR/1Hv
w0H+8ZN//OTf5zb+o/wH+ffy7+Rv5W/k38pfy1/JtZG/lL+Qfy3/Sv6l/Azm
k/+cr/uH/Of5o/yQf/Yv8x+10rxa6yD/uX/KD/nP81fXkfyzf5n/6Ml//m4p
Byf5z/J38vsc6eW/ynmT/y7/Q/5B/qf8o/wv+Sf5Z/nfVWd9LvlnneT/os/B
T/7xZ/6jJ/+F1sUg/3l+KifkP5+/lJ9Or2f+ub7Kz5v8R/kP8u/l38nfyt/I
v5W/lr+SfyN/KX8hx1r+lfxL+RnMJ/85X9eJ/I9ysH/kP59fdJ+Tf/Yvf//Z
H+Wn0fvIf6H3Mch/Pr9pn8m/rxv+k/xn+Tv5/Tvay3+V/yb/Xf6HXIP8T/lH
+V/yT/LP8ufvv/Kf54fuH/I/qvI55D//f1F+yH/6dR3If56fyg/5z+cv3cfk
P/9/U37Iv5/bqUf5D/Lv5fY+tvI38m/lr+Wv5N/IX8pfyL+WfyX/Mtf9G3xi
gWE=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Method->{},
  PlotRange->{{-0.5, 0.484375}, {-0.5, 0.4375}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.0196875, 0.0196875}, {0.01875, 0.01875}}]], "Output",
 CellChangeTimes->{3.5855739483163137`*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{
     RowBox[{
     "If", " ", "we", " ", "think", " ", "of", " ", "these", " ", "points", 
      " ", "as", " ", "sampling", " ", "points", " ", "and", " ", "scale", 
      " ", "them", " ", "onto", " ", "the", " ", 
      RowBox[{"torus", " ", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}]}]}], ")"}], "2"], ",", " ", 
   RowBox[{
    RowBox[{"i", ".", "e", ".", " ", "by"}], " ", "multiplying", " ", "them", 
    " ", "with", " ", "2", "\[Pi]"}], ",", " ", 
   RowBox[{
    RowBox[{
    "we", " ", "obtain", " ", "a", " ", "matrix", " ", "of", " ", "dimension",
      " ", 
     SubscriptBox["\[Epsilon]", "1"], "\[Times]", 
     SubscriptBox["\[Epsilon]", "2"]}], " ", "=", " ", 
    RowBox[{
    "4", "\[Times]", "64", "  ", "of", " ", "sampling", " ", "values"}]}], 
   ",", " ", 
   RowBox[{"for", " ", "example"}]}],
  FontFamily->"Arial"]], "Text",
 CellChangeTimes->{{3.5855457861983633`*^9, 3.585545911169107*^9}, {
  3.585546956811541*^9, 3.585546976040462*^9}, {3.5855474821231117`*^9, 
  3.58554749548534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"Table", "[", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["k", "1"], "==", " ", "0"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["k", "2"], "==", " ", "0"}], ")"}]}], ",", "1", ",", 
      "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["k", "1"], ",", "0", ",", 
      RowBox[{
       SubscriptBox["\[Epsilon]", "1"], "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["k", "2"], ",", "0", ",", 
      RowBox[{
       SubscriptBox["\[Epsilon]", "2"], "-", "1"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.585545958981542*^9, 3.5855460224548388`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5855739483515253`*^9}]
}, Open  ]],

Cell["We obtain its Fourier Transform with respect to mM by", "Text",
 CellChangeTimes->{{3.585546038925001*^9, 3.585546057943142*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FourierTransformTorus"}]], "Input",
 CellChangeTimes->{{3.585546102055772*^9, 3.58554610599687*^9}}],

Cell[BoxData[
 StyleBox["\<\"FourierTransformTorus[mM, b]\\n\\nPerform the Fourier \
transform on the pattern with respect to mM. b is either a\\nvector of length \
m=|Det[mM]| or adressing the points with respect to the basis\\nof the \
pattern, i.e. the cycles having the length of the elementary \
divisors.\\n\\n\\!\\(\\*StyleBox[\\\"Options\\\",FontWeight\[Rule]\\\"Bold\\\"\
]\\)\\n\\nValidate \[Rule] \\!\\(\\*StyleBox[\\\"True\\\",\\nFontSlant\[Rule]\
\\\"Italic\\\"]\\) | False\\n\\twhether to perform a check (via \
isMatrixValid[mM]) on the matrix mM\\n\\tand the check, whether the Origin is \
in Range.\\n\\nCompute \[Rule] \
\\!\\(\\*StyleBox[\\\"\[OpenCurlyDoubleQuote]Numeric\[CloseCurlyDoubleQuote]\\\
\",\\nFontSlant\[Rule]\\\"Italic\\\"]\\) | \[OpenCurlyDoubleQuote]Exact\
\[CloseCurlyDoubleQuote]\\n\\tProviding numerical data, the Fourier method is \
used to perform the\\n\\ttransform using FFT techniques. If all entries of mM \
and b are given exact,\\n\\tthe \[OpenCurlyDoubleQuote]Exact\
\[CloseCurlyDoubleQuote] computation can be used to obtain the exact \
transform\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.585573948575572*^9},
 CellTags->"Info3585581148-4340400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hatb", " ", "=", " ", 
  RowBox[{"FourierTransformTorus", "[", 
   RowBox[{"mM", ",", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585546060684635*^9, 3.5855460920509033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`",
      ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`",
      ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`",
      ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`",
      ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
     "0.0625`", ",", "0.0625`", ",", "0.0625`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5855739488700113`*^9}]
}, Open  ]],

Cell["which can also be switched to exact computations", "Text",
 CellChangeTimes->{{3.585546143833268*^9, 3.5855461538978033`*^9}, 
   3.585547324134453*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hatb", " ", "=", " ", 
  RowBox[{"FourierTransformTorus", "[", 
   RowBox[{"mM", ",", "b", ",", " ", 
    RowBox[{"Compute", "\[Rule]", " ", "\"\<Exact\>\""}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.5855461334750557`*^9, 3.585546137385312*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.585573949059682*^9}]
}, Open  ]],

Cell["\<\
Of course now, the values correspond to the same order used above with \
respect to the basis of the generating set\
\>", "Text",
 CellChangeTimes->{{3.585548248447962*^9, 3.585548301514982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generatingSetBasis", "[", 
  RowBox[{"Transpose", "[", "mM", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.585548281368471*^9, 3.585548291406822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.585573949091456*^9}]
}, Open  ]],

Cell["Due to ", "Text",
 CellChangeTimes->{{3.5855462882349052`*^9, 3.585546288922772*^9}, 
   3.585547335023238*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"Det", "[", "mM", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.585546292152486*^9, 3.585546295107946*^9}}],

Cell[BoxData["256"], "Output",
 CellChangeTimes->{3.5855739491205873`*^9}]
}, Open  ]],

Cell["\<\
this is of course the unitary version of the Fourier transform and hence\
\>", "Text",
 CellChangeTimes->{{3.585546298892672*^9, 3.58554630992238*^9}, 
   3.5855469452957582`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransformTorus", "[", 
  RowBox[{"mM", ",", "hatb", ",", " ", 
   RowBox[{"Compute", "\[Rule]", " ", "\"\<Exact\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5855462751809998`*^9, 3.5855462776595287`*^9}, {
  3.5855463134180927`*^9, 3.5855463271460867`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.585573949432569*^9}]
}, Open  ]],

Cell[TextData[{
 "But we could also reshape the data to be a vector by ordering the indices \
",
 StyleBox["{0, 0}, ..., {3, 63}", "Code"],
 " lexicographically, i.e. ",
 StyleBox["{0, 0}, {0, 1}, ..., {1, 0}, {1, 1}, ... {3, 62}, {3, 63}", "Code"],
 ". For details see [1]."
}], "Text",
 CellChangeTimes->{{3.585546392635366*^9, 3.5855464854895697`*^9}, {
  3.58557250025395*^9, 3.5855725205922327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "reshapeData"}]], "Input",
 CellChangeTimes->{{3.585546371910028*^9, 3.585546377072661*^9}}],

Cell[BoxData[
 StyleBox["\<\"reshapeData[M,data,direction]\\n\\nPerform a reshape of data, \
where direction denotes\\nTrue: From vector to matrix\\nFalse: The other way \
around\\n\\n\\!\\(\\*StyleBox[\\\"Options\\\",FontWeight\[Rule]\\\"Bold\\\"]\\\
)\\n\\nValidate \[Rule] \
\\!\\(\\*StyleBox[\\\"True\\\",\\nFontSlant\[Rule]\\\"Italic\\\"]\\) | \
False\\n\\twhether to perform a check (via isMatrixValid[mM]) on the matrix \
mM\\n\\tand the check, whether the Origin is in Range.\"\>", "MSG"]], "Print",\
 "PrintUsage",
 CellChangeTimes->{3.5855739496401663`*^9},
 CellTags->"Info3585581149-4340400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b2", " ", "=", " ", 
  RowBox[{"reshapeData", "[", 
   RowBox[{"mM", ",", "b", ",", "False"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585546360540142*^9, 3.585546370039955*^9}, {
  3.585546503114584*^9, 3.585546512603394*^9}, {3.585546607120615*^9, 
  3.585546607821887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{3.58557394981886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hatb2", " ", "=", " ", 
  RowBox[{"FourierTransformTorus", "[", 
   RowBox[{"mM", ",", "b2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585546598722905*^9, 3.585546634046604*^9}, {
  3.585546793382532*^9, 3.585546801462391*^9}, {3.5855468349491587`*^9, 
  3.585546837094754*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", 
   ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", 
   "0.0625`", ",", "0.0625`", ",", "0.0625`", ",", "0.0625`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.585573949876245*^9}]
}, Open  ]],

Cell[TextData[{
 "again using the above ordering of the indices but now with respect to the \
generating set of ",
 StyleBox["Transpose[mM]", "Code"],
 ". Of course the inverse transform yields again "
}], "Text",
 CellChangeTimes->{{3.5855468774691553`*^9, 3.5855468879943237`*^9}, 
   3.585546935657735*^9, {3.585548329606914*^9, 3.585548361813231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransformTorus", "[", 
  RowBox[{"mM", ",", "hatb2"}], "]"}]], "Input",
 CellChangeTimes->{{3.585546855411831*^9, 3.585546858466866*^9}, {
  3.585547239796562*^9, 3.5855473022363987`*^9}, {3.585547563705112*^9, 
  3.585547565469406*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.5855739499056063`*^9}]
}, Open  ]],

Cell["\<\
but of course this works if and only if the ordering of the elements in the \
vector is as just explained. Notice that while the input shape is analyzed \
automatically, i.e. whether its a vector or a matrix of data, the usual \
computation is always done numerically and the exact computation must be \
activated by the option Compute-> . Also the exact computation yields $Failed \
if any numeric number is given as does the numeric one if any element is not \
a number.\
\>", "Text",
 CellChangeTimes->{{3.5855468913053017`*^9, 3.585546929703498*^9}, {
  3.585547032323731*^9, 3.585547063915085*^9}, {3.5855471163200483`*^9, 
  3.5855472635861893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Literature", "Subsection",
 CellChangeTimes->{{3.585572592950934*^9, 3.585572600302207*^9}}],

Cell[TextData[{
 "[1] R.Bergmann, ",
 StyleBox["The fast Fourier transform and fast wavelet transform for patterns \
on the torus",
  FontSlant->"Italic"],
 ", Appl. Comp. Harmon. Anal. 35 (2013) 39\[Dash]51, doi: ",
 ButtonBox["10.1016/j.acha .2012 .07 .007",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1016/j.acha.2012.07.007"], None},
  ButtonNote->"http://dx.doi.org/10.1016/j.acha.2012.07.007"],
 "."
}], "Text",
 CellChangeTimes->{{3.585572609227313*^9, 3.585572616009447*^9}, {
  3.585572717305231*^9, 3.5855727173078423`*^9}, {3.585573098697709*^9, 
  3.5855731192963257`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 714},
WindowMargins->{{87, Automatic}, {Automatic, 77}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3585581148-4340400"->{
  Cell[16743, 465, 1214, 18, 315, "Print",
   CellTags->"Info3585581148-4340400"]},
 "Info3585581149-4340400"->{
  Cell[37773, 980, 604, 10, 213, "Print",
   CellTags->"Info3585581149-4340400"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3585581148-4340400", 52216, 1238},
 {"Info3585581149-4340400", 52329, 1241}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 244, 3, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[826, 27, 351, 5, 92, "Title"],
Cell[1180, 34, 306, 6, 29, "Subsubtitle"],
Cell[1489, 42, 198, 6, 74, "Program"],
Cell[CellGroupData[{
Cell[1712, 52, 98, 1, 35, "Subsubsection"],
Cell[1813, 55, 872, 18, 228, "Program"]
}, Closed]],
Cell[CellGroupData[{
Cell[2722, 78, 156, 2, 36, "Subsection"],
Cell[2881, 82, 270, 7, 31, "Text"],
Cell[3154, 91, 635, 18, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3826, 114, 162, 2, 44, "Subsection"],
Cell[3991, 118, 192, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[4208, 126, 349, 10, 28, "Input"],
Cell[4560, 138, 629, 18, 58, "Output"]
}, Open  ]],
Cell[5204, 159, 114, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[5343, 165, 140, 2, 28, "Input"],
Cell[5486, 169, 70, 1, 28, "Output"]
}, Open  ]],
Cell[5571, 173, 85, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[5681, 178, 315, 8, 28, "Input"],
Cell[5999, 188, 311, 11, 48, "Output"]
}, Open  ]],
Cell[6325, 202, 123, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[6473, 209, 448, 12, 28, "Input"],
Cell[6924, 223, 116, 3, 28, "Output"]
}, Open  ]],
Cell[7055, 229, 117, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[7197, 235, 211, 4, 28, "Input"],
Cell[7411, 241, 1265, 26, 238, "Output"]
}, Open  ]],
Cell[8691, 270, 269, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[8985, 280, 1016, 29, 28, "Input"],
Cell[10004, 311, 1442, 29, 238, "Output"]
}, Open  ]],
Cell[11461, 343, 1114, 28, 54, "Text"],
Cell[CellGroupData[{
Cell[12600, 375, 788, 25, 28, "Input"],
Cell[13391, 402, 3045, 51, 114, "Output"]
}, Open  ]],
Cell[16451, 456, 135, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[16611, 461, 129, 2, 28, "Input"],
Cell[16743, 465, 1214, 18, 315, "Print",
 CellTags->"Info3585581148-4340400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17994, 488, 203, 4, 28, "Input"],
Cell[18200, 494, 4729, 75, 284, "Output"]
}, Open  ]],
Cell[22944, 572, 158, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[23127, 578, 274, 6, 28, "Input"],
Cell[23404, 586, 9211, 267, 314, "Output"]
}, Open  ]],
Cell[32630, 856, 205, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[32860, 864, 174, 3, 28, "Input"],
Cell[33037, 869, 214, 7, 28, "Output"]
}, Open  ]],
Cell[33266, 879, 117, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[33408, 885, 153, 3, 28, "Input"],
Cell[33564, 890, 74, 1, 28, "Output"]
}, Open  ]],
Cell[33653, 894, 189, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[33867, 902, 292, 5, 28, "Input"],
Cell[34162, 909, 3043, 51, 114, "Output"]
}, Open  ]],
Cell[37220, 963, 405, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[37650, 976, 120, 2, 28, "Input"],
Cell[37773, 980, 604, 10, 213, "Print",
 CellTags->"Info3585581149-4340400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38414, 995, 301, 6, 28, "Input"],
Cell[38718, 1003, 2793, 38, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41548, 1046, 303, 6, 28, "Input"],
Cell[41854, 1054, 4421, 61, 267, "Output"]
}, Open  ]],
Cell[46290, 1118, 355, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[46670, 1129, 268, 5, 28, "Input"],
Cell[46941, 1136, 3340, 46, 131, "Output"]
}, Open  ]],
Cell[50296, 1185, 666, 11, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50999, 1201, 98, 1, 44, "Subsection"],
Cell[51100, 1204, 614, 15, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
